package com.validators;

import com.directi.pg.Functions;
import com.directi.pg.Logger;
import com.enums.ApplicationManagerTypes;
import com.manager.utils.CommonFunctionUtil;
import com.payment.errors.ErrorMessages;
import com.payment.exceptionHandler.PZValidationException;
import com.payment.exceptionHandler.errorcode.ErrorCodeUtils;
import com.payment.exceptionHandler.errorcode.errorcodeEnum.ErrorName;
import com.payment.exceptionHandler.errorcode.errorcodeVo.ErrorCodeVO;
import com.payment.validators.InputValidator;
import com.vo.applicationManagerVOs.*;
import org.owasp.esapi.ESAPI;
import org.owasp.esapi.ValidationErrorList;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 * Created by admin on 1/25/2016.
 */
public class AppManagerInputValidator extends InputValidator
{
    private Functions functions = new Functions();

    private Logger logger = new Logger(AppManagerInputValidator.class.getName());

    private CommonFunctionUtil commonFunctionUtil = new CommonFunctionUtil();


    public void InputValidations(CompanyProfileVO companyProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList, boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMapARGS)
    {
        Calendar calendar=Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate=calendar.getTime();
        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        boolean condOptionalEU = true;
        boolean condBankruptcy = true;
        boolean condStartUp = true;
        boolean condMerchantCountry = false;
        boolean condLicencePermision = true;

        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();

        //THIS is FOR CONVERSION OF REFERENCE TO VALUE type
        Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap=new HashMap<Boolean,Set<BankInputName>>();

        Set<BankInputName> bankInputNameSet = null;


        if(bankInputNameBooleanMapARGS==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        else
        {
            if(bankInputNameBooleanMapARGS.containsKey(false))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(false));
                bankInputNameBooleanMap.put(false,bankInputNameSet);
            }

            if(bankInputNameBooleanMapARGS.containsKey(true))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(true));
                bankInputNameBooleanMap.put(true,bankInputNameSet);
            }

        }

        bankInputNameBooleanMapARGS= new HashMap<Boolean,Set<BankInputName>>();
        //TILL HERE

        for (BankInputName input : inputList)
        {
            switch (input)
            {
                case merchantname:
                    if (!ESAPI.validator().isValidInput("merchantname", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MERCHANT_NAME);
                        validationErrorList.addError("merchantname", new PZValidationException("merchantname", ErrorMessages.INVALID_MERCHANT_NAME + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCompany_name("");
                    }
                    break;

                case locationaddress:
                    if (!ESAPI.validator().isValidInput("locationaddress", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddress(), "Description", 255, isOptional))
                    {
                        //validationErrorList.addError("locationaddress", new ValidationException("locationaddress", "Invalid Location Address:::" + companyProfileVO.getLocationAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LOCATION);
                        validationErrorList.addError("locationaddress", new PZValidationException("locationaddress", ErrorMessages.INVALID_LOCATION + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddress(),"1", errorCodeVO));
                        //companyProfileVO.setLocationAddress("");
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setAddress("");
                    }
                    break;

                case merchantcity:
                    if (!ESAPI.validator().isValidInput("merchantcity", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCity(), "StrictString", 255, isOptional))
                    {
                        //validationErrorList.addError("merchantcity", new ValidationException("merchantcity", "Invalid Merchant City :::" + companyProfileVO.getMerchantCity(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CITY);
                        validationErrorList.addError("merchantcity", new PZValidationException("merchantcity", ErrorMessages.INVALID_MERCHANT_CITY + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCity(),"1", errorCodeVO));
                        //companyProfileVO.setMerchantCity("");
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCity("");
                    }
                    break;
                case merchantstate:
                    if (!ESAPI.validator().isValidInput("merchantstate", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getState(), "StrictString", 50, isOptional))
                    {
                        //validationErrorList.addError("merchantstate", new ValidationException("merchantstate", "Invalid Merchant State :::" + companyProfileVO.getMerchantState(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_STATE);
                        validationErrorList.addError("merchantstate", new PZValidationException("merchantstate",ErrorMessages.INVALID_STATE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getState(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setState("");
                    }
                    break;
                case merchantcountry:
                    if (!ESAPI.validator().isValidInput("merchantcountry", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry(), "AppCountry", 100, isOptional))
                    {
                        //validationErrorList.addError("merchantcountry", new ValidationException("merchantcountry", "Invalid Merchant Country :::" + companyProfileVO.getMerchantCountry(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COUNTRY);
                        validationErrorList.addError("merchantcountry", new PZValidationException("merchantcountry",ErrorMessages.INVALID_COUNTRY_CODE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry(), "1",errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCountry("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry()))
                    {
                        String merchantCountry[] = companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry().split("\\|");
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCountry(merchantCountry[0].toString());
                        if(merchantCountry.length>1)
                            companyProfileVO.setCompanyRegisteredEU(merchantCountry[2].toString());
                    }
                    break;

                case merchantzipcode:
                    if (!ESAPI.validator().isValidInput("merchantzipcode", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getZipcode(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("merchantzipcode", new ValidationException("merchantzipcode", "Invalid Merchant Zip:::" + companyProfileVO.getMerchantZipCode(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ZIP);
                        validationErrorList.addError("merchantzipcode", new PZValidationException("merchantzipcode", ErrorMessages.INVALID_MERCHANT_ZIP + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getZipcode(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setZipcode("");
                    }
                    break;

                case merchant_addressproof:
                    if (!ESAPI.validator().isValidInput("merchant_addressproof", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddressProof(), "addressProofSelect", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MERCHANT_ADDRESS_PROOF);
                        validationErrorList.addError("merchant_addressproof", new PZValidationException("merchant_addressproof", ErrorMessages.INVALID_MERCHANT_ADDRESS_PROOF + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddressProof(), "1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setAddressProof("");
                    }
                    break;
                case merchant_addressId:
                    if (!ESAPI.validator().isValidInput("merchant_addressId", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddressId(), "alphanum", 150, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MERCHANT_ADDRESS_ID);
                        validationErrorList.addError("merchant_addressId", new PZValidationException("merchant_addressId", ErrorMessages.INVALID_MERCHANT_ADDRESS_ID + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddressId(), "1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setAddressId("");
                    }
                    break;

                //Dependent from merchantcountry
                case Companyphonecc1:
                    if (!ESAPI.validator().isValidInput("Companyphonecc1", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_cc(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("Companyphonecc1", new ValidationException("Companyphonecc1", "Invalid Companyphonecc1:::" + companyProfileVO.getCompanyphonecc1(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANYPHONECC);
                        validationErrorList.addError("Companyphonecc1", new PZValidationException("Companyphonecc1", ErrorMessages.INVALID_COMPANY_TELNOCC + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_cc(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setPhone_cc("");
                    }
                    break;

                case CompanyTelephoneNO:
                    if (!ESAPI.validator().isValidInput("CompanyTelephoneNO", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_number(), "OnlyNumber", 15, isOptional))
                    {
                        //validationErrorList.addError("CompanyTelephoneNO", new ValidationException("CompanyTelephoneNO", "Invalid CompanyTelephoneNO:::" + companyProfileVO.getCompanyTelephoneNO(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_TELEPHONE);
                        validationErrorList.addError("CompanyTelephoneNO", new PZValidationException("CompanyTelephoneNO",ErrorMessages.INVALID_TELNO + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_number(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setPhone_number("");
                    }
                    break;

                case CompanyEmailAddress:
                    if (!ESAPI.validator().isValidInput("CompanyEmailAddress", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getEmail_id(), "Email", 255, isOptional))
                    {
                        //validationErrorList.addError("CompanyEmailAddress", new ValidationException("CompanyEmailAddress", "Invalid CompanyEmailAddress:::" + companyProfileVO.getCompanyEmailAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_EMAIL);
                        validationErrorList.addError("CompanyEmailAddress", new PZValidationException("CompanyEmailAddress", ErrorMessages.INVALID_EMAIL + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getEmail_id(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setEmail_id("");
                    }
                    break;

                case CompanyFax:
                    if (!ESAPI.validator().isValidInput("CompanyFax", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getFax(), "OnlyNumber", 20, isOptional))
                    {
                        //validationErrorList.addError("CompanyFax", new ValidationException("CompanyFax", "Invalid CompanyFax:::" + companyProfileVO.getCompanyFax(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_FAX);
                        validationErrorList.addError("CompanyFax", new PZValidationException("CompanyFax",ErrorMessages.INVALID_COMPANY_FAX + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getFax(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setFax("");
                    }
                    break;

                case Company_Date_Registration:
                    if (!ESAPI.validator().isValidInput("Company_Date_Registration", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "fromDate", 50, isOptional) || (functions.isValueNull(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration()) && (functions.isRandomDate(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "dd/MM/yyyy") || functions.isFutureDate(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "dd/MM/yyyy")) ))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REGISTRATION_DATE);
                        validationErrorList.addError("Company_Date_Registration", new PZValidationException("Company_Date_Registration",ErrorMessages.INVALID_REGISTRATION_DATE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setDate_of_registration("");
                    }
                    else if (functions.isValueNull(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration()))
                    {
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setDate_of_registration(commonFunctionUtil.convertDatepickerToTimestamp(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "00:00:00"));
                    }
                    break;

                case countryofregistration:
                    if (!ESAPI.validator().isValidInput("countryofregistration", companyProfileVO.getCountryOfRegistration(), "AppCountry", 255, isOptional))
                    {
                        //validationErrorList.addError("countryofregistration", new ValidationException("countryofregistration", "Invalid Country of Registration:::" + companyProfileVO.getCountryOfRegistration(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COUNTRY_FOR_REG);
                        validationErrorList.addError("countryofregistration", new PZValidationException("countryofregistration", ErrorMessages.INVALID_COUNTRY_FOR_REG + ":::" + companyProfileVO.getCountryOfRegistration(),"1", errorCodeVO));
                        companyProfileVO.setCountryOfRegistration("");
                    }
                    break;
                case companyregistrationnumber:
                    if (!ESAPI.validator().isValidInput("companyregistrationnumber", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getRegistration_number(), "SafeString", 35, isOptional))
                    {
                        //validationErrorList.addError("companyregistrationnumber", new ValidationException("companyregistrationnumber", "Invalid Company Registration Number :::" + companyProfileVO.getCompanyRegistrationNumber(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_REG_NUMBER);
                        validationErrorList.addError("companyregistrationnumber", new PZValidationException("companyregistrationnumber", ErrorMessages.INVALID_REGISTRATION_NUMBER + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getRegistration_number(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setRegistration_number("");
                    }
                    break;

                case vatidentification:
                    if (!ESAPI.validator().isValidInput("vatidentification", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getVatidentification(), "alphanum", 15, isOptional))
                    {
                        //validationErrorList.addError("vatidentification", new ValidationException("vatidentification", "Invalid VAT Identification:::" + companyProfileVO.getVatIdentification(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_VAT_IDENTIFICATION);
                        validationErrorList.addError("vatidentification", new PZValidationException("vatidentification", ErrorMessages.INVALID_VAT_IDENTIFICATION + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getVatidentification(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setVatidentification("");
                    }
                    break;

                case FederalTaxID:
                    if (!ESAPI.validator().isValidInput("FederalTaxID", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getFederalTaxId(), "alphanum", 15, isOptional))
                    {
                        //validationErrorList.addError("FederalTaxID", new ValidationException("FederalTaxID", "Invalid FederalTaxID:::" + companyProfileVO.getFedraltaxid(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FEDERAL_TAX_ID);
                        validationErrorList.addError("FederalTaxID", new PZValidationException("FederalTaxID", ErrorMessages.INVALID_FEDERAL_TAXID + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getFederalTaxId(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setFederalTaxId("");
                    }
                    break;
                case company_typeofbusiness:
                    if (!ESAPI.validator().isValidInput("company_typeofbusiness", companyProfileVO.getCompanyTypeOfBusiness(), "company_typeofbusiness", 30, isOptional))
                    {
                        //validationErrorList.addError("company_typeofbusiness", new ValidationException("company_typeofbusiness", "Invalid company_typeofbusiness:::" + companyProfileVO.getCompanyTypeOfBusiness(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TYPE_OF_BUSINESS);
                        validationErrorList.addError("company_typeofbusiness", new PZValidationException("company_typeofbusiness",ErrorMessages.INVALID_TYPE_OF_BUSINESS + ":::" + companyProfileVO.getCompanyTypeOfBusiness(),"1", errorCodeVO));
                        companyProfileVO.setCompanyTypeOfBusiness("");
                    }
                    break;
                case corporatename:
                    if (!ESAPI.validator().isValidInput("corporatename", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("corporatename", new ValidationException("corporatename", "Invalid Corporate Name:::" + companyProfileVO.getCorporateName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_NAME);
                        validationErrorList.addError("corporatename", new PZValidationException("corporatename", ErrorMessages.INVALID_CORPORATE_NAME + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCompany_name("");
                    }
                    else if (!ESAPI.validator().isValidInput("corporatename", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCompany_name(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("corporatename", new ValidationException("corporatename", "Invalid Corporate Name:::" + companyProfileVO.getCorporateName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_NAME);
                        validationErrorList.addError("corporatename", new PZValidationException("corporatename", ErrorMessages.INVALID_CORPORATE_NAME + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCompany_name(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setCompany_name("");
                    }
                    else if (!ESAPI.validator().isValidInput("corporatename", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCompany_name(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("corporatename", new ValidationException("corporatename", "Invalid Corporate Name:::" + companyProfileVO.getCorporateName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_NAME);
                        validationErrorList.addError("corporatename", new PZValidationException("corporatename", ErrorMessages.INVALID_CORPORATE_NAME + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCompany_name(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setCompany_name("");
                    }
                    break;


                case corporate_addressId:
                    if (!ESAPI.validator().isValidInput("corporate_addressId", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getAddressId(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("corporatename", new ValidationException("corporatename", "Invalid Corporate Name:::" + companyProfileVO.getCorporateName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MERCHANT_ADDRESS_ID);
                        validationErrorList.addError("corporate_addressId", new PZValidationException("corporate_addressId", ErrorMessages.INVALID_MERCHANT_ADDRESS_ID + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getAddressId(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setAddressId("");
                    }
                    break;

                case corporateaddress:
                    if (!ESAPI.validator().isValidInput("corporateaddress", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getAddress(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("corporateaddress", new ValidationException("corporateaddress", "Invalid Corporate/ Billing Address:::" + companyProfileVO.getCorporateAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_ADDRESS);
                        validationErrorList.addError("corporateaddress", new PZValidationException("corporateaddress", ErrorMessages.INVALID_CORPORATE_ADDRESS + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getAddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setAddress("");
                    }
                    break;
                case corporatecity:
                    if (!ESAPI.validator().isValidInput("corporatecity", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCity(), "StrictString", 255, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("corporatecity", new ValidationException("corporatecity", "Invalid Corporate City :::" + companyProfileVO.getCorporateCity(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_CITY);
                        validationErrorList.addError("corporatecity", new PZValidationException("corporatecity", ErrorMessages.INVALID_CORPORATE_CITY + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCity(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setCity("");
                    }
                    break;

                case corporatestate:
                    if (!ESAPI.validator().isValidInput("corporatestate", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getState(), "StrictString", 255, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("corporatestate", new ValidationException("corporatestate", "Invalid Corporate State :::" + companyProfileVO.getCorporateState(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_STATE);
                        validationErrorList.addError("corporatestate", new PZValidationException("corporatestate",ErrorMessages.INVALID_CORPORATE_STATE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getState(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setState("");
                    }
                    break;
                case corporatecountry:
                    if (!ESAPI.validator().isValidInput("corporatecountry", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCountry(), "AppCountry", 255, isOptional))
                    {
                        //validationErrorList.addError("corporatecountry", new ValidationException("corporatecountry", "Invalid Corporate Country :::" + companyProfileVO.getCorporateCountry(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_COUNTRY);
                        validationErrorList.addError("corporatecountry", new PZValidationException("corporatecountry", ErrorMessages.INVALID_CORPORATE_COUNTRY_CODE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCountry(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setCountry("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCountry()))
                    {
                        String corporatecountry[] = companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCountry().split("\\|");
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setCountry(corporatecountry[0].toString());
                    }
                    break;
                case corporatestreet:
                    if (!ESAPI.validator().isValidInput("corporatestreet", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getStreet(), "alphanum", 255, isOptional))// isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_STREET);
                        validationErrorList.addError("corporatestreet", new PZValidationException("corporatestreet",ErrorMessages.INVALID_CORPORATE_STREET + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getStreet(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setStreet("");
                    }
                    break;
                case merchantstreet:
                    if (!ESAPI.validator().isValidInput("merchantstreet", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getStreet(), "alphanum", 255, isOptional))// isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTSTREET);
                        validationErrorList.addError("merchantstreet", new PZValidationException("merchantstreet",ErrorMessages.INVALID_MERCHANTSTREET + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getStreet(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setStreet("");
                    }
                    break;
                case corporatezipcode:
                    if (!ESAPI.validator().isValidInput("corporatezipcode", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getZipcode(), "alphanum", 15, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("corporatezipcode", new ValidationException("corporatezipcode", "Invalid Corporate Zip :::" + companyProfileVO.getCorporateZipCode(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATE_ZIP);
                        validationErrorList.addError("corporatezipcode", new PZValidationException("corporatezipcode",ErrorMessages.INVALID_CORPORATE_ZIP + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getZipcode(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setZipcode("");
                    }
                    break;

                case registered_corporatename:
                    if (!ESAPI.validator().isValidInput("registered_corporatename", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCompany_name(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_corporatename", new ValidationException("registered_corporatename", "Invalid Registered Corporate Name :::" + companyProfileVO.getRegisteredCorporateName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_CORPORATE_NAME);
                        validationErrorList.addError("registered_corporatename", new PZValidationException("registered_corporatename", ErrorMessages.INVALID_REG_CORPORATE_NAME + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCompany_name(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setCompany_name("");
                    }
                    break;

                case registered_directors_addressId:
                    if (!ESAPI.validator().isValidInput("registered_directors_addressId", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCompany_name(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_corporatename", new ValidationException("registered_corporatename", "Invalid Registered Corporate Name :::" + companyProfileVO.getRegisteredCorporateName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_CORPORATE_NAME);
                        validationErrorList.addError("registered_directors_addressId", new PZValidationException("registered_directors_addressId", ErrorMessages.INVALID_REG_CORPORATE_NAME + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCompany_name(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setAddressId("");
                    }
                    break;

                case EURegistrationNumber:
                    if (!ESAPI.validator().isValidInput("EURegistrationNumber", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getRegistration_number(), "alphanum", 15, isOptional))
                    {
                        //validationErrorList.addError("EURegistrationNumber", new ValidationException("EURegistrationNumber", "Invalid EURegistrationNumber:::" + companyProfileVO.getEURegistrationNumber(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_EUREG_NUMBER);
                        validationErrorList.addError("EURegistrationNumber", new PZValidationException("EURegistrationNumber", ErrorMessages.INVALID_EUREG_NUMBER + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getRegistration_number(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setRegistration_number("");
                    }
                    break;
                case registered_directors:
                    if (!ESAPI.validator().isValidInput("registered_directors", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getRegistred_directors(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_directors", new ValidationException("registered_directors", "Invalid Registered Directors :::" + companyProfileVO.getRegisteredDirectors(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS);
                        validationErrorList.addError("registered_directors", new PZValidationException("registered_directors", ErrorMessages.INVALID_REG_DIRECTORS + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getRegistred_directors(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setRegistred_directors("");
                    }
                    break;
                case registered_directors_address:
                    if (!ESAPI.validator().isValidInput("registered_directors_address", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getAddress(), "Description", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_directors_address", new ValidationException("registered_directors_address", "Invalid Registered directors address:::" + companyProfileVO.getRegisteredDirectorsAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS_ADDRESS);
                        validationErrorList.addError("registered_directors_address", new PZValidationException("registered_directors_address",ErrorMessages.INVALID_REG_DIRECTORS_ADDRESS + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getAddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setAddress("");
                    }
                    break;
                case registered_directors_city:
                    if (!ESAPI.validator().isValidInput("registered_directors_city", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCity(), "StrictString", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_directors_city", new ValidationException("registered_directors_city", "Invalid Registered City :::" + companyProfileVO.getRegisteredDirectorsCity(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS_CITY);
                        validationErrorList.addError("registered_directors_city", new PZValidationException("registered_directors_city",ErrorMessages.INVALID_REG_DIRECTORS_CITY + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCity(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setCity("");
                    }
                    break;
                case registered_directors_State:
                    if (!ESAPI.validator().isValidInput("registered_directors_State", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getState(), "StrictString", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_directors_State", new ValidationException("registered_directors_State", "Invalid Registered State:::" + companyProfileVO.getRegisteredDirectorsState(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS_STATE);
                        validationErrorList.addError("registered_directors_State", new PZValidationException("registered_directors_State",ErrorMessages.INVALID_REG_DIRECTORS_STATE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getState(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setState("");
                    }

                    break;
                case registered_directors_postalcode:
                    if (!ESAPI.validator().isValidInput("registered_directors_postalcode", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getZipcode(), "alphanum", 12, isOptional))
                    {
                        //validationErrorList.addError("registered_directors_postalcode", new ValidationException("registered_directors_postalcode", "Invalid Registered Zip:::" + companyProfileVO.getRegisteredDirectorsPostalcode(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS_POSTCODE);
                        validationErrorList.addError("registered_directors_postalcode", new PZValidationException("registered_directors_postalcode",ErrorMessages.INVALID_REG_DIRECTORS_ZIP + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getZipcode(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setZipcode("");
                    }
                    break;
                case registered_directors_country:
                    if (!ESAPI.validator().isValidInput("registered_directors_country", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCountry(), "AppCountry", 255, isOptional))
                    {
                        //validationErrorList.addError("registered_directors_country", new ValidationException("registered_directors_country", "Invalid Invalid Registered Country:::" + companyProfileVO.getRegisteredDirectorsCountry(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS_COUNTRY);
                        validationErrorList.addError("registered_directors_country", new PZValidationException("registered_directors_country",ErrorMessages.INVALID_REG_DIRECTORS_COUNTRY_CODE + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCountry(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setCountry("");
                    }
                    else if (functions.isValueNull(companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCountry()))
                    {
                        String registereddirectorscountry[] = companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getCountry().split("\\|");
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setCountry(registereddirectorscountry[0].toString());
                    }

                    break;
                case registered_directors_street:
                    if (!ESAPI.validator().isValidInput("registered_directors_street", companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getStreet(), "Description", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_REG_DIRECTORS_STREET);
                        validationErrorList.addError("registered_directors_street", new PZValidationException("registered_directors_street",ErrorMessages.INVALID_REG_DIRECTORS_STREET + ":::" + companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).getStreet(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.EU_COMPANY).setStreet("");
                    }
                    break;
                case company_capitalresources:
                    if (!ESAPI.validator().isValidInput("company_capitalresources", companyProfileVO.getCompanyCapitalResources(), "OnlyNumber", 10, isOptional))
                    {
                        //validationErrorList.addError("company_capitalresources", new ValidationException("company_capitalresources", "Invalid Capital Resources :::" + companyProfileVO.getCompanyCapitalResources(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CAPITAL_RESOURCES);
                        validationErrorList.addError("company_capitalresources", new PZValidationException("company_capitalresources", ErrorMessages.INVALID_COMPANY_CAPITAL_RESOURCES + ":::" + companyProfileVO.getCompanyCapitalResources(),"1", errorCodeVO));
                        companyProfileVO.setCompanyCapitalResources("");
                    }
                    break;
                case company_turnoverlastyear:
                    if (!ESAPI.validator().isValidInput("company_turnoverlastyear", companyProfileVO.getCompanyTurnoverLastYear(), "OnlyNumber", 10, isOptional))
                    {
                        //validationErrorList.addError("company_turnoverlastyear", new ValidationException("company_turnoverlastyear", "Invalid Turnover Last Year :::" + companyProfileVO.getCompanyTurnoverLastYear(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_TURNOVER);
                        validationErrorList.addError("company_turnoverlastyear", new PZValidationException("company_turnoverlastyear", ErrorMessages.INVALID_COMPANY_TURNOVER + ":::" + companyProfileVO.getCompanyTurnoverLastYear(),"1", errorCodeVO));
                        companyProfileVO.setCompanyTurnoverLastYear("");
                    }
                    break;

                case company_currencylastyear:
                    if (!ESAPI.validator().isValidInput("company_currencylastyear", companyProfileVO.getCompany_currencylastyear(), "currency_unit", 255, isOptional))
                    {
                        //validationErrorList.addError("company_currencylastyear", new ValidationException("company_currencylastyear", "Invalid company_currencylastyear:::" + companyProfileVO.getCompany_currencylastyear(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CURRENCY_LASTYEAR);
                        validationErrorList.addError("company_currencylastyear", new PZValidationException("company_currencylastyear",ErrorMessages.INVALID_CURRENCY_LASTYEAR + ":::" + companyProfileVO.getCompany_currencylastyear(),"1", errorCodeVO));
                        companyProfileVO.setCompany_currencylastyear("");
                    }
                    break;
                case company_turnoverlastyear_unit:
                    if (!ESAPI.validator().isValidInput("company_turnoverlastyear_unit", companyProfileVO.getCompany_turnoverlastyear_unit(), "currency_unit", 255, isOptional))
                    {
                        //validationErrorList.addError("company_turnoverlastyear_unit", new ValidationException("company_turnoverlastyear_unit", "Invalid turnoverlastyear_unit:::" + companyProfileVO.getCompany_turnoverlastyear_unit(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TURNOVER_LASTYEAR);
                        validationErrorList.addError("company_turnoverlastyear_unit", new PZValidationException("company_turnoverlastyear_unit",ErrorMessages.INVALID_COMPANY_TURNOVERUNIT + ":::" + companyProfileVO.getCompany_turnoverlastyear_unit(),"1", errorCodeVO));
                        companyProfileVO.setCompany_turnoverlastyear_unit("");
                    }
                    break;

                case company_numberofemployees:
                    if (!ESAPI.validator().isValidInput("company_numberofemployees", companyProfileVO.getCompanyNumberOfEmployees(), "OnlyNumber", 20, isOptional))
                    {
                        //validationErrorList.addError("company_numberofemployees", new ValidationException("company_numberofemployees", "Invalid Number of Employees:::" + companyProfileVO.getCompanyNumberOfEmployees(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NUMBER_OF_EMPLOYEES);
                        validationErrorList.addError("company_numberofemployees", new PZValidationException("company_numberofemployees",ErrorMessages.INVALID_COMPANY_NUMBEROFEMPLOYEES + ":::" + companyProfileVO.getCompanyNumberOfEmployees(),"1", errorCodeVO));
                        companyProfileVO.setCompanyNumberOfEmployees("");
                    }
                    break;
                case startup_business:
                    if (!ESAPI.validator().isValidInput("startup_business", companyProfileVO.getStartup_business(), "isYN", 10, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_STARTUP_BUSINESS);
                        validationErrorList.addError("startup_business", new PZValidationException("startup_business",ErrorMessages.INVALID_STARTUP_BUSINESS + ":::" + companyProfileVO.getStartup_business(),"1", errorCodeVO));
                        companyProfileVO.setStartup_business("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getStartup_business()) && "N".equals(companyProfileVO.getStartup_business()))
                    {
                        bankInputNameList.add(BankInputName.company_lengthoftime_business);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.company_lengthoftime_business,false);
                    }
                    break;

                case company_lengthoftime_business:
                    if (!ESAPI.validator().isValidInput("company_lengthoftime_business", companyProfileVO.getCompanyLengthOfTimeInBusiness(), "alphanum", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true) /*|| (functions.isValueNull(companyProfileVO.getCompanyLengthOfTimeInBusiness()) && (functions.isRandomDate(companyProfileVO.getCompanyLengthOfTimeInBusiness(), "dd/MM/yyyy") || functions.isFutureDate(companyProfileVO.getCompanyLengthOfTimeInBusiness(), "dd/MM/yyyy")))*/)
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LENGTHOFTIME_BUSINESS);
                        validationErrorList.addError("company_lengthoftime_business", new PZValidationException("company_lengthoftime_business",ErrorMessages.INVALID_LENGTHOFTIMEBUSINESS + ":::" + companyProfileVO.getCompanyLengthOfTimeInBusiness(),"1", errorCodeVO));
                        companyProfileVO.setCompanyLengthOfTimeInBusiness("");
                    }
                    /*else if (functions.isValueNull(companyProfileVO.getCompanyLengthOfTimeInBusiness()))
                    {
                        companyProfileVO.setCompanyLengthOfTimeInBusiness(commonFunctionUtil.convertDatepickerToTimestamp(companyProfileVO.getCompanyLengthOfTimeInBusiness(), "00:00:00"));
                    }*/
                    break;
                case contactname:
                    if (!ESAPI.validator().isValidInput("contactname", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getName(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("contactname", new ValidationException("contactname", "Invalid Contact Name:::" + companyProfileVO.getContactName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CONTACT_NAME);
                        validationErrorList.addError("contactname", new PZValidationException("contactname",ErrorMessages.INVALID_CONTACT_NAME + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getName(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setName("");
                    }
                    break;
                case contactname_telnocc1:
                    if (!ESAPI.validator().isValidInput("contactname_telnocc1", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getPhonecc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("contactname_telnocc1", new ValidationException("contactname_telnocc1", "Invalid CC:::" + companyProfileVO.getContactname_telnocc1(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CONTACT_TELNOCC);
                        validationErrorList.addError("contactname_telnocc1", new PZValidationException("contactname_telnocc1",ErrorMessages.INVALID_CONTACT_TELNOCC + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getPhonecc1(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setPhonecc1("");
                    }
                    break;
                case contactname_telephonenumber:
                    if (!ESAPI.validator().isValidInput("contactname_telephonenumber", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getTelephonenumber(), "OnlyNumber", 15, isOptional))
                    {
                        //validationErrorList.addError("contactname_telephonenumber", new ValidationException("contactname_telephonenumber", "Invalid Merchant Telephone Number:::" + companyProfileVO.getContactnamePhoneNumber(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CONTACT_TELNO);
                        validationErrorList.addError("contactname_telephonenumber", new PZValidationException("contactname_telephonenumber",ErrorMessages.INVALID_CONTACT_TELNO + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getTelephonenumber(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setTelephonenumber("");
                    }
                    break;
                case contactemailaddress:
                    if (!ESAPI.validator().isValidInput("contactemailaddress", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getEmailaddress(), "Email", 255, isOptional))
                    {
                        //validationErrorList.addError("contactemailaddress", new ValidationException("contactemailaddress", "Invalid  Email Address:::" + companyProfileVO.getContactEmailAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CONTACT_EMAIL);
                        validationErrorList.addError("contactemailaddress", new PZValidationException("contactemailaddress",ErrorMessages.INVALID_CONTACT_EMAIL + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getEmailaddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setEmailaddress("");
                    }
                    break;
                case SkypeIMaddress:
                    if (!ESAPI.validator().isValidInput("SkypeIMaddress", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getSkypeIMaddress(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("SkypeIMaddress", new ValidationException("SkypeIMaddress", "Invalid SkypeIMaddress:::" + companyProfileVO.getSkypeIMaddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SKYPEIMADDRESS);
                        validationErrorList.addError("SkypeIMaddress", new PZValidationException("SkypeIMaddress",ErrorMessages.INVALID_SKYPE_IMADDRESS + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getSkypeIMaddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setSkypeIMaddress("");
                    }
                    break;
                case contact_designation:
                    if (!ESAPI.validator().isValidInput("contact_designation", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getDesignation(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CONTACT_DESIGNATION);
                        validationErrorList.addError("contact_designation", new PZValidationException("contact_designation",ErrorMessages.INVALID_CONTACT_DESIGNATION + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getDesignation(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setDesignation("");
                    }
                    break;
                case technicalcontactname:
                    if (!ESAPI.validator().isValidInput("technicalcontactname", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getName(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("technicalcontactname", new ValidationException("technicalcontactname", "Invalid  Contact Name:::" + companyProfileVO.getTechnicalContactName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TECHNICAL_CONTACT);
                        validationErrorList.addError("technicalcontactname", new PZValidationException("technicalcontactname",ErrorMessages.INVALID_TECHNICAL_CONTACT_NAME + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getName(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).setName("");
                    }
                    break;
                case technicalphonecc1:
                    if (!ESAPI.validator().isValidInput("technicalphonecc1", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getPhonecc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("technicalphonecc1", new ValidationException("technicalphonecc1", "Invalid Technicalphonecc1:::" + companyProfileVO.getTechnicalphonecc1(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TECHNICAL_PHONECC);
                        validationErrorList.addError("technicalphonecc1", new PZValidationException("technicalphonecc1",ErrorMessages.INVALID_TECHNICAL_TELNOCC + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getPhonecc1(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).setPhonecc1("");
                    }
                    break;
                case Technical_telephonenumber:
                    if (!ESAPI.validator().isValidInput("Technical_telephonenumber", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getTelephonenumber(), "OnlyNumber", 15, isOptional))
                    {
                        //validationErrorList.addError("Technical_telephonenumber", new ValidationException("Technical_telephonenumber", "Invalid Telephone Number:::" + companyProfileVO.getTechnical_telephonenumber(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TECHNICAL_PHONE);
                        validationErrorList.addError("Technical_telephonenumber", new PZValidationException("Technical_telephonenumber",ErrorMessages.INVALID_TECHNICAL_TELNO + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getTelephonenumber(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).setTelephonenumber("");
                    }
                    break;
                case technicalemailaddress:
                    if (!ESAPI.validator().isValidInput("technicalemailaddress", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getEmailaddress(), "Email", 255, isOptional))
                    {
                        //validationErrorList.addError("technicalemailaddress", new ValidationException("technicalemailaddress", "Invalid  Email Address:::" + companyProfileVO.getTechnicalEmailAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TECHNICAL_EMAIL);
                        validationErrorList.addError("technicalemailaddress", new PZValidationException("technicalemailaddress",ErrorMessages.INVALID_TECHNICAL_EMAIL + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getEmailaddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).setEmailaddress("");
                    }
                    break;
                case technical_designation:
                    if (!ESAPI.validator().isValidInput("technical_designation", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getDesignation(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TECHNICAL_DESIGNATION);
                        validationErrorList.addError("technical_designation", new PZValidationException("technical_designation",ErrorMessages.INVALID_TECHNICAL_DESIGNATION + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).getDesignation(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.TECHNICAL).setDesignation("");
                    }
                    break;
                case billingcontactname:
                    if (!ESAPI.validator().isValidInput("billingcontactname", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getName(), "alphanum", 255, isOptional))
                    {
                        //validationErrorList.addError("billingcontactname", new ValidationException("billingcontactname", "Invalid Billing Contact Name:::" + companyProfileVO.getBillingContactName(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_BILLING_CONTACT);
                        validationErrorList.addError("billingcontactname", new PZValidationException("billingcontactname",ErrorMessages.INVALID_BILLING_CONTACT_NAME + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getName(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).setName("");
                    }
                    break;
                case financialphonecc1:
                    if (!ESAPI.validator().isValidInput("financialphonecc1", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getPhonecc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("financialphonecc1", new ValidationException("financialphonecc1", "Invalid financialphonecc1:::" + companyProfileVO.getFinancialphonecc1(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FINANCIAL_PHONECC);
                        validationErrorList.addError("financialphonecc1", new PZValidationException("financialphonecc1",ErrorMessages.INVALID_FINANCIAL_TELNOCC + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getPhonecc1(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).setPhonecc1("");
                    }
                    break;
                case Financial_telephonenumber:
                    if (!ESAPI.validator().isValidInput("Financial_telephonenumber", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getTelephonenumber(), "OnlyNumber", 15, isOptional))
                    {
                        //validationErrorList.addError("Financial_telephonenumber", new ValidationException("Financial_telephonenumber", "Invalid Telephone Number:::" + companyProfileVO.getFinancial_telephonenumber(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FINANCIAL_PHONE);
                        validationErrorList.addError("Financial_telephonenumber", new PZValidationException("Financial_telephonenumber",ErrorMessages.INVALID_FINANCIAL_TELNO + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getTelephonenumber(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).setTelephonenumber("");
                    }
                    break;
                case billingemailaddress:
                    if (!ESAPI.validator().isValidInput("billingemailaddress", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getEmailaddress(), "Email", 255, isOptional))
                    {
                        //validationErrorList.addError("billingemailaddress", new ValidationException("billingemailaddress", "Invalid Billing Email Address :::" + companyProfileVO.getBillingEmailAddress(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_BILLING_EMAIL);
                        validationErrorList.addError("billingemailaddress", new PZValidationException("billingemailaddress",ErrorMessages.INVALID_BILLING_EMAIL + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getEmailaddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).setEmailaddress("");
                    }
                    break;
                case billing_designation:
                    if (!ESAPI.validator().isValidInput("billing_designation", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getDesignation(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_BILLING_DESIGNATION);
                        validationErrorList.addError("billing_designation", new PZValidationException("billing_designation",ErrorMessages.INVALID_BILLING_DESIGNATION + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).getDesignation(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.BILLING).setDesignation("");
                    }
                    break;
                case company_bankruptcy:
                    if (!ESAPI.validator().isValidInput("company_bankruptcy", companyProfileVO.getCompanyBankruptcy(), "isYN", 50, isOptional))
                    {
                        //validationErrorList.addError("company_bankruptcy", new ValidationException("company_bankruptcy", "Invalid company_bankruptcy:::" + companyProfileVO.getCompanyBankruptcy(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_BANKRUPTCY);
                        validationErrorList.addError("company_bankruptcy", new PZValidationException("company_bankruptcy",ErrorMessages.INVALID_COMPANY_BANKRUPTCY + ":::" + companyProfileVO.getCompanyBankruptcy(),"1", errorCodeVO));
                        companyProfileVO.setCompanyBankruptcy("");
                    }
                    else if (functions.isValueNull(companyProfileVO.getCompanyBankruptcy()))
                    {
                        if ("N".equals(companyProfileVO.getCompanyBankruptcy()))
                        {
                            condBankruptcy = true;
                        }
                        else
                        {
                            condBankruptcy = isOptional;
                        }
                    }
                    bankInputNameList.add(BankInputName.company_bankruptcydate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.company_bankruptcydate,condBankruptcy);
                    break;

                //DEPENDENT
                case company_bankruptcydate:
                    if (!ESAPI.validator().isValidInput("company_bankruptcydate", companyProfileVO.getCompanyBankruptcydate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true) || (functions.isValueNull(companyProfileVO.getCompanyBankruptcydate()) && (functions.isRandomDate(companyProfileVO.getCompanyBankruptcydate(), "dd/MM/yyyy") || functions.isFutureDate(companyProfileVO.getCompanyBankruptcydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("company_bankruptcydate", new ValidationException("company_bankruptcydate", "Invalid Bankruptcy Date:::" + companyProfileVO.getCompanyBankruptcydate(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_BANKRUPTCYDATE);
                        validationErrorList.addError("company_bankruptcydate", new PZValidationException("company_bankruptcydate", ErrorMessages.INVALID_COMPANY_BANKRUPTCYDATE + ":::" + companyProfileVO.getCompanyBankruptcydate(), "1", errorCodeVO));
                        companyProfileVO.setCompanyBankruptcydate("");
                    }
                    else if (functions.isValueNull(companyProfileVO.getCompanyBankruptcydate()) && (!functions.isValueNull(companyProfileVO.getCompanyBankruptcy()) || "N".equals(companyProfileVO.getCompanyBankruptcy())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_BANKRUPTCY_SELECTION);
                        validationErrorList.addError("company_bankruptcydate", new PZValidationException("company_bankruptcydate",ErrorMessages.INVALID_COMPANY_BANKRUPTCY_SELECTION + ":::" + companyProfileVO.getCompanyBankruptcydate(),"1", errorCodeVO));
                        companyProfileVO.setCompanyBankruptcydate("");
                    }
                    else
                    {
                        companyProfileVO.setCompanyBankruptcydate(commonFunctionUtil.convertDatepickerToTimestamp(companyProfileVO.getCompanyBankruptcydate(), "00:00:00"));
                    }

                    break;

                case License_required:
                    if (!ESAPI.validator().isValidInput("License_required", companyProfileVO.getLicense_required(), "isYN", 30, isOptional))//isOptional to true
                    {
                        //validationErrorList.addError("License_required", new ValidationException("License_required", "Invalid Licenserequired:::" + companyProfileVO.getLicense_required(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LICENSE_REQUIRED);
                        validationErrorList.addError("License_required", new PZValidationException("License_required",ErrorMessages.INVALID_LICENSE_REQUIRED + ":::" + companyProfileVO.getLicense_required(),"1", errorCodeVO));
                        companyProfileVO.setLicense_required("");
                    }
                    else if (functions.isValueNull(companyProfileVO.getLicense_required()))
                    {
                        if ("N".equals(companyProfileVO.getLicense_required()))
                        {
                            condLicencePermision = true;
                        }
                        else
                        {
                            condLicencePermision = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.License_Permission);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.License_Permission, condLicencePermision || (bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.License_Permission) ? false : true));
                    }
                    break;
                case License_Permission:
                    if (!ESAPI.validator().isValidInput("License_Permission", companyProfileVO.getLicense_Permission(), "isYN", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))//isOptional to true
                    {
                        //validationErrorList.addError("License_Permission", new ValidationException("License_Permission", "Invalid LicensePermission:::" + companyProfileVO.getLicense_Permission(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LICENSE_PERMISSION);
                        validationErrorList.addError("License_Permission", new PZValidationException("License_Permission",ErrorMessages.INVALID_LICENSE_PERMISSION + ":::" + companyProfileVO.getLicense_Permission(),"1", errorCodeVO));
                        companyProfileVO.setLicense_Permission("");
                    }
                    break;

                case legal_proceeding:
                    if (!ESAPI.validator().isValidInput("legal_proceeding", companyProfileVO.getLegalProceeding(), "isYN", 10, isOptional))//isOptional to true
                    {
                        //validationErrorList.addError("legal_proceeding", new ValidationException("legal_proceeding", "Invalid legal_proceeding:::" + companyProfileVO.getLegalProceeding(), "1"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LEGAL_PROCEEDING);
                        validationErrorList.addError("legal_proceeding", new PZValidationException("legal_proceeding",ErrorMessages.INVALID_LEGAL_PROCEEDING + ":::" + companyProfileVO.getLegalProceeding(),"1", errorCodeVO));
                        companyProfileVO.setLegalProceeding("");
                    }
                    break;
                case cbk_contactperson:
                    if (!ESAPI.validator().isValidInput("cbk_contactperson", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getName(), "alphanum", 255, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CBK_CONTACT_PERSON);
                        validationErrorList.addError("cbk_contactperson", new PZValidationException("cbk_contactperson",ErrorMessages.INVALID_CBK_CONTACT_PERSON + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getName(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).setName("");
                    }
                    break;
                case cbk_email:
                    if (!ESAPI.validator().isValidInput("cbk_email", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getEmailaddress(), "Email", 255, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CBK_EMAIL);
                        validationErrorList.addError("cbk_email", new PZValidationException("cbk_email",ErrorMessages.INVALID_CBK_EMAIL + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getEmailaddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).setEmailaddress("");
                    }
                    break;
                case cbk_telephonenumber:
                    if (!ESAPI.validator().isValidInput("cbk_telephonenumber", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getTelephonenumber(), "OnlyNumber", 15, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CBK_TELEPONE_NUMBER);
                        validationErrorList.addError("cbk_telephonenumber", new PZValidationException("cbk_telephonenumber",ErrorMessages.INVALID_CBK_TELEPHONE_NUMBER + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getTelephonenumber(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).setTelephonenumber("");
                    }
                    break;
                case cbk_phonecc:
                    if (!ESAPI.validator().isValidInput("cbk_phonecc", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getPhonecc1(), "OnlyNumber", 3, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CBK_CONTACT_PERSON);
                        validationErrorList.addError("cbk_phonecc", new PZValidationException("cbk_phonecc",ErrorMessages.INVALID_CBK_CONTACT_PERSON + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getPhonecc1(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).setPhonecc1("");
                    }
                    break;

                case cbk_designation:
                    if (!ESAPI.validator().isValidInput("cbk_designation", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getDesignation(), "alphanum", 255, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CBK_DESIGNATION);
                        validationErrorList.addError("cbk_designation", new PZValidationException("cbk_designation",ErrorMessages.INVALID_CBK_DESIGNATION + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).getDesignation(), "1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.CBK).setDesignation("");
                    }
                    break;

                case pci_contactperson:
                    if (!ESAPI.validator().isValidInput("pci_contactperson", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getName(), "alphanum", 255, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PCI_CONTACT_PERSON);
                        validationErrorList.addError("pci_contactperson", new PZValidationException("pci_contactperson","Invalid Data" + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getName(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).setName("");
                    }
                    break;
                case pci_email:
                    if (!ESAPI.validator().isValidInput("pci_email", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getEmailaddress(), "Email", 255, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PCI_EMAIL);
                        validationErrorList.addError("pci_email", new PZValidationException("pci_email","Invalid Data" + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getEmailaddress(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).setEmailaddress("");
                    }
                    break;
                case pci_telephonenumber:
                    if (!ESAPI.validator().isValidInput("pci_telephonenumber", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getTelephonenumber(), "OnlyNumber", 15, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PCI_TELEPONE_NUMBER);
                        validationErrorList.addError("pci_telephonenumber", new PZValidationException("pci_telephonenumber","Invalid Data" + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getTelephonenumber(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).setTelephonenumber("");
                    }
                    break;
                case pci_phonecc:
                    if (!ESAPI.validator().isValidInput("pci_phonecc", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getPhonecc1(), "OnlyNumber", 3, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PCI_CONTACT_PERSON);
                        validationErrorList.addError("pci_phonecc", new PZValidationException("pci_phonecc","Invalid Data" + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getPhonecc1(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).setPhonecc1("");
                    }
                    break;
                case pci_designation:
                    if (!ESAPI.validator().isValidInput("pci_designation", companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getDesignation(), "alphanum", 255, isOptional))//isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PCI_DESIGNATION);
                        validationErrorList.addError("pci_designation", new PZValidationException("pci_designation",ErrorMessages.INVALID_PCI_DESIGNATION + ":::" + companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).getDesignation(),"1", errorCodeVO));
                        companyProfileVO.getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.PCI).setDesignation("");
                    }
                    break;

                case iscompany_insured:
                    boolean condCompInsured = true;
                    logger.debug("companyProfileVO.getIscompany_insured()-->"+companyProfileVO.getIscompany_insured());
                    if (!ESAPI.validator().isValidInput("iscompany_insured", companyProfileVO.getIscompany_insured(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ISCOMPANY_INSURED);
                        validationErrorList.addError("iscompany_insured", new PZValidationException("iscompany_insured", ErrorMessages.INVALID_ISCOMPANY_INSURED + ":::" + companyProfileVO.getIscompany_insured(), "1", errorCodeVO));
                        companyProfileVO.setIscompany_insured("");
                    }
                    else if (functions.isValueNull(companyProfileVO.getIscompany_insured()))
                    {
                        if ("N".equals(companyProfileVO.getIscompany_insured()))
                        {
                            condCompInsured = true;
                        }
                        else
                        {
                            condCompInsured = isOptional;
                        }
                        logger.debug("condCompInsured--->"+condCompInsured);
                        bankInputNameList.add(BankInputName.insured_companyname);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.insured_companyname, condCompInsured);
                        bankInputNameList.add(BankInputName.insured_currency);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.insured_currency, condCompInsured);
                        bankInputNameList.add(BankInputName.insured_amount);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.insured_amount, condCompInsured);
                    }
                    break;

                case insured_companyname:
                    if (!ESAPI.validator().isValidInput("insured_companyname", companyProfileVO.getInsured_companyname(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INSURED_COMPANYNAME);
                        validationErrorList.addError("insured_companyname", new PZValidationException("insured_companyname",ErrorMessages.INVALID_INSURED_COMPANYNAME + ":::" + companyProfileVO.getInsured_companyname(),"1", errorCodeVO));
                        companyProfileVO.setInsured_companyname("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getInsured_companyname()) && (!functions.isValueNull(companyProfileVO.getIscompany_insured()) || "N".equals(companyProfileVO.getIscompany_insured())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INSURED_COMPANYNAME);
                        validationErrorList.addError("insured_companyname", new PZValidationException("insured_companyname", ErrorMessages.INVALID_INSURED_COMPANYNAME_SELECTION + ":::" + companyProfileVO.getInsured_companyname(), "1", errorCodeVO));
                        companyProfileVO.setInsured_companyname("");
                    }
                    break;
                case insured_currency:
                    if (!ESAPI.validator().isValidInput("insured_currency", companyProfileVO.getInsured_currency(), "StrictString", 10, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INSURED_CURRENCY);
                        validationErrorList.addError("insured_currency", new PZValidationException("insured_currency","Invalid Insured Currency" + ":::" + companyProfileVO.getInsured_currency(),"1", errorCodeVO));
                        companyProfileVO.setInsured_currency("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getInsured_currency()) && (!functions.isValueNull(companyProfileVO.getIscompany_insured()) || "N".equals(companyProfileVO.getIscompany_insured())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INSURED_CURRENCY);
                        validationErrorList.addError("insured_currency", new PZValidationException("insured_currency","Invalid Insured Currency" + ":::" + companyProfileVO.getInsured_currency(),"1", errorCodeVO));
                        companyProfileVO.setInsured_currency("");
                    }
                    break;
                case insured_amount: //Updated Sagar
                    if (!ESAPI.validator().isValidInput("insured_amount", companyProfileVO.getInsured_amount(), "Amount", 12, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INSURED_AMOUNT);
                        validationErrorList.addError("insured_amount", new PZValidationException("insured_amount","Invalid Insured Amount"  + ":::" + companyProfileVO.getInsured_amount(),"1", errorCodeVO));
                        companyProfileVO.setInsured_amount("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getInsured_amount()) && (!functions.isValueNull(companyProfileVO.getInsured_amount()) || "N".equals(companyProfileVO.getInsured_amount())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INSURED_AMOUNT);
                        validationErrorList.addError("insured_amount", new PZValidationException("insured_amount","Invalid Insured Amount" + ":::" + companyProfileVO.getInsured_amount(),"1", errorCodeVO));
                        companyProfileVO.setInsured_amount("");
                    }
                    break;
                case main_business_partner:
                    if (!ESAPI.validator().isValidInput("main_business_partner", companyProfileVO.getMain_business_partner(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MAIN_BUSINESS_PARTNER);
                        validationErrorList.addError("main_business_partner", new PZValidationException("main_business_partner",ErrorMessages.INVALID_MAIN_BUSINESS_PARTNER  + ":::" + companyProfileVO.getMain_business_partner(),"1", errorCodeVO));
                        companyProfileVO.setMain_business_partner("");
                    }
                    break;

                case loans:
                    if (!ESAPI.validator().isValidInput("loans", companyProfileVO.getLoans(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LOANS);
                        validationErrorList.addError("loans", new PZValidationException("loans", ErrorMessages.INVALID_LOANS + ":::" + companyProfileVO.getLoans(),"1", errorCodeVO));
                        companyProfileVO.setLoans("");
                    }
                    bankInputNameList.add(BankInputName.income_economic_activity);
                    break;

                case income_economic_activity:
                    if (!ESAPI.validator().isValidInput("income_economic_activity", companyProfileVO.getIncome_economic_activity(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INCOME_ECONOMIC_ACTIVITY);
                        validationErrorList.addError("income_economic_activity", new PZValidationException("income_economic_activity",ErrorMessages.INVALID_INCOME_ECONOMIC_ACTIVITY + ":::" + companyProfileVO.getIncome_economic_activity(),"1", errorCodeVO));
                        companyProfileVO.setIncome_economic_activity("");
                    }
                    bankInputNameList.add(BankInputName.interest_income);
                    break;

                case interest_income:
                    if (!ESAPI.validator().isValidInput("interest_income", companyProfileVO.getInterest_income(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INTEREST_INCOME);
                        validationErrorList.addError("interest_income", new PZValidationException("interest_income",ErrorMessages.INVALID_INTEREST_INCOME + ":::" + companyProfileVO.getInterest_income(),"1", errorCodeVO));
                        companyProfileVO.setInterest_income("");
                    }
                    bankInputNameList.add(BankInputName.investments);
                    break;

                case investments:
                    if (!ESAPI.validator().isValidInput("investments", companyProfileVO.getInvestments(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INVESTMENTS);
                        validationErrorList.addError("investments", new PZValidationException("investments",ErrorMessages.INVALID_INVESTMENTS + ":::" + companyProfileVO.getInvestments(),"1", errorCodeVO));
                        companyProfileVO.setInvestments("");
                    }
                    break;

                case income_sources_other:
                    if (!ESAPI.validator().isValidInput("income_sources_other", companyProfileVO.getIncome_sources_other(), "isYN", 2, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INCOME_SOURCES_OTHER);
                        validationErrorList.addError("income_sources_other", new PZValidationException("income_sources_other", ErrorMessages.INVALID_INCOME_SOURCES_OTHER + ":::" + companyProfileVO.getIncome_sources_other(), "1", errorCodeVO));
                        companyProfileVO.setIncome_sources_other("");
                    }
                    /*else if(!functions.isValueNull(companyProfileVO.getIncome_sources_other()) || "N".equals(companyProfileVO.getIncome_sources_other()))
                    {
                        if ((!functions.isValueNull(companyProfileVO.getLoans()) || "N".equals(companyProfileVO.getLoans())) &&
                                (!functions.isValueNull(companyProfileVO.getIncome_economic_activity()) || "N".equals(companyProfileVO.getIncome_economic_activity())) &&
                                (!functions.isValueNull(companyProfileVO.getInterest_income()) || "N".equals(companyProfileVO.getInterest_income())) &&
                                (!functions.isValueNull(companyProfileVO.getInvestments()) || "N".equals(companyProfileVO.getInvestments())))
                        {
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INCOME_SOURCES_OF_COMPANY);
                            validationErrorList.addError("income_sources_other", new PZValidationException("income_sources_other", ErrorMessages.INVALID_INCOME_SOURCES_OF_COMPANY + ":::" + companyProfileVO.getIncome_sources_other(), "1", errorCodeVO));
                            companyProfileVO.setIncome_sources_other("");
                        }
                    }*/
                    else if(functions.isValueNull(companyProfileVO.getIncome_sources_other()) && !"N".equals(companyProfileVO.getIncome_sources_other()))
                    {
                        bankInputNameList.add(BankInputName.income_sources_other_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.income_sources_other_yes,false);
                    }
                    break;

                case income_sources_other_yes:
                    if (!ESAPI.validator().isValidInput("income_sources_other_yes", companyProfileVO.getIncome_sources_other_yes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INCOME_SOURCES_OTHER_YES);
                        validationErrorList.addError("income_sources_other_yes", new PZValidationException("income_sources_other_yes",ErrorMessages.INVALID_INCOME_SOURCES_OTHER_YES + ":::" + companyProfileVO.getIncome_sources_other_yes(),"1", errorCodeVO));
                        companyProfileVO.setIncome_sources_other_yes("");
                    }
                    else if(functions.isValueNull(companyProfileVO.getIncome_sources_other_yes()) && (!functions.isValueNull(companyProfileVO.getIncome_sources_other()) || "N".equals(companyProfileVO.getIncome_sources_other()) ))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INCOME_SOURCES_OTHER_SELECTION);
                        validationErrorList.addError("income_sources_other_yes", new PZValidationException("income_sources_other_yes",ErrorMessages.INVALID_INCOME_SOURCES_OTHER_SELECTION + ":::" + companyProfileVO.getIncome_sources_other_yes(), "1", errorCodeVO));
                        companyProfileVO.setIncome_sources_other_yes("");
                    }
                    break;
            }
        }

        if(bankInputNameList.size()>0)
            InputValidations(companyProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);

    }

    //Application_Manager Ownership_Profile Validator
    public void InputValidations(OwnershipProfileVO ownershipProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList,boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMapARGS)
    {
        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();
        Calendar calendar=Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate=calendar.getTime();

        boolean condPrincipalOwned2 = true;
        boolean condPrincipalOwned3 = true;
        boolean condShareholderOwned2 = true;
        boolean condShareholderOwned3 = true;
        boolean condShareholderOwned4 = true;
        boolean condCorporateShareholderOwned2 = true;
        boolean condCorporateShareholderOwned3 = true;
        boolean condCorporateShareholderOwned4 = true;

        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();

        //THIS is FOR CONVERSION OF REFERENCE TO VALUE type
        Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap=new HashMap<Boolean,Set<BankInputName>>();

        Set<BankInputName> bankInputNameSet = null;


        if(bankInputNameBooleanMapARGS==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        else
        {
            if(bankInputNameBooleanMapARGS.containsKey(false))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(false));
                bankInputNameBooleanMap.put(false,bankInputNameSet);
            }

            if(bankInputNameBooleanMapARGS.containsKey(true))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(true));
                bankInputNameBooleanMap.put(true,bankInputNameSet);
            }

        }

        bankInputNameBooleanMapARGS= new HashMap<Boolean,Set<BankInputName>>();
        //TILL HERE

//        String id = "";
        for (BankInputName input : inputList)
        {
            /*if (!functions.isValueNull(id) || !id.equals(input.toString()))
            {
                id = input.toString();*/
            switch (input)
            {
                case numOfShareholders:
                    if (!ESAPI.validator().isValidInput("numOfShareholders", ownershipProfileVO.getNumOfShareholders(), "Numbers", 2,isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NUM_OF_SHAREHOLDERS);
                        validationErrorList.addError("numOfShareholders", new PZValidationException("numOfShareholders","Invalid Data" + ":::" + ownershipProfileVO.getNumOfShareholders(),"2", errorCodeVO));
                        ownershipProfileVO.setNumOfShareholders("");
                    }
                    break;
                case numOfCorporateShareholders:
                    if (!ESAPI.validator().isValidInput("numOfCorporateShareholders", ownershipProfileVO.getNumOfCorporateShareholders(), "Numbers", 2,isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NUM_OF_CORPORATESHAREHOLDERS);
                        validationErrorList.addError("numOfCorporateShareholders", new PZValidationException("numOfCorporateShareholders","Invalid Data" + ":::" + ownershipProfileVO.getNumOfCorporateShareholders(),"2", errorCodeVO));
                        ownershipProfileVO.setNumOfCorporateShareholders("");
                    }
                    break;
                case numOfDirectors:
                    if (!ESAPI.validator().isValidInput("numOfDirectors", ownershipProfileVO.getNumOfDirectors(), "Numbers", 2,isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NUM_OF_DIRECTORS);
                        validationErrorList.addError("numOfDirectors", new PZValidationException("numOfDirectors","Invalid Data" + ":::" + ownershipProfileVO.getNumOfDirectors(),"2", errorCodeVO));
                        ownershipProfileVO.setNumOfDirectors("");
                    }
                    break;
                case numOfAuthrisedSignatory:
                    if (!ESAPI.validator().isValidInput("numOfAuthrisedSignatory", ownershipProfileVO.getNumOfAuthrisedSignatory(), "Numbers", 2,isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NUM_OF_AUTHSIGNATORY);
                        validationErrorList.addError("numOfAuthrisedSignatory", new PZValidationException("numOfAuthrisedSignatory","Invalid Data" + ":::" + ownershipProfileVO.getNumOfAuthrisedSignatory(),"2", errorCodeVO));
                        ownershipProfileVO.setNumOfAuthrisedSignatory("");
                    }
                    break;


                //Add Shareholder Validation
                case shareholderprofile1:

                    if (!ESAPI.validator().isValidInput("shareholderprofile1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getFirstname(), "StrictString", 50, isOptional))// changed
                    {
                        //validationErrorList.addError("shareholderprofile1", new ValidationException("shareholderprofile1", "Invalid Shareholderprofile1#1 :::" + ownershipProfileVO.getShareholderprofile1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1);
                        validationErrorList.addError("shareholderprofile1", new PZValidationException("shareholderprofile1", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setFirstname("");
                    }
                    break;
                case shareholderprofile1_lastname:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getLastname(), "StrictString", 50, isOptional))// changed
                    {
                        //validationErrorList.addError("shareholderprofile1_lastname", new ValidationException("shareholderprofile1_lastname", "Invalid shareholderprofile1_lastname :::" + ownershipProfileVO.getShareholderprofile1_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_LASTNAME);
                        validationErrorList.addError("shareholderprofile1_lastname", new PZValidationException("shareholderprofile1_lastname", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setLastname("");
                    }
                    break;
                case shareholderprofile1_title:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_title", new ValidationException("shareholderprofile1_title", "Invalid Shareholder profile1 title:::" + ownershipProfileVO.getShareholderprofile1_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_TITLE);
                        validationErrorList.addError("shareholderprofile1_title", new PZValidationException("shareholderprofile1_title", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setTitle("");
                    }
                    break;
                case shareholderprofile1_owned:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned(), "Percentage", 4, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_owned", new ValidationException("shareholderprofile1_owned", "Invalid shareholder profile1 owned:::" + ownershipProfileVO.getShareholderprofile1_owned(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_OWNED);
                        validationErrorList.addError("shareholderprofile1_owned", new PZValidationException("shareholderprofile1_owned", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_OWNED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setOwned("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()))
                    {
                        if (Integer.parseInt(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) == 100 || Integer.parseInt(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) >= 25)
                        {
                            if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned()) && Integer.parseInt(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) < 100)
                            {
                                condShareholderOwned2 = isOptional || false;
                            }
                            else
                                condShareholderOwned2 = true;
                        }
                        else
                        {
                            if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned()))
                            {
                                condShareholderOwned2 = isOptional || false;
                            }
                            else
                                condShareholderOwned2 = isOptional;
                        }
                    }
                    bankInputNameList.add(BankInputName.shareholderprofile2);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_lastname);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_lastname, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_lastname)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_title);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_title, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_title)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_owned);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_owned, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_owned)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_State);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_State, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_State)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_address);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_address, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_address)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_city);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_city, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_city)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_street);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_street, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_street)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_zip);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_zip, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_zip)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_country);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_country, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_country)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_telnocc2);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_telnocc2, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_telnocc2)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_telephonenumber);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_telephonenumber, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_telephonenumber)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_emailaddress);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_emailaddress, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_emailaddress)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_dateofbirth);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_dateofbirth, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_dateofbirth)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_identificationtypeselect);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_identificationtypeselect, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_identificationtypeselect)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_identificationtype);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_identificationtype, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_identificationtype)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_nationality);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_nationality, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_nationality)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_Passportexpirydate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_Passportexpirydate, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_Passportexpirydate)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile2_passportissuedate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile2_passportissuedate, condShareholderOwned2 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2_passportissuedate)) ? false : true));
                    break;
                case shareholderprofile1_telnocc1:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_telnocc1", new ValidationException("shareholderprofile1_telnocc1", "Invalid telnocc:::" + ownershipProfileVO.getShareholderprofile1_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_TELNOCC1);
                        validationErrorList.addError("shareholderprofile1_telnocc1", new PZValidationException("shareholderprofile1_telnocc1", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setTelnocc1("");
                    }
                    break;
                case shareholderprofile1_telephonenumber:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getTelephonenumber(), "SignupPhone", 15, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_telephonenumber", new ValidationException("shareholderprofile1_telephonenumber", "Invalid shareholder profile1 telephonenumber:::" + ownershipProfileVO.getShareholderprofile1_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_TELEPHONE);
                        validationErrorList.addError("shareholderprofile1_telephonenumber", new PZValidationException("shareholderprofile1_telephonenumber", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setTelephonenumber("");
                    }
                    break;
                case shareholderprofile1_emailaddress:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getEmailaddress(), "Email", 50, isOptional))//isOptinal to true
                    {
                        //validationErrorList.addError("shareholderprofile1_emailaddress", new ValidationException("shareholderprofile1_emailaddress", "Invalid shareholder profile1 emailaddress:::" + ownershipProfileVO.getShareholderprofile1_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_EMAIL);
                        validationErrorList.addError("shareholderprofile1_emailaddress", new PZValidationException("shareholderprofile1_emailaddress", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setEmailaddress("");
                    }
                    break;
                case shareholderprofile1_dateofbirth:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //System.out.println("inside shareholderprofile1_dateofbirth if dob");
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_SHAREHOLDER_PROFILE1_DOB);
                        validationErrorList.addError("shareholderprofile1_dateofbirth", new PZValidationException("shareholderprofile1_dateofbirth", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setDateofbirth("");
                    }
                    else
                    {
                        //System.out.println("inside shareholderprofile1_dateofbirth else dob");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getDateofbirth(), "00:00:00"));
                    }
                    break;

                /*case shareholderprofile4_dateofbirth:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "fromDate", 50, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        System.out.println("inside if dob");
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_SHAREHOLDER_PROFILE1_DOB);
                        validationErrorList.addError("shareholderprofile4_dateofbirth", new PZValidationException("shareholderprofile4_dateofbirth", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setDateofbirth("");
                    }
                    else
                    {
                        System.out.println("inside else dob");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "00:00:00"));
                    }
                    break;*/


                case shareholderprofile1_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_identificationtypeselect", new ValidationException("shareholderprofile1_identificationtypeselect", "Invalid Shareholderprofile1 Identification Type select:::" + ownershipProfileVO.getShareholderprofile1_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("shareholderprofile1_identificationtypeselect", new PZValidationException("shareholderprofile1_identificationtypeselect", ErrorMessages.INVALID_SHAREHOLDERPROFILE1_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setIdentificationtypeselect("");
                    }
                    break;
                case shareholderprofile1_identificationtype:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getIdentificationtype(), "UserName", 30, isOptional))//isOptional to true
                    {
                        //validationErrorList.addError("shareholderprofile1_identificationtype", new ValidationException("shareholderprofile1_identificationtype", "Invalid Shareholderprofile1 Identification Type:::" + ownershipProfileVO.getShareholderprofile1_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_IDENTIFICATIONTYPE);
                        validationErrorList.addError("shareholderprofile1_identificationtype", new PZValidationException("shareholderprofile1_identificationtype", ErrorMessages.INVALID_SHAREHOLDERPROFILE1_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setIdentificationtype("");
                    }
                    break;
                case shareholderprofile1_State:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getState(), "StrictString", 30, isOptional))//isOptional to true
                    {
                        //validationErrorList.addError("shareholderprofile1_State", new ValidationException("shareholderprofile1_State", "Invalid Shareholderprofile1 State:::" + ownershipProfileVO.getShareholderprofile1_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_STATE);
                        validationErrorList.addError("shareholderprofile1_State", new PZValidationException("shareholderprofile1_State", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setState("");
                    }
                    break;
                case shareholderprofile1_address:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_address", new ValidationException("shareholderprofile1_address", "Invalid Shareholder Profile1 Address:::" + ownershipProfileVO.getShareholderprofile1_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_ADDRESS);
                        validationErrorList.addError("shareholderprofile1_address", new PZValidationException("shareholderprofile1_address", ErrorMessages.INVALID_SHAREHOLDERPROFILE1_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setAddress("");
                    }
                    break;
                case shareholderprofile1_city:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCity(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_city", new ValidationException("shareholderprofile1_city", "Invalid Shareholderprofile1 City:::" + ownershipProfileVO.getShareholderprofile1_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_CITY);
                        validationErrorList.addError("shareholderprofile1_city", new PZValidationException("shareholderprofile1_city", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setCity("");
                    }
                    break;
                case shareholderprofile1_zip:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_zip", new ValidationException("shareholderprofile1_zip", "Invalid Shareholderprofile1 Zip:::" + ownershipProfileVO.getShareholderprofile1_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_ZIP);
                        validationErrorList.addError("shareholderprofile1_zip", new PZValidationException("shareholderprofile1_zip", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setZipcode("");
                    }
                    break;
                case shareholderprofile1_country:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCountry(), "AppCountry", 30, isOptional))
                    {
                        // validationErrorList.addError("shareholderprofile1_country", new ValidationException("shareholderprofile1_country", "Invalid Shareholderprofile1 Address:::" + ownershipProfileVO.getShareholderprofile1_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_COUNTRY);
                        validationErrorList.addError("shareholderprofile1_country", new PZValidationException("shareholderprofile1_country", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCountry()))
                    {
                        String shareholderprofile1_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setCountry(shareholderprofile1_country[0].toString());
                    }
                    break;
                case shareholderprofile1_street:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_STREET);
                        validationErrorList.addError("shareholderprofile1_street", new PZValidationException("shareholderprofile1_street", ErrorMessages.INVALID_SHAREHOLDER_PROFILE1_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setStreet("");
                    }
                    break;
                case shareholderprofile1_nationality:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("shareholderprofile1_nationality", new ValidationException("shareholderprofile1_nationality", "Invalid shareholderprofile1_nationality:::" + ownershipProfileVO.getShareholderprofile1_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_NATIONALITY);
                        validationErrorList.addError("shareholderprofile1_nationality", new PZValidationException("shareholderprofile1_nationality", ErrorMessages.INVALID_SHAREHOLDERPROFILE1_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setNationality("");
                    }
                    break;
                case shareholderprofile1_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("shareholderprofile1_Passportexpirydate", new ValidationException("shareholderprofile1_Passportexpirydate", "Invalid Passportexpirydate" + ownershipProfileVO.getShareholderprofile1_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_PASSPORT_EXPIRYDATE);
                        validationErrorList.addError("shareholderprofile1_Passportexpirydate", new PZValidationException("shareholderprofile1_Passportexpirydate", ErrorMessages.INVALID_SHAREHOLDERPROFILE1_PASSPORT_EXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case shareholderprofile1_passportissuedate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE1_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("shareholderprofile1_passportissuedate", new PZValidationException("shareholderprofile1_passportissuedate", ErrorMessages.INVALID_SHAREHOLDERPROFILE1_PASSPORT_EXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case shareholderprofile1_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPoliticallyexposed(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER1_POLITICALLY_EXPOSED);
                        validationErrorList.addError("shareholderprofile1_politicallyexposed", new PZValidationException("shareholderprofile1_politicallyexposed", ErrorMessages.INVALID_SHAREHOLDER1_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setPoliticallyexposed("");
                    }
                    break;
                case shareholderprofile1_criminalrecord:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCriminalrecord(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER1_CRIMINAL_RECORDS);
                        validationErrorList.addError("shareholderprofile1_criminalrecord", new PZValidationException("shareholderprofile1_criminalrecord", ErrorMessages.INVALID_SHAREHOLDER1_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setCriminalrecord("");
                    }
                    break;
                case shareholderprofile1_addressproof:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getAddressProof(), "addressProofSelect", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_ADDRESSPROOF);
                        validationErrorList.addError("shareholderprofile1_addressproof", new PZValidationException("shareholderprofile1_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setAddressProof("");
                    }
                    break;
                case shareholderprofile1_addressId:
                    if (!ESAPI.validator().isValidInput("shareholderprofile1_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getAddressId(), "alphanum", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE1_ADDRESSID);
                        validationErrorList.addError("shareholderprofile1_addressId", new PZValidationException("shareholderprofile1_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).setAddressId("");
                    }
                    break;
                case shareholderprofile2_owned:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned(), "Percentage", 4, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE2_OWNED);
                        validationErrorList.addError("shareholderprofile2_owned", new PZValidationException("shareholderprofile2_owned", ErrorMessages.INVALID_SHAREHOLDERPROFILE2_OWNED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setOwned("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned()) && functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()))
                    {
                        if ((Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) + Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())) == 100 || (Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) + Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())) >= 25)
                        {
                            if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned()) && (Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) + Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())) < 100)
                            {
                                condShareholderOwned3 = isOptional || false;
                            }
                            else
                                condShareholderOwned3 = true;
                        }
                        else
                        {
                            if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned()))
                            {
                                condShareholderOwned3 = isOptional || false;
                            }
                            else
                                condShareholderOwned3 = isOptional;
                        }
                    }
                    bankInputNameList.add(BankInputName.shareholderprofile3);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile2)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_lastname);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_lastname, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_lastname)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_title);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_title, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_title)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_owned);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_owned, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_owned)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_State);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_State, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_State)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_address);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_address, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_address)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_city);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_city, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_city)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_street);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_street, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_street)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_zip);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_zip, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_zip)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_country);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_country, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_country)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_telnocc2);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_telnocc2, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_telnocc2)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_telephonenumber);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_telephonenumber, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_telephonenumber)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_emailaddress);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_emailaddress, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_emailaddress)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_dateofbirth);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_dateofbirth, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_dateofbirth)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_identificationtypeselect);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_identificationtypeselect, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_identificationtypeselect)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_identificationtype);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_identificationtype, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_identificationtype)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_nationality);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_nationality, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_nationality)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_Passportexpirydate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_Passportexpirydate, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_Passportexpirydate)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile3_passportissuedate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile3_passportissuedate, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3_passportissuedate)) ? false : true));

                    break;

                case shareholderprofile2:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getFirstname(), "StrictString", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2);
                        validationErrorList.addError("shareholderprofile2", new PZValidationException("shareholderprofile2", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setFirstname("");
                    }
                    break;
                case shareholderprofile2_lastname:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getLastname(), "StrictString", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))// changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_LASTNAME);
                        validationErrorList.addError("shareholderprofile2_lastname", new PZValidationException("shareholderprofile2_lastname", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setLastname("");
                    }
                    break;
                case shareholderprofile2_title:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getTitle(), "Title", 7, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_TITLE);
                        validationErrorList.addError("shareholderprofile2_title", new PZValidationException("shareholderprofile2_title", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setTitle("");
                    }
                    break;
                case shareholderprofile2_telnocc2:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_telnocc2", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getTelnocc1(), "OnlyNumber", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_TELNOCC2);
                        validationErrorList.addError("shareholderprofile2_telnocc2", new PZValidationException("shareholderprofile2_telnocc2", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setTelnocc1("");
                    }
                    break;
                case shareholderprofile2_telephonenumber:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getTelephonenumber(), "Phone", 15, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_TELNO);
                        validationErrorList.addError("shareholderprofile2_telephonenumber", new PZValidationException("shareholderprofile2_telephonenumber", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setTelephonenumber("");
                    }
                    break;
                case shareholderprofile2_emailaddress:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getEmailaddress(), "Email", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_EMAIL);
                        validationErrorList.addError("shareholderprofile2_emailaddress", new PZValidationException("shareholderprofile2_emailaddress", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setEmailaddress("");
                    }
                    break;
                case shareholderprofile2_dateofbirth:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_DOB);
                        validationErrorList.addError("shareholderprofile2_dateofbirth", new PZValidationException("shareholderprofile2_dateofbirth", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setDateofbirth("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case shareholderprofile2_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getIdentificationtypeselect(), "identificationtypeselect", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("shareholderprofile2_identificationtypeselect", new PZValidationException("shareholderprofile2_identificationtypeselect", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setIdentificationtypeselect("");
                    }
                    break;
                case shareholderprofile2_identificationtype:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getIdentificationtype(), "UserName", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_IDENTIFICATIONTYPE);
                        validationErrorList.addError("shareholderprofile2_identificationtype", new PZValidationException("shareholderprofile2_identificationtype", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setIdentificationtype("");
                    }
                    break;
                case shareholderprofile2_State:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getState(), "StrictString", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_STATE);
                        validationErrorList.addError("shareholderprofile2_State", new PZValidationException("shareholderprofile2_State", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setState("");
                    }
                    break;
                case shareholderprofile2_address:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getAddress(), "SafeString", 150, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_ADDRESS);
                        validationErrorList.addError("shareholderprofile2_address", new PZValidationException("shareholderprofile2_address", ErrorMessages.INVALID_SKYPE_SHAREHOLDER_PROFILE2_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setAddress("");
                    }
                    break;
                case shareholderprofile2_city:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getCity(), "StrictString", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_CITY);
                        validationErrorList.addError("shareholderprofile2_city", new PZValidationException("shareholderprofile2_city", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setCity("");
                    }
                    break;
                case shareholderprofile2_zip:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getZipcode(), "alphanum", 11, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_ZIP);
                        validationErrorList.addError("shareholderprofile2_zip", new PZValidationException("shareholderprofile2_zip", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setZipcode("");
                    }
                    break;
                case shareholderprofile2_country:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getCountry(), "AppCountry", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_COUNTRY);
                        validationErrorList.addError("shareholderprofile2_country", new PZValidationException("shareholderprofile2_country", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getCountry()))
                    {
                        String shareholderprofile2_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setCountry(shareholderprofile2_country[0].toString());
                    }
                    break;
                case shareholderprofile2_street:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getStreet(), "Description", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_STREET);
                        validationErrorList.addError("shareholderprofile2_street", new PZValidationException("shareholderprofile2_street", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setStreet("");
                    }
                    break;
                case shareholderprofile2_nationality:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getNationality(), "AppCountry", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_NATIONALITY);
                        validationErrorList.addError("shareholderprofile2_nationality", new PZValidationException("shareholderprofile2_nationality", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setNationality("");
                    }
                    break;
                case shareholderprofile2_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate(), "dd/MM/yyyy"))))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_PASSPORT_EXPIRYDATE);
                        validationErrorList.addError("shareholderprofile2_Passportexpirydate", new PZValidationException("shareholderprofile2_Passportexpirydate", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_PASSPORT_EXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case shareholderprofile2_passportissuedate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate(), "dd/MM/yyyy"))))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE2_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("shareholderprofile2_passportissuedate", new PZValidationException("shareholderprofile2_passportissuedate", ErrorMessages.INVALID_SHAREHOLDER_PROFILE2_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case shareholderprofile2_addressproof:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE2_ADDRESSPROOF);
                        validationErrorList.addError("shareholderprofile2_addressproof", new PZValidationException("shareholderprofile2_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setAddressProof("");
                    }
                    break;
                case shareholderprofile2_addressId:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE2_ADDRESSID);
                        validationErrorList.addError("shareholderprofile2_addressId", new PZValidationException("shareholderprofile2_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).setAddressId("");
                    }
                    break;
                /*case shareholderprofile2_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_politicallyexposed", ownershipProfileVO.getShareholderprofile2_politicallyexposed(), "isYN", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER2_POLITICALLY_EXPOSED);
                        validationErrorList.addError("shareholderprofile2_politicallyexposed", new PZValidationException("shareholderprofile2_politicallyexposed",ErrorMessages.INVALID_SHAREHOLDER2_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getShareholderprofile2_politicallyexposed(),"2", errorCodeVO));
                        ownershipProfileVO.setShareholderprofile2_politicallyexposed("");
                    }
                    break;
                case shareholderprofile2_criminalrecord:
                    if (!ESAPI.validator().isValidInput("shareholderprofile2_criminalrecord", ownershipProfileVO.getShareholderprofile2_criminalrecord(), "isYN", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER2_CRIMINAL_RECORDS);
                        validationErrorList.addError("shareholderprofile2_criminalrecord", new PZValidationException("shareholderprofile2_criminalrecord",ErrorMessages.INVALID_SHAREHOLDER2_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getShareholderprofile2_criminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.setShareholderprofile2_criminalrecord("");
                    }
                    break;*/
                //Add Specific Shareholder profile 3
                /*case shareholderprofile3_owned:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned(), "Percentage", 4, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_OWNED);
                        validationErrorList.addError("shareholderprofile3_owned", new PZValidationException("shareholderprofile3_owned", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_OWNED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setOwned("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned()))
                    {
                        condShareholderOwned3 = isOptional;
                    }
                    break;*/

                //Add Specific Shareholder profile 3 --suraj
                case shareholderprofile3_owned:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned(), "Percentage", 4, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_OWNED);
                        validationErrorList.addError("shareholderprofile3_owned", new PZValidationException("shareholderprofile3_owned", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_OWNED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setOwned("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned())&& functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())&& functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()))
                    {
                        if ((Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) + Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())+ Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned())) == 100 || (Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) + Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())+ Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned())) >= 25)
                        {
                            if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned()) && (Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) + Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned())+ Integer.valueOf(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned())) < 100)
                            {
                                condShareholderOwned4 = isOptional || false;
                            }
                            else
                            condShareholderOwned4 = true;
                        }
                        else
                        {
                            if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned()))
                            {
                                condShareholderOwned4 = isOptional || false;
                            }
                            else
                                condShareholderOwned4 = isOptional;
                        }
                    }

                    bankInputNameList.add(BankInputName.shareholderprofile4);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile3)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_lastname);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_lastname, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_lastname)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_title);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_title, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_title)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_owned);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_owned, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_owned)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_State);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_State, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_State)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_address);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_address, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_address)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_city);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_city, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_city)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_street);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_street, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_street)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_zip);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_zip, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_zip)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_country);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_country, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_country)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_telnocc2);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_telnocc2, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_telnocc2)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_telephonenumber);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_telephonenumber, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_telephonenumber)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_emailaddress);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_emailaddress, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_emailaddress)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_dateofbirth);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_dateofbirth, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_dateofbirth)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_identificationtypeselect);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_identificationtypeselect, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_identificationtypeselect)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_identificationtype);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_identificationtype, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_identificationtype)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_nationality);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_nationality, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_nationality)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_Passportexpirydate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_Passportexpirydate, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_Passportexpirydate)) ? false : true));
                    bankInputNameList.add(BankInputName.shareholderprofile4_passportissuedate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shareholderprofile4_passportissuedate, condShareholderOwned3 || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.shareholderprofile4_passportissuedate)) ? false : true));
                break;
                case shareholderprofile3:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getFirstname(), "StrictString", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3);
                        validationErrorList.addError("shareholderprofile3", new PZValidationException("shareholderprofile3", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setFirstname("");
                    }
                    break;
                case shareholderprofile3_lastname:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getLastname(), "StrictString", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))// changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_LASTNAME);
                        validationErrorList.addError("shareholderprofile3_lastname", new PZValidationException("shareholderprofile3_lastname", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setFirstname("");
                    }
                    break;
                case shareholderprofile3_title:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getTitle(), "Title", 7, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_TITLE);
                        validationErrorList.addError("shareholderprofile3_title", new PZValidationException("shareholderprofile3_title", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setTitle("");
                    }
                    break;
                case shareholderprofile3_telnocc2:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_telnocc2", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getTelnocc1(), "OnlyNumber", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_TELNOCC2);
                        validationErrorList.addError("shareholderprofile3_telnocc2", new PZValidationException("shareholderprofile3_telnocc2", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setTelnocc1("");
                    }
                    break;
                case shareholderprofile3_telephonenumber:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getTelephonenumber(), "Phone", 15, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_TELNO);
                        validationErrorList.addError("shareholderprofile3_telephonenumber", new PZValidationException("shareholderprofile3_telephonenumber", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setTelephonenumber("");
                    }
                    break;
                case shareholderprofile3_emailaddress:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getEmailaddress(), "Email", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_EMAIL);
                        validationErrorList.addError("shareholderprofile3_emailaddress", new PZValidationException("shareholderprofile3_emailaddress", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setEmailaddress("");
                    }
                    break;
                case shareholderprofile3_dateofbirth:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getDateofbirth(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_DOB);
                        validationErrorList.addError("shareholderprofile3_dateofbirth", new PZValidationException("shareholderprofile3_dateofbirth", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case shareholderprofile3_addressproof:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE3_ADDRESSPROOF);
                        validationErrorList.addError("shareholderprofile3_addressproof", new PZValidationException("shareholderprofile3_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setAddressProof("");
                    }
                    break;
                case shareholderprofile3_addressId:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE3_ADDRESSID);
                        validationErrorList.addError("shareholderprofile3_addressId", new PZValidationException("shareholderprofile3_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setAddressId("");
                    }
                    break;
                case shareholderprofile3_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getIdentificationtypeselect(), "identificationtypeselect", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("shareholderprofile3_identificationtypeselect", new PZValidationException("shareholderprofile3_identificationtypeselect", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setIdentificationtypeselect("");
                    }
                    break;
                case shareholderprofile3_identificationtype:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getIdentificationtype(), "UserName", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_IDENTIFICATIONTYPE);
                        validationErrorList.addError("shareholderprofile3_identificationtype", new PZValidationException("shareholderprofile3_identificationtype", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setIdentificationtype("");
                    }
                    break;
                case shareholderprofile3_State:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getState(), "StrictString", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_STATE);
                        validationErrorList.addError("shareholderprofile3_State", new PZValidationException("shareholderprofile3_State", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setState("");
                    }
                    break;
                case shareholderprofile3_address:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getAddress(), "SafeString", 150, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_ADDRESS);
                        validationErrorList.addError("shareholderprofile3_address", new PZValidationException("shareholderprofile3_address", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setAddress("");
                    }
                    break;
                case shareholderprofile3_city:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getCity(), "StrictString", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_CITY);
                        validationErrorList.addError("shareholderprofile3_city", new PZValidationException("shareholderprofile3_city", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setCity("");
                    }
                    break;
                case shareholderprofile3_zip:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getZipcode(), "alphanum", 11, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_ZIP);
                        validationErrorList.addError("shareholderprofile3_zip", new PZValidationException("shareholderprofile3_zip", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setZipcode("");
                    }
                    break;
                case shareholderprofile3_country:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getCountry(), "AppCountry", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_COUNTRY);
                        validationErrorList.addError("shareholderprofile3_country", new PZValidationException("shareholderprofile3_country", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getCountry()))
                    {
                        String shareholderprofile3_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setCountry(shareholderprofile3_country[0].toString());
                    }
                    break;
                case shareholderprofile3_street:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getStreet(), "Description", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_STREET);
                        validationErrorList.addError("shareholderprofile3_street", new PZValidationException("shareholderprofile3_street", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setStreet("");
                    }
                    break;
                case shareholderprofile3_nationality:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getNationality(), "AppCountry", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_NATIONALITY);
                        validationErrorList.addError("shareholderprofile3_nationality", new PZValidationException("shareholderprofile3_nationality", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setNationality("");
                    }
                    break;
                case shareholderprofile3_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_PASSPORT_EXPIRYDATE);
                        validationErrorList.addError("shareholderprofile3_Passportexpirydate", new PZValidationException("shareholderprofile3_Passportexpirydate", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_PASSPORT_EXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case shareholderprofile3_passportissuedate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile3_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate(), "dd/MM/yyyy"))))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("shareholderprofile3_passportissuedate", new PZValidationException("shareholderprofile3_passportissuedate", ErrorMessages.INVALID_SHAREHOLDER_PROFILE3_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getPassportissuedate(), "00:00:00"));
                    }
                    /*case shareholderprofile3_politicallyexposed:
                        if (!ESAPI.validator().isValidInput("shareholderprofile3_politicallyexposed", ownershipProfileVO.getShareholderprofile3_politicallyexposed(), "isYN", 50, isOptional))
                        {
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER3_POLITICALLY_EXPOSED);
                            validationErrorList.addError("shareholderprofile3_politicallyexposed", new PZValidationException("shareholderprofile3_politicallyexposed",ErrorMessages.INVALID_SHAREHOLDER3_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getShareholderprofile3_politicallyexposed(),"2", errorCodeVO));
                            ownershipProfileVO.setShareholderprofile3_politicallyexposed("");
                        }
                        break;
                    case shareholderprofile3_criminalrecord:
                        if (!ESAPI.validator().isValidInput("shareholderprofile3_criminalrecord", ownershipProfileVO.getShareholderprofile3_criminalrecord(), "isYN", 50, isOptional))
                        {
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER3_CRIMINAL_RECORDS);
                            validationErrorList.addError("shareholderprofile3_criminalrecord", new PZValidationException("shareholderprofile3_criminalrecord",ErrorMessages.INVALID_SHAREHOLDER3_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getShareholderprofile3_criminalrecord(), "2", errorCodeVO));
                            ownershipProfileVO.setShareholderprofile3_criminalrecord("");
                        }
                        break;*/
                    break;

                //Add Specific Shareholder profile 4
                case shareholderprofile4_owned:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned(), "Percentage", 4, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_OWNED);
                        validationErrorList.addError("shareholderprofile4_owned", new PZValidationException("shareholderprofile4_owned", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_OWNED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setOwned("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned()))
                    {
                        condShareholderOwned4 = isOptional;
                    }
                    break;
                case shareholderprofile4:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getFirstname(), "StrictString", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4);
                        validationErrorList.addError("shareholderprofile4", new PZValidationException("shareholderprofile4", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setFirstname("");
                    }
                    break;
                case shareholderprofile4_lastname:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getLastname(), "StrictString", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))// changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_LASTNAME);
                        validationErrorList.addError("shareholderprofile4_lastname", new PZValidationException("shareholderprofile4_lastname", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setFirstname("");
                    }
                    break;
                case shareholderprofile4_title:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getTitle(), "Title", 7, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_TITLE);
                        validationErrorList.addError("shareholderprofile4_title", new PZValidationException("shareholderprofile4_title", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setTitle("");
                    }
                    break;
                case shareholderprofile4_telnocc2:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_telnocc2", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getTelnocc1(), "OnlyNumber", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_TELNOCC2);
                        validationErrorList.addError("shareholderprofile4_telnocc2", new PZValidationException("shareholderprofile3_telnocc2", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setTelnocc1("");
                    }
                    break;
                case shareholderprofile4_telephonenumber:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getTelephonenumber(), "Phone", 15, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_TELNO);
                        validationErrorList.addError("shareholderprofile4_telephonenumber", new PZValidationException("shareholderprofile4_telephonenumber", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setTelephonenumber("");
                    }
                    break;
                case shareholderprofile4_emailaddress:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getEmailaddress(), "Email", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_EMAIL);
                        validationErrorList.addError("shareholderprofile4_emailaddress", new PZValidationException("shareholderprofile4_emailaddress", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setEmailaddress("");
                    }
                    break;
                case shareholderprofile4_dateofbirth:
                    //System.out.println("shareholderprofile4_dateofbirth : "+ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth());
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //System.out.println("inside if shareholderprofile4_dateofbirth");
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_DOB);
                        validationErrorList.addError("shareholderprofile4_dateofbirth", new PZValidationException("shareholderprofile4_dateofbirth", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setDateofbirth("");
                    }
                    else
                    {
                        //System.out.println("inside else shareholderprofile4_dateofbirth ");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case shareholderprofile4_addressproof:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE4_ADDRESSPROOF);
                        validationErrorList.addError("shareholderprofile4_addressproof", new PZValidationException("shareholderprofile4_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setAddressProof("");
                    }
                    break;
                case shareholderprofile4_addressId:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDERPROFILE4_ADDRESSID);
                        validationErrorList.addError("shareholderprofile4_addressId", new PZValidationException("shareholderprofile4_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setAddressId("");
                    }
                    break;
                case shareholderprofile4_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getIdentificationtypeselect(), "identificationtypeselect", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("shareholderprofile4_identificationtypeselect", new PZValidationException("shareholderprofile4_identificationtypeselect", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setIdentificationtypeselect("");
                    }
                    break;
                case shareholderprofile4_identificationtype:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getIdentificationtype(), "UserName", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_IDENTIFICATIONTYPE);
                        validationErrorList.addError("shareholderprofile4_identificationtype", new PZValidationException("shareholderprofile4_identificationtype", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setIdentificationtype("");
                    }
                    break;
                case shareholderprofile4_State:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getState(), "StrictString", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_STATE);
                        validationErrorList.addError("shareholderprofile4_State", new PZValidationException("shareholderprofile4_State", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setState("");
                    }
                    break;
                case shareholderprofile4_address:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getAddress(), "SafeString", 150, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE3_ADDRESS);
                        validationErrorList.addError("shareholderprofile4_address", new PZValidationException("shareholderprofile4_address", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setAddress("");
                    }
                    break;
                case shareholderprofile4_city:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getCity(), "StrictString", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_CITY);
                        validationErrorList.addError("shareholderprofile4_city", new PZValidationException("shareholderprofile4_city", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setCity("");
                    }
                    break;
                case shareholderprofile4_zip:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getZipcode(), "alphanum", 11, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_ZIP);
                        validationErrorList.addError("shareholderprofile4_zip", new PZValidationException("shareholderprofile4_zip", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setZipcode("");
                    }
                    break;
                case shareholderprofile4_country:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getCountry(), "AppCountry", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_COUNTRY);
                        validationErrorList.addError("shareholderprofile4_country", new PZValidationException("shareholderprofile4_country", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getCountry()))
                    {
                        String shareholderprofile4_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setCountry(shareholderprofile4_country[0].toString());
                    }
                    break;
                case shareholderprofile4_street:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getStreet(), "Description", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_STREET);
                        validationErrorList.addError("shareholderprofile4_street", new PZValidationException("shareholderprofile4_street", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setStreet("");
                    }
                    break;
                case shareholderprofile4_nationality:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getNationality(), "AppCountry", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true))//true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_NATIONALITY);
                        validationErrorList.addError("shareholderprofile4_nationality", new PZValidationException("shareholderprofile4_nationality", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setNationality("");
                    }
                    break;
                case shareholderprofile4_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_PASSPORT_EXPIRYDATE);
                        validationErrorList.addError("shareholderprofile4_Passportexpirydate", new PZValidationException("shareholderprofile4_Passportexpirydate", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_PASSPORT_EXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case shareholderprofile4_passportissuedate:
                    if (!ESAPI.validator().isValidInput("shareholderprofile4_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate(), "fromDate", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input) ? false : true) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate(), "dd/MM/yyyy"))))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("shareholderprofile4_passportissuedate", new PZValidationException("shareholderprofile4_passportissuedate", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getPassportissuedate(), "00:00:00"));
                    }
                    //Special Condition
                case Shareholdertotal:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input)) ? true : false) && (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned())))
                    {
                        if (Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned() : "0")+ Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getOwned() : "0")+ Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getOwned() : "0") > 100)
                        {
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_OWNED_TOTAL);
                            validationErrorList.addError("shareholderplus_owned", new PZValidationException("shareholderplus_owned", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_OWNED_TOTAL, "2", errorCodeVO));
                        }
                        else if (Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER1).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER2).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER3).getOwned() : "0")+ Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.SHAREHOLDER4).getOwned() : "0")  + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getOwned() : "0") + Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getOwned() : "0")+ Integer.parseInt(functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getOwned()) ? ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getOwned() : "0") < 25)/* && !(bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))*/
                        {
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHAREHOLDER_PROFILE4_OWNED_TOTAL_GREATER);
                            validationErrorList.addError("shareholderplus_owned", new PZValidationException("shareholderplus_owned", ErrorMessages.INVALID_SHAREHOLDER_PROFILE4_OWNED_TOTAL_GREATER, "2", errorCodeVO));
                        }
                    }
                    break;

                //directors profile
                case directorsprofile:
                    if (!ESAPI.validator().isValidInput("directorsprofile", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE);
                        validationErrorList.addError("directorsprofile", new PZValidationException("directorsprofile", ErrorMessages.INVALID_DIRECTORS_PROFILE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setFirstname("");
                    }
                    break;
                case directorsprofile_lastname:
                    if (!ESAPI.validator().isValidInput("directorsprofile_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_LASTNAME);
                        validationErrorList.addError("directorsprofile_lastname", new PZValidationException("directorsprofile_lastname", ErrorMessages.INVALID_DIRECTORS_PROFILE_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setLastname("");
                    }
                    break;
                case directorsprofile_title:
                    if (!ESAPI.validator().isValidInput("directorsprofile_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getTitle(), "Title", 7, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_TITLE);
                        validationErrorList.addError("directorsprofile_title", new PZValidationException("directorsprofile_title", ErrorMessages.INVALID_DIRECTORS_PROFILE_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setTitle("");
                    }
                    break;
                case directorsprofile_telnocc1:
                    if (!ESAPI.validator().isValidInput("directorsprofile_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_TELNOCC);
                        validationErrorList.addError("directorsprofile_telnocc1", new PZValidationException("directorsprofile_telnocc1", ErrorMessages.INVALID_DIRECTORS_PROFILE_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setTelnocc1("");
                    }
                    break;
                case directorsprofile_telephonenumber:
                    if (!ESAPI.validator().isValidInput("directorsprofile_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_TELNO);
                        validationErrorList.addError("directorsprofile_telephonenumber", new PZValidationException("directorsprofile_telephonenumber", ErrorMessages.INVALID_DIRECTORS_PROFILE_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setTelephonenumber("");
                    }
                    break;

                case directorsprofile_emailaddress:
                    if (!ESAPI.validator().isValidInput("directorsprofile_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getEmailaddress(), "Email", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_EMAIL);
                        validationErrorList.addError("directorsprofile_emailaddress", new PZValidationException("directorsprofile_emailaddress", ErrorMessages.INVALID_DIRECTORS_PROFILE_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setEmailaddress("");
                    }
                    break;
                case directorsprofile_dateofbirth:
                    if (!ESAPI.validator().isValidInput("directorsprofile_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_DOB);
                        validationErrorList.addError("directorsprofile_dateofbirth", new PZValidationException("directorsprofile_dateofbirth", ErrorMessages.INVALID_DIRECTORS_PROFILE_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case directorsprofile_addressproof:
                    if (!ESAPI.validator().isValidInput("directorsprofile_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSPROOF);
                        validationErrorList.addError("directorsprofile_addressproof", new PZValidationException("directorsprofile_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setAddressProof("");
                    }
                    break;
                case directorsprofile_addressId:
                    if (!ESAPI.validator().isValidInput("directorsprofile_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSID);
                        validationErrorList.addError("directorsprofile_addressId", new PZValidationException("directorsprofile_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setAddressId("");
                    }
                    break;
                case directorsprofile_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("directorsprofile_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("directorsprofile_identificationtypeselect", new PZValidationException("directorsprofile_identificationtypeselect", ErrorMessages.INVALID_DIRECTORS_PROFILE_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setIdentificationtypeselect("");
                    }
                    break;

                case directorsprofile_identificationtype:
                    if (!ESAPI.validator().isValidInput("directorsprofile_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_IDENTIFICATIONTYPE);
                        validationErrorList.addError("directorsprofile_identificationtype", new PZValidationException("directorsprofile_identificationtype", ErrorMessages.INVALID_DIRECTORS_PROFILE_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setIdentificationtype("");
                    }
                    break;
                case directorsprofile_State:
                    if (!ESAPI.validator().isValidInput("directorsprofile_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getState(), "StrictString", 50, isOptional))// isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_STATE);
                        validationErrorList.addError("directorsprofile_State", new PZValidationException("directorsprofile_State", ErrorMessages.INVALID_DIRECTORS_PROFILE_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setState("");
                    }
                    break;
                case directorsprofile_address:
                    if (!ESAPI.validator().isValidInput("directorsprofile_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getAddress(), "SafeString", 150, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESS);
                        validationErrorList.addError("directorsprofile_address", new PZValidationException("directorsprofile_address", ErrorMessages.INVALID_DIRECTORS_PROFILE_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setAddress("");
                    }
                    break;
                case directorsprofile_city:
                    if (!ESAPI.validator().isValidInput("directorsprofile_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCity(), "StrictString", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_CITY);
                        validationErrorList.addError("directorsprofile_city", new PZValidationException("directorsprofile_city", ErrorMessages.INVALID_DIRECTORS_PROFILE_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setCity("");
                    }
                    break;
                case directorsprofile_zip:
                    if (!ESAPI.validator().isValidInput("directorsprofile_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getZipcode(), "alphanum", 11, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ZIP);
                        validationErrorList.addError("directorsprofile_zip", new PZValidationException("directorsprofile_zip", ErrorMessages.INVALID_DIRECTORS_PROFILE_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setZipcode("");
                    }
                    break;
                case directorsprofile_country:
                    if (!ESAPI.validator().isValidInput("directorsprofile_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCountry(), "AppCountry", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_COUNTRY);
                        validationErrorList.addError("directorsprofile_country", new PZValidationException("directorsprofile_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCountry()))
                    {
                        String directorsprofile_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setCountry(directorsprofile_country[0].toString());
                    }
                    break;
                case directorsprofile_street:
                    if (!ESAPI.validator().isValidInput("directorsprofile_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_STREET);
                        validationErrorList.addError("directorsprofile_street", new PZValidationException("directorsprofile_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setStreet("");
                    }
                    break;
                case directorsprofile_nationality:
                    if (!ESAPI.validator().isValidInput("directorsprofile_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getNationality(), "AppCountry", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_NATIONALITY);
                        validationErrorList.addError("directorsprofile_nationality", new PZValidationException("directorsprofile_nationality", ErrorMessages.INVALID_DIRECTORS_PROFILE_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setNationality("");
                    }
                    break;
                case directorsprofile_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("directorsprofile_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("directorsprofile_Passportexpirydate", new PZValidationException("directorsprofile_Passportexpirydate", ErrorMessages.INVALID_DIRECTORS_PROFILE_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case directorsprofile_passportissuedate:
                    if (!ESAPI.validator().isValidInput("directorsprofile_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("directorsprofile_passportissuedate", new PZValidationException("directorsprofile_passportissuedate", ErrorMessages.INVALID_DIRECTORS_PROFILE_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPassportissuedate(), "00:00:00"));
                    }
                    break;

                case directorsprofile_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("directorsprofile_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPoliticallyexposed(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE_POLITICALLY_EXPOSED);
                        validationErrorList.addError("directorsprofile_politicallyexposed", new PZValidationException("directorsprofile_politicallyexposed", ErrorMessages.INVALID_DIRECTORSPROFILE_POLITICALLT_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setPoliticallyexposed("");
                    }
                    break;

                case directorsprofile_criminalrecord:
                    if (!ESAPI.validator().isValidInput("directorsprofile_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCriminalrecord(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE_CRIMINAL_RECORD);
                        validationErrorList.addError("directorsprofile_criminalrecord", new PZValidationException("directorsprofile_criminalrecord", ErrorMessages.INVALID_DIRECTORSPROFILE_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setCriminalrecord("");
                    }
                    break;
                case directorsprofile_owned:
                    logger.debug("inside directorsprofile_owned validation--");
                    //System.out.println("inside directorsprofile_owned validation--");
                    if (!ESAPI.validator().isValidInput("directorsprofile_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_OWNED);
                        validationErrorList.addError("directorsprofile_owned", new PZValidationException("directorsprofile_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR1).setOwned("");
                    }
                    break;

                //Director Profile 2
                case directorsprofile2:
                    if (!ESAPI.validator().isValidInput("directorsprofile2", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("directorsprofile2", new ValidationException("directorsprofile2", "Invalid Name-Principal#2 :::" + ownershipProfileVO.getDirectorsprofile2(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2);
                        validationErrorList.addError("directorsprofile2", new PZValidationException("directorsprofile2", ErrorMessages.INVALID_DIRECTORSPROFILE2 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setFirstname("");
                    }
                    break;
                case directorsprofile2_lastname:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("directorsprofile2_lastname", new ValidationException("directorsprofile2_lastname", "Invalid Directorsprofile2 lastname :::" + ownershipProfileVO.getDirectorsprofile2_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_LASTNAME);
                        validationErrorList.addError("directorsprofile2_lastname", new PZValidationException("directorsprofile2_lastname", ErrorMessages.INVALID_DIRECTORS_PROFILE2_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setLastname("");
                    }
                    break;
                case directorsprofile2_title:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getTitle(), "Title", 7, isOptional))
                    {
                        // validationErrorList.addError("directorsprofile2_title", new ValidationException("directorsprofile2_title", "Invalid Directorsprofile2 Title:::" + ownershipProfileVO.getDirectorsprofile2_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_TITLE);
                        validationErrorList.addError("directorsprofile2_title", new PZValidationException("directorsprofile2_title", ErrorMessages.INVALID_DIRECTORSPROFILE2_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setTitle("");
                    }
                    break;
                case directorsprofile2_telnocc1:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_telnocc1", new ValidationException("directorsprofile2_telnocc1", "Invalid Directorsprofile2 telnocc:::" + ownershipProfileVO.getDirectorsprofile2_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_TELNOCC);
                        validationErrorList.addError("directorsprofile2_telnocc1", new PZValidationException("directorsprofile2_telnocc1", ErrorMessages.INVALID_DIRECTORSPROFILE2_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setTelnocc1("");
                    }
                    break;
                case directorsprofile2_telephonenumber:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_telephonenumber", new ValidationException("directorsprofile2_telephonenumber", "Invalid Directorsprofile2 Telephone Number:::" + ownershipProfileVO.getDirectorsprofile2_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_TELNO);
                        validationErrorList.addError("directorsprofile2_telephonenumber", new PZValidationException("directorsprofile2_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setTelephonenumber("");
                    }
                    break;
                case directorsprofile2_emailaddress:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getEmailaddress(), "Email", 50, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_emailaddress", new ValidationException("directorsprofile2_emailaddress", "Invalid Directorsprofile2 Email Address:::" + ownershipProfileVO.getDirectorsprofile2_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_EMAIL);
                        validationErrorList.addError("directorsprofile2_emailaddress", new PZValidationException("directorsprofile2_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setEmailaddress("");
                    }
                    break;
                case directorsprofile2_dateofbirth:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("directorsprofile2_dateofbirth", new ValidationException("directorsprofile2_dateofbirth", "Invalid Directorsprofile2 Date of Birth" + ownershipProfileVO.getDirectorsprofile2_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_DOB);
                        validationErrorList.addError("directorsprofile2_dateofbirth", new PZValidationException("directorsprofile2_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case directorsprofile2_addressproof:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSPROOF);
                        validationErrorList.addError("directorsprofile2_addressproof", new PZValidationException("directorsprofile2_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setAddressProof("");
                    }
                    break;
                case directorsprofile2_addressId:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSID);
                        validationErrorList.addError("directorsprofile2_addressId", new PZValidationException("directorsprofile2_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setAddressId("");
                    }
                    break;
                case directorsprofile2_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        // validationErrorList.addError("directorsprofile2_identificationtypeselect", new ValidationException("directorsprofile2_identificationtypeselect", "Invalid Directorsprofile2 Identification Type select:::" + ownershipProfileVO.getDirectorsprofile2_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("directorsprofile2_identificationtypeselect", new PZValidationException("directorsprofile2_identificationtypeselect", ErrorMessages.INVALID_DIRECTORSPROFILE2_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setIdentificationtypeselect("");
                    }
                    break;
                case directorsprofile2_identificationtype:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_identificationtype", new ValidationException("directorsprofile2_identificationtype", "Invalid Directorsprofile2 Identification Type:::" + ownershipProfileVO.getDirectorsprofile2_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_IDENTIFICATIONTYPE);
                        validationErrorList.addError("directorsprofile2_identificationtype", new PZValidationException("directorsprofile2_identificationtype", ErrorMessages.INVALID_DIRECTORSPROFILE2_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setIdentificationtype("");
                    }
                    break;
                case directorsprofile2_State:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getState(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("directorsprofile2_State", new ValidationException("directorsprofile2_State", "Invalid Directorsprofile2 State:::" + ownershipProfileVO.getDirectorsprofile2_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_STATE);
                        validationErrorList.addError("directorsprofile2_State", new PZValidationException("directorsprofile2_State", ErrorMessages.INVALID_DIRECTORS_PROFILE2_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setState("");
                    }
                    break;
                case directorsprofile2_address:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getAddress(), "SafeString", 150, isOptional))
                    {
                        // validationErrorList.addError("directorsprofile2_address", new ValidationException("directorsprofile2_address", "Invalid Directorsprofile2 Address:::" + ownershipProfileVO.getDirectorsprofile2_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_ADDRESS);
                        validationErrorList.addError("directorsprofile2_address", new PZValidationException("directorsprofile2_address", ErrorMessages.INVALID_DIRECTORSPROFILE2_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setAddress("");
                    }
                    break;
                case directorsprofile2_city:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCity(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("directorsprofile2_city", new ValidationException("directorsprofile2_city", "Invalid Directorsprofile2 City:::" + ownershipProfileVO.getDirectorsprofile2_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_CITY);
                        validationErrorList.addError("directorsprofile2_city", new PZValidationException("directorsprofile2_city", ErrorMessages.INVALID_DIRECTORSPROFILE2_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setCity("");
                    }
                    break;
                case directorsprofile2_zip:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_zip", new ValidationException("directorsprofile2_zip", "Invalid Directorsprofile2 Zip:::" + ownershipProfileVO.getDirectorsprofile2_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_ZIP);
                        validationErrorList.addError("directorsprofile2_zip", new PZValidationException("directorsprofile2_zip", ErrorMessages.INVALID_DIRECTORSPROFILE2_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setZipcode("");
                    }
                    break;
                case directorsprofile2_country:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_country", new ValidationException("directorsprofile2_country", "Invalid Directorsprofile2 Address:::" + ownershipProfileVO.getDirectorsprofile2_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_COUNTRY);
                        validationErrorList.addError("directorsprofile2_country", new PZValidationException("directorsprofile2_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCountry()))
                    {
                        String directorsprofile2_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setCountry(directorsprofile2_country[0].toString());
                    }
                    break;
                case directorsprofile2_street:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_STREET);
                        validationErrorList.addError("directorsprofile2_street", new PZValidationException("directorsprofile2_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setStreet("");
                    }
                    break;
                case directorsprofile2_nationality:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile2_nationality", new ValidationException("directorsprofile2_nationality", "Invalid directorsprofile2_nationality:::" + ownershipProfileVO.getDirectorsprofile2_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_NATIONALITY);
                        validationErrorList.addError("directorsprofile2_nationality", new PZValidationException("directorsprofile2_nationality", ErrorMessages.INVALID_DIRECTORSPROFILE2_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setNationality("");
                    }
                    break;
                case directorsprofile2_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("directorsprofile2_Passportexpirydate", new ValidationException("directorsprofile2_Passportexpirydate", "Invalid Passportexpirydate" + ownershipProfileVO.getDirectorsprofile2_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("directorsprofile2_Passportexpirydate", new PZValidationException("directorsprofile2_Passportexpirydate", ErrorMessages.INVALID_DIRECTORSPROFILE2_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case directorsprofile2_passportissuedate:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("directorsprofile2_passportissuedate", new PZValidationException("directorsprofile2_passportissuedate", ErrorMessages.INVALID_DIRECTORS_PROFILE2_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case directorsprofile2_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPoliticallyexposed(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_POLITICALLY_EXPOSED);
                        validationErrorList.addError("directorsprofile2_politicallyexposed", new PZValidationException("directorsprofile2_politicallyexposed", ErrorMessages.INVALID_DIRECTORSPROFILE2_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setPoliticallyexposed("");
                    }
                    break;

                case directorsprofile2_criminalrecord:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCriminalrecord(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE2_CRIMINAL_RECORD);
                        validationErrorList.addError("directorsprofile2_criminalrecord", new PZValidationException("directorsprofile2_criminalrecord", ErrorMessages.INVALID_DIRECTORSPROFILE2_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setCriminalrecord("");
                    }
                    break;
                case directorsprofile2_owned:
                    if (!ESAPI.validator().isValidInput("directorsprofile2_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_OWNED);
                        validationErrorList.addError("directorsprofile2_owned", new PZValidationException("directorsprofile2_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR2).setOwned("");
                    }
                    break;

                //Director Profile 3
                case directorsprofile3:
                    if (!ESAPI.validator().isValidInput("directorsprofile3", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("directorsprofile3", new ValidationException("directorsprofile3", "Invalid Name-Principal#2 :::" + ownershipProfileVO.getDirectorsprofile3(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3);
                        validationErrorList.addError("directorsprofile3", new PZValidationException("directorsprofile3", ErrorMessages.INVALID_DIRECTORSPROFILE3 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setFirstname("");
                    }
                    break;
                case directorsprofile3_lastname:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("directorsprofile3_lastname", new ValidationException("directorsprofile3_lastname", "Invalid directorsprofile3_lastname :::" + ownershipProfileVO.getDirectorsprofile3_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_LASTNAME);
                        validationErrorList.addError("directorsprofile3_lastname", new PZValidationException("directorsprofile3_lastname", ErrorMessages.INVALID_DIRECTORS_PROFILE3_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setLastname("");
                    }
                    break;
                case directorsprofile3_title:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_title", new ValidationException("directorsprofile3_title", "Invalid Directorsprofile3 Title:::" + ownershipProfileVO.getDirectorsprofile3_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_TITLE);
                        validationErrorList.addError("directorsprofile3_title", new PZValidationException("directorsprofile3_title", ErrorMessages.INVALID_DIRECTORSPROFILE3_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setTitle("");
                    }
                    break;
                case directorsprofile3_telnocc1:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_telnocc1", new ValidationException("directorsprofile3_telnocc1", "Invalid telnocc:::" + ownershipProfileVO.getDirectorsprofile3_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_TELNOCC);
                        validationErrorList.addError("directorsprofile3_telnocc1", new PZValidationException("directorsprofile3_telnocc1", ErrorMessages.INVALID_DIRECTORSPROFILE3_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setTelnocc1("");
                    }
                    break;
                case directorsprofile3_telephonenumber:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_telephonenumber", new ValidationException("directorsprofile3_telephonenumber", "Invalid Directorsprofile3 Telephone Number:::" + ownershipProfileVO.getDirectorsprofile3_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_TELNO);
                        validationErrorList.addError("directorsprofile3_telephonenumber", new PZValidationException("directorsprofile3_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setTelephonenumber("");
                    }
                    break;
                case directorsprofile3_emailaddress:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getEmailaddress(), "Email", 50, isOptional))
                    {
                        // validationErrorList.addError("directorsprofile3_emailaddress", new ValidationException("directorsprofile3_emailaddress", "Invalid Directorsprofile3 Email Address:::" + ownershipProfileVO.getDirectorsprofile3_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_EMAIL);
                        validationErrorList.addError("directorsprofile3_emailaddress", new PZValidationException("directorsprofile3_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setEmailaddress("");
                    }
                    break;
                case directorsprofile3_dateofbirth:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("directorsprofile3_dateofbirth", new ValidationException("directorsprofile3_dateofbirth", "Invalid Directorsprofile3 Date of Birth" + ownershipProfileVO.getDirectorsprofile3_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_DOB);
                        validationErrorList.addError("directorsprofile3_dateofbirth", new PZValidationException("directorsprofile3_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case directorsprofile3_addressproof:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSPROOF);
                        validationErrorList.addError("directorsprofile3_addressproof", new PZValidationException("directorsprofile3_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setAddressProof("");
                    }
                    break;
                case directorsprofile3_addressId:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSID);
                        validationErrorList.addError("directorsprofile3_addressId", new PZValidationException("directorsprofile3_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setAddressId("");
                    }
                    break;
                case directorsprofile3_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        // validationErrorList.addError("directorsprofile3_identificationtypeselect", new ValidationException("directorsprofile3_identificationtypeselect", "Invalid Directorsprofile3 Identification Type select:::" + ownershipProfileVO.getDirectorsprofile3_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("directorsprofile3_identificationtypeselect", new PZValidationException("directorsprofile3_identificationtypeselect", ErrorMessages.INVALID_DIRECTORSPROFILE3_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setIdentificationtypeselect("");
                    }
                    break;
                case directorsprofile3_identificationtype:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_identificationtype", new ValidationException("directorsprofile3_identificationtype", "Invalid Directorsprofile3 Identification Type:::" + ownershipProfileVO.getDirectorsprofile3_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_IDENTIFICATIONTYPE);
                        validationErrorList.addError("directorsprofile3_identificationtype", new PZValidationException("directorsprofile3_identificationtype", ErrorMessages.INVALID_DIRECTORSPROFILE3_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setIdentificationtype("");
                    }
                    break;
                case directorsprofile3_State:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getState(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        // validationErrorList.addError("directorsprofile3_State", new ValidationException("directorsprofile3_State", "Invalid Directorsprofile3 State:::" + ownershipProfileVO.getDirectorsprofile3_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_STATE);
                        validationErrorList.addError("directorsprofile3_State", new PZValidationException("directorsprofile3_State", ErrorMessages.INVALID_DIRECTORS_PROFILE3_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setState("");
                    }
                    break;
                case directorsprofile3_address:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_address", new ValidationException("directorsprofile3_address", "Invalid Directorsprofile3 Address:::" + ownershipProfileVO.getDirectorsprofile3_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_ADDRESS);
                        validationErrorList.addError("directorsprofile3_address", new PZValidationException("directorsprofile3_address", ErrorMessages.INVALID_DIRECTORSPROFILE3_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setAddress("");
                    }
                    break;
                case directorsprofile3_city:

                    if (!ESAPI.validator().isValidInput("directorsprofile3_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCity(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("directorsprofile3_city", new ValidationException("directorsprofile3_city", "Invalid Directorsprofile3 City:::" + ownershipProfileVO.getDirectorsprofile3_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_CITY);
                        validationErrorList.addError("directorsprofile3_city", new PZValidationException("directorsprofile3_city", ErrorMessages.INVALID_DIRECTORSPROFILE3_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setCity("");
                    }
                    break;
                case directorsprofile3_zip:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_zip", new ValidationException("directorsprofile3_zip", "Invalid Directorsprofile3 Zip:::" + ownershipProfileVO.getDirectorsprofile3_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_ZIP);
                        validationErrorList.addError("directorsprofile3_zip", new PZValidationException("directorsprofile3_zip", ErrorMessages.INVALID_DIRECTORSPROFILE3_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setZipcode("");
                    }
                    break;
                case directorsprofile3_country:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_country", new ValidationException("directorsprofile3_country", "Invalid Directorsprofile3 Address:::" + ownershipProfileVO.getDirectorsprofile3_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_COUNTRY);
                        validationErrorList.addError("directorsprofile3_country", new PZValidationException("directorsprofile3_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setCountry("");
                    }

                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCountry()))
                    {
                        String directorsprofile3_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setCountry(directorsprofile3_country[0].toString());
                    }
                    break;
                case directorsprofile3_street:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_STREET);
                        validationErrorList.addError("directorsprofile3_street", new PZValidationException("directorsprofile3_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setStreet("");
                    }
                    break;
                case directorsprofile3_nationality:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile3_nationality", new ValidationException("directorsprofile3_nationality", "Invalid directorsprofile3_nationality:::" + ownershipProfileVO.getDirectorsprofile3_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_NATIONALITY);
                        validationErrorList.addError("directorsprofile3_nationality", new PZValidationException("directorsprofile3_nationality", ErrorMessages.INVALID_SKYPE_DIRECTORSPROFILE3_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setNationality("");
                    }
                    break;
                case directorsprofile3_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("directorsprofile3_Passportexpirydate", new ValidationException("directorsprofile3_Passportexpirydate", "Invalid Passportexpirydate" + ownershipProfileVO.getDirectorsprofile3_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("directorsprofile3_Passportexpirydate", new PZValidationException("directorsprofile3_Passportexpirydate", ErrorMessages.INVALID_DIRECTORSPROFILE3_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case directorsprofile3_passportissuedate:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("directorsprofile3_passportissuedate", new PZValidationException("directorsprofile2_passportissuedate", ErrorMessages.INVALID_DIRECTORS_PROFILE3_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case directorsprofile3_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPoliticallyexposed(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_POLITICALLY_EXPOSED);
                        validationErrorList.addError("directorsprofile3_politicallyexposed", new PZValidationException("directorsprofile3_politicallyexposed", ErrorMessages.INVALID_DIRECTORSPROFILE3_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setPoliticallyexposed("");
                    }
                    break;

                case directorsprofile3_criminalrecord:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCriminalrecord(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE3_CRIMINAL_RECORD);
                        validationErrorList.addError("directorsprofile3_criminalrecord", new PZValidationException("directorsprofile3_criminalrecord", ErrorMessages.INVALID_DIRECTORSPROFILE3_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setCriminalrecord("");
                    }
                    break;
                case directorsprofile3_owned:
                    if (!ESAPI.validator().isValidInput("directorsprofile3_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_OWNED);
                        validationErrorList.addError("directorsprofile3_owned", new PZValidationException("directorsprofile3_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setOwned("");
                    }
                    break;

                ////suraj
                //Director Profile 4
                case directorsprofile4:
                    if (!ESAPI.validator().isValidInput("directorsprofile4", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("directorsprofile4", new ValidationException("directorsprofile4", "Invalid Name-Principal#2 :::" + ownershipProfileVO.getDirectorsprofile4(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4);
                        validationErrorList.addError("directorsprofile4", new PZValidationException("directorsprofile4", ErrorMessages.INVALID_DIRECTORSPROFILE4 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setFirstname("");
                    }
                    break;
                case directorsprofile4_lastname:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("directorsprofile4_lastname", new ValidationException("directorsprofile4_lastname", "Invalid directorsprofile4_lastname :::" + ownershipProfileVO.getDirectorsprofile4_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_LASTNAME);
                        validationErrorList.addError("directorsprofile4_lastname", new PZValidationException("directorsprofile4_lastname", ErrorMessages.INVALID_DIRECTORS_PROFILE4_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setLastname("");
                    }
                    break;
                case directorsprofile4_title:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_title", new ValidationException("directorsprofile4_title", "Invalid Directorsprofile4 Title:::" + ownershipProfileVO.getDirectorsprofile4_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_TITLE);
                        validationErrorList.addError("directorsprofile4_title", new PZValidationException("directorsprofile4_title", ErrorMessages.INVALID_DIRECTORSPROFILE4_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setTitle("");
                    }
                    break;
                case directorsprofile4_telnocc1:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_telnocc1", new ValidationException("directorsprofile4_telnocc1", "Invalid telnocc:::" + ownershipProfileVO.getDirectorsprofile4_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_TELNOCC);
                        validationErrorList.addError("directorsprofile4_telnocc1", new PZValidationException("directorsprofile4_telnocc1", ErrorMessages.INVALID_DIRECTORSPROFILE4_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setTelnocc1("");
                    }
                    break;
                case directorsprofile4_telephonenumber:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_telephonenumber", new ValidationException("directorsprofile4_telephonenumber", "Invalid Directorsprofile4 Telephone Number:::" + ownershipProfileVO.getDirectorsprofile4_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_TELNO);
                        validationErrorList.addError("directorsprofile4_telephonenumber", new PZValidationException("directorsprofile4_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setTelephonenumber("");
                    }
                    break;
                case directorsprofile4_emailaddress:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getEmailaddress(), "Email", 50, isOptional))
                    {
                        // validationErrorList.addError("directorsprofile4_emailaddress", new ValidationException("directorsprofile4_emailaddress", "Invalid Directorsprofile4 Email Address:::" + ownershipProfileVO.getDirectorsprofile4_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_EMAIL);
                        validationErrorList.addError("directorsprofile4_emailaddress", new PZValidationException("directorsprofile4_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setEmailaddress("");
                    }
                    break;
                case directorsprofile4_dateofbirth:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("directorsprofile4_dateofbirth", new ValidationException("directorsprofile4_dateofbirth", "Invalid Directorsprofile4 Date of Birth" + ownershipProfileVO.getDirectorsprofile4_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_DOB);
                        validationErrorList.addError("directorsprofile4_dateofbirth", new PZValidationException("directorsprofile4_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case directorsprofile4_addressproof:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSPROOF);
                        validationErrorList.addError("directorsprofile4_addressproof", new PZValidationException("directorsprofile4_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setAddressProof("");
                    }
                    break;
                case directorsprofile4_addressId:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_ADDRESSID);
                        validationErrorList.addError("directorsprofile4_addressId", new PZValidationException("directorsprofile4_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setAddressId("");
                    }
                    break;
                case directorsprofile4_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        // validationErrorList.addError("4", new ValidationException("directorsprofile4_identificationtypeselect", "Invalid Directorsprofile4 Identification Type select:::" + ownershipProfileVO.getDirectorsprofile4_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("directorsprofile4_identificationtypeselect", new PZValidationException("directorsprofile4_identificationtypeselect", ErrorMessages.INVALID_DIRECTORSPROFILE4_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR3).setIdentificationtypeselect("");
                    }
                    break;
                case directorsprofile4_identificationtype:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_identificationtype", new ValidationException("directorsprofile4_identificationtype", "Invalid Directorsprofile4 Identification Type:::" + ownershipProfileVO.getDirectorsprofile4_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_IDENTIFICATIONTYPE);
                        validationErrorList.addError("directorsprofile4_identificationtype", new PZValidationException("directorsprofile4_identificationtype", ErrorMessages.INVALID_DIRECTORSPROFILE4_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setIdentificationtype("");
                    }
                    break;
                case directorsprofile4_State:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getState(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        // validationErrorList.addError("directorsprofile4_State", new ValidationException("directorsprofile4_State", "Invalid Directorsprofile4 State:::" + ownershipProfileVO.getDirectorsprofile4_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_STATE);
                        validationErrorList.addError("directorsprofile4_State", new PZValidationException("directorsprofile4_State", ErrorMessages.INVALID_DIRECTORS_PROFILE4_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setState("");
                    }
                    break;
                case directorsprofile4_address:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_address", new ValidationException("directorsprofile4_address", "Invalid Directorsprofile4 Address:::" + ownershipProfileVO.getDirectorsprofile4_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_ADDRESS);
                        validationErrorList.addError("directorsprofile4_address", new PZValidationException("directorsprofile4_address", ErrorMessages.INVALID_DIRECTORSPROFILE4_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setAddress("");
                    }
                    break;
                case directorsprofile4_city:

                    if (!ESAPI.validator().isValidInput("directorsprofile4_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCity(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("directorsprofile4_city", new ValidationException("directorsprofile4_city", "Invalid Directorsprofile4 City:::" + ownershipProfileVO.getDirectorsprofile4_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_CITY);
                        validationErrorList.addError("directorsprofile4_city", new PZValidationException("directorsprofile4_city", ErrorMessages.INVALID_DIRECTORSPROFILE4_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setCity("");
                    }
                    break;
                case directorsprofile4_zip:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_zip", new ValidationException("directorsprofile4_zip", "Invalid Directorsprofile4 Zip:::" + ownershipProfileVO.getDirectorsprofile4_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_ZIP);
                        validationErrorList.addError("directorsprofile4_zip", new PZValidationException("directorsprofile4_zip", ErrorMessages.INVALID_DIRECTORSPROFILE4_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setZipcode("");
                    }
                    break;
                case directorsprofile4_country:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_country", new ValidationException("directorsprofile4_country", "Invalid Directorsprofile4 Address:::" + ownershipProfileVO.getDirectorsprofile4_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_COUNTRY);
                        validationErrorList.addError("directorsprofile4_country", new PZValidationException("directorsprofile4_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setCountry("");
                    }

                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCountry()))
                    {
                        String directorsprofile4_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setCountry(directorsprofile4_country[0].toString());
                    }
                    break;
                case directorsprofile4_street:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_STREET);
                        validationErrorList.addError("directorsprofile4_street", new PZValidationException("directorsprofile4_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setStreet("");
                    }
                    break;
                case directorsprofile4_nationality:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("directorsprofile4_nationality", new ValidationException("directorsprofile4_nationality", "Invalid directorsprofile4_nationality:::" + ownershipProfileVO.getDirectorsprofile4_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_NATIONALITY);
                        validationErrorList.addError("directorsprofile4_nationality", new PZValidationException("directorsprofile4_nationality", ErrorMessages.INVALID_SKYPE_DIRECTORSPROFILE4_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setNationality("");
                    }
                    break;
                case directorsprofile4_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("directorsprofile4_Passportexpirydate", new ValidationException("directorsprofile4_Passportexpirydate", "Invalid Passportexpirydate" + ownershipProfileVO.getDirectorsprofile4_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("directorsprofile4_Passportexpirydate", new PZValidationException("directorsprofile4_Passportexpirydate", ErrorMessages.INVALID_DIRECTORSPROFILE4_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                    case directorsprofile4_passportissuedate:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("directorsprofile4_passportissuedate", new PZValidationException("directorsprofile4_passportissuedate", ErrorMessages.INVALID_DIRECTORS_PROFILE4_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case directorsprofile4_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPoliticallyexposed(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_POLITICALLY_EXPOSED);
                        validationErrorList.addError("directorsprofile4_politicallyexposed", new PZValidationException("directorsprofile4_politicallyexposed", ErrorMessages.INVALID_DIRECTORSPROFILE4_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setPoliticallyexposed("");
                    }
                    break;

                case directorsprofile4_criminalrecord:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCriminalrecord(), "isYN", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORSPROFILE4_CRIMINAL_RECORD);
                        validationErrorList.addError("directorsprofile4_criminalrecord", new PZValidationException("directorsprofile4_criminalrecord", ErrorMessages.INVALID_DIRECTORSPROFILE4_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setCriminalrecord("");
                    }
                    break;
                case directorsprofile4_owned:
                    if (!ESAPI.validator().isValidInput("directorsprofile4_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECTORS_PROFILE_OWNED);
                        validationErrorList.addError("directorsprofile4_owned", new PZValidationException("directorsprofile4_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.DIRECTOR4).setOwned("");
                    }
                    break;


                //Authorized Signatory Profile 1
                case authorizedsignatoryprofile:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        // validationErrorList.addError("authorizedsignatoryprofile", new ValidationException("authorizedsignatoryprofile", "Invalid Authorizedsignatoryprofile#1 :::" + ownershipProfileVO.getAuthorizedsignatoryprofile(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE);
                        validationErrorList.addError("authorizedsignatoryprofile", new PZValidationException("authorizedsignatoryprofile", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setFirstname("");
                    }
                    break;
                case authorizedsignatoryprofile_lastname:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_lastname", new ValidationException("authorizedsignatoryprofile_lastname", "Invalid Authorizedsignatoryprofile lastname :::" + ownershipProfileVO.getAuthorizedsignatoryprofile_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_LASTNAME);
                        validationErrorList.addError("authorizedsignatoryprofile_lastname", new PZValidationException("authorizedsignatoryprofile_lastname", ErrorMessages.INVALID_AUTHORIZED_SIGNATORY_PROFILE_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setLastname("");
                    }
                    break;
                case authorizedsignatoryprofile_title:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_title", new ValidationException("authorizedsignatoryprofile_title", "Invalid Authorizedsignatoryprofile Title:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_TITLE);
                        validationErrorList.addError("authorizedsignatoryprofile_title", new PZValidationException("authorizedsignatoryprofile_title", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setTitle("");
                    }
                    break;
                case authorizedsignatoryprofile_telnocc1:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_telnocc1", new ValidationException("authorizedsignatoryprofile_telnocc1", "Invalid Authorizedsignatoryprofile telnocc:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_TELNOCC);
                        validationErrorList.addError("authorizedsignatoryprofile_telnocc1", new PZValidationException("authorizedsignatoryprofile_telnocc1", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setTelnocc1("");
                    }
                    break;
                case authorizedsignatoryprofile_telephonenumber:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getTelephonenumber(), "SignupPhone", 15, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_telephonenumber", new ValidationException("authorizedsignatoryprofile_telephonenumber", "Invalid Authorizedsignatoryprofile Telephone Number:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_TELNO);
                        validationErrorList.addError("authorizedsignatoryprofile_telephonenumber", new PZValidationException("authorizedsignatoryprofile_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setTelephonenumber("");
                    }
                    break;
                case authorizedsignatoryprofile_emailaddress:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getEmailaddress(), "Email", 50, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_emailaddress", new ValidationException("authorizedsignatoryprofile_emailaddress", "Invalid Authorizedsignatoryprofile Email Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_EMAIL);
                        validationErrorList.addError("authorizedsignatoryprofile_emailaddress", new PZValidationException("authorizedsignatoryprofile_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setEmailaddress("");
                    }
                    break;
                case authorizedsignatoryprofile_dateofbirth:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_dateofbirth", new ValidationException("authorizedsignatoryprofile_dateofbirth", "Invalid Authorizedsignatoryprofile Date of Birth" + ownershipProfileVO.getAuthorizedsignatoryprofile_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_DOB);
                        validationErrorList.addError("authorizedsignatoryprofile_dateofbirth", new PZValidationException("authorizedsignatoryprofile_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile1_addressproof:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile1_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSPROOF);
                        validationErrorList.addError("authorizedsignatoryprofile1_addressproof", new PZValidationException("authorizedsignatoryprofile1_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setAddressProof("");
                    }
                    break;
                case authorizedsignatoryprofile1_addressId:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile1_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSID);
                        validationErrorList.addError("authorizedsignatoryprofile1_addressId", new PZValidationException("authorizedsignatoryprofile1_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setAddressId("");
                    }
                    break;
                case authorizedsignatoryprofile1_owned:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile1_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getOwned(), "Percentage", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_OWNED);
                        validationErrorList.addError("authorizedsignatoryprofile1_owned", new PZValidationException("authorizedsignatoryprofile1_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setOwned("");
                    }
                    break;
                case authorizedsignatoryprofile_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        // validationErrorList.addError("authorizedsignatoryprofile_identificationtypeselect", new ValidationException("authorizedsignatoryprofile_identificationtypeselect", "Invalid Authorizedsignatoryprofile Identification Type select:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("authorizedsignatoryprofile_identificationtypeselect", new PZValidationException("authorizedsignatoryprofile_identificationtypeselect", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setIdentificationtypeselect("");
                    }

                    break;
                case authorizedsignatoryprofile_identificationtype:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_identificationtype", new ValidationException("authorizedsignatoryprofile_identificationtype", "Invalid Authorizedsignatoryprofile Identification Type:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_IDENTIFICATIONTYPE);
                        validationErrorList.addError("authorizedsignatoryprofile_identificationtype", new PZValidationException("authorizedsignatoryprofile_identificationtype", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setIdentificationtype("");
                    }
                    break;
                case authorizedsignatoryprofile_State:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getState(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_State", new ValidationException("authorizedsignatoryprofile_State", "Invalid Authorizedsignatoryprofile State:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_STATE);
                        validationErrorList.addError("authorizedsignatoryprofile_State", new PZValidationException("authorizedsignatoryprofile_State", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setState("");
                    }
                    break;
                case authorizedsignatoryprofile_address:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_address", new ValidationException("authorizedsignatoryprofile_address", "Invalid Authorizedsignatoryprofile Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESS);
                        validationErrorList.addError("authorizedsignatoryprofile_address", new PZValidationException("authorizedsignatoryprofile_address", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setAddress("");
                    }
                    break;
                case authorizedsignatoryprofile_city:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCity(), "StrictString", 50, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_city", new ValidationException("authorizedsignatoryprofile_city", "Invalid Authorizedsignatoryprofile City:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_CITY);
                        validationErrorList.addError("authorizedsignatoryprofile_city", new PZValidationException("authorizedsignatoryprofile_city", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setCity("");
                    }
                    break;
                case authorizedsignatoryprofile_zip:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_zip", new ValidationException("authorizedsignatoryprofile_zip", "Invalid Authorizedsignatoryprofile Zip:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ZIP);
                        validationErrorList.addError("authorizedsignatoryprofile_zip", new PZValidationException("authorizedsignatoryprofile_zip", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setZipcode("");
                    }
                    break;
                case authorizedsignatoryprofile_country:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_country", new ValidationException("authorizedsignatoryprofile_country", "Invalid Authorizedsignatoryprofile Country:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_COUNTRY);
                        validationErrorList.addError("authorizedsignatoryprofile_country", new PZValidationException("authorizedsignatoryprofile_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCountry()))
                    {
                        String authorizedsignatoryprofile_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setCountry(authorizedsignatoryprofile_country[0].toString());
                    }
                    break;
                case authorizedsignatoryprofile_street:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_STREET);
                        validationErrorList.addError("authorizedsignatoryprofile_street", new PZValidationException("authorizedsignatoryprofile_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setStreet("");
                    }
                    break;
                case authorizedsignatoryprofile_nationality:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_nationality", new ValidationException("authorizedsignatoryprofile_nationality", "Invalid Authorizedsignatoryprofile  nationality:::" + ownershipProfileVO.getAuthorizedsignatoryprofile_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_NATIONALITY);
                        validationErrorList.addError("authorizedsignatoryprofile_nationality", new PZValidationException("authorizedsignatoryprofile_nationality", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setNationality("");
                    }
                    break;
                case authorizedsignatoryprofile_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile_Passportexpirydate", new ValidationException("authorizedsignatoryprofile_Passportexpirydate", "Invalid Authorizedsignatoryprofile Passportexpirydate" + ownershipProfileVO.getAuthorizedsignatoryprofile_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("authorizedsignatoryprofile_Passportexpirydate", new PZValidationException("authorizedsignatoryprofile_Passportexpirydate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile_passportissuedate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("authorizedsignatoryprofile_passportissuedate", new PZValidationException("authorizedsignatoryprofile_passportissuedate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile1_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile1_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPoliticallyexposed(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE1_POLITICALLY_EXPOSED);
                        validationErrorList.addError("authorizedsignatoryprofile1_politicallyexposed", new PZValidationException("authorizedsignatoryprofile1_politicallyexposed", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE1_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setPoliticallyexposed("");
                    }
                    break;
                case authorizedsignatoryprofile1_criminalrecord:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile1_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCriminalrecord(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE1_CRIMINAL_RECORDS);
                        validationErrorList.addError("authorizedsignatoryprofile1_criminalrecord", new PZValidationException("authorizedsignatoryprofile1_criminalrecord", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE1_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setCriminalrecord("");
                    }
                    break;
                case authorizedsignatoryprofile1_designation:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile1_designation", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDesignation(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE1_DESIGNATION);
                        validationErrorList.addError("authorizedsignatoryprofile1_designation", new PZValidationException("authorizedsignatoryprofile1_designation", "INVALID" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).getDesignation(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY1).setDesignation("");
                    }
                    break;

                //Authorize profile 2
                case authorizedsignatoryprofile2:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2", new ValidationException("authorizedsignatoryprofile2", "Invalid Name-Authorizedsignatoryprofile2 :::" + ownershipProfileVO.getAuthorizedsignatoryprofile2(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2);
                        validationErrorList.addError("authorizedsignatoryprofile2", new PZValidationException("authorizedsignatoryprofile2", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setFirstname("");
                    }
                    break;
                case authorizedsignatoryprofile2_lastname:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_lastname", new ValidationException("authorizedsignatoryprofile2_lastname", "Invalid Authorizedsignatoryprofile2 lastname :::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_LASTNAME);
                        validationErrorList.addError("authorizedsignatoryprofile2_lastname", new PZValidationException("authorizedsignatoryprofile2_lastname", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setLastname("");
                    }
                    break;
                case authorizedsignatoryprofile2_title:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_title", new ValidationException("authorizedsignatoryprofile2_title", "Invalid Authorizedsignatoryprofile2 Title:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_TITLE);
                        validationErrorList.addError("authorizedsignatoryprofile2_title", new PZValidationException("authorizedsignatoryprofile2_title", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setTitle("");
                    }
                    break;
                case authorizedsignatoryprofile2_telnocc1:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_telnocc1", new ValidationException("authorizedsignatoryprofile2_telnocc1", "Invalid Authorizedsignatoryprofile2 telnocc:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_TELNOCC1);
                        validationErrorList.addError("authorizedsignatoryprofile2_telnocc1", new PZValidationException("authorizedsignatoryprofile2_telnocc1", ErrorMessages.INVALID_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setTelnocc1("");
                    }
                    break;
                case authorizedsignatoryprofile2_telephonenumber:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_telephonenumber", new ValidationException("authorizedsignatoryprofile2_telephonenumber", "Invalid Authorizedsignatoryprofile2 Telephone Number:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_TELNO);
                        validationErrorList.addError("authorizedsignatoryprofile2_telephonenumber", new PZValidationException("authorizedsignatoryprofile2_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setTelephonenumber("");
                    }
                    break;
                case authorizedsignatoryprofile2_emailaddress:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getEmailaddress(), "Email", 50, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_emailaddress", new ValidationException("authorizedsignatoryprofile2_emailaddress", "Invalid Authorizedsignatoryprofile2 Email Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_EMAIL);
                        validationErrorList.addError("authorizedsignatoryprofile2_emailaddress", new PZValidationException("authorizedsignatoryprofile2_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setEmailaddress("");
                    }
                    break;
                case authorizedsignatoryprofile2_dateofbirth:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_dateofbirth", new ValidationException("authorizedsignatoryprofile2_dateofbirth", "Invalid Authorizedsignatoryprofile2 Date of Birth" + ownershipProfileVO.getAuthorizedsignatoryprofile2_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_DOB);
                        validationErrorList.addError("authorizedsignatoryprofile2_dateofbirth", new PZValidationException("authorizedsignatoryprofile2_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile2_addressproof:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSPROOF);
                        validationErrorList.addError("authorizedsignatoryprofile2_addressproof", new PZValidationException("authorizedsignatoryprofile2_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setAddressProof("");
                    }
                    break;
                case authorizedsignatoryprofile2_addressId:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSID);
                        validationErrorList.addError("authorizedsignatoryprofile2_addressId", new PZValidationException("authorizedsignatoryprofile2_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setAddressId("");
                    }
                    break;
                case authorizedsignatoryprofile2_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_identificationtypeselect", new ValidationException("authorizedsignatoryprofile2_identificationtypeselect", "Invalid Authorizedsignatoryprofile2 Identification Type select:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("authorizedsignatoryprofile2_identificationtypeselect", new PZValidationException("authorizedsignatoryprofile2_identificationtypeselect", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setIdentificationtypeselect("");
                    }
                    break;
                case authorizedsignatoryprofile2_identificationtype:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_identificationtype", new ValidationException("authorizedsignatoryprofile2_identificationtype", "Invalid Authorizedsignatoryprofile2 Identification Type:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_IDENTIFICATIONTYPE);
                        validationErrorList.addError("authorizedsignatoryprofile2_identificationtype", new PZValidationException("authorizedsignatoryprofile2_identificationtype", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setIdentificationtype("");
                    }
                    break;
                case authorizedsignatoryprofile2_State:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getState(), "StrictString", 50, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_State", new ValidationException("authorizedsignatoryprofile2_State", "Invalid Authorizedsignatoryprofile2:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_STATE);
                        validationErrorList.addError("authorizedsignatoryprofile2_State", new PZValidationException("authorizedsignatoryprofile2_State", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setState("");
                    }
                    break;
                case authorizedsignatoryprofile2_address:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_address", new ValidationException("authorizedsignatoryprofile2_address", "Invalid Authorizedsignatoryprofile2 Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_ADDRESS);
                        validationErrorList.addError("authorizedsignatoryprofile2_address", new PZValidationException("authorizedsignatoryprofile2_address", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setAddress("");
                    }
                    break;
                case authorizedsignatoryprofile2_city:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCity(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_city", new ValidationException("authorizedsignatoryprofile2_city", "Invalid Authorizedsignatoryprofile2 City:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_CITY);
                        validationErrorList.addError("authorizedsignatoryprofile2_city", new PZValidationException("authorizedsignatoryprofile2_city", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setCity("");
                    }
                    break;
                case authorizedsignatoryprofile2_zip:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_zip", new ValidationException("authorizedsignatoryprofile2_zip", "Invalid Authorizedsignatoryprofile2 Zip:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_ZIP);
                        validationErrorList.addError("authorizedsignatoryprofile2_zip", new PZValidationException("authorizedsignatoryprofile2_zip", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setZipcode("");
                    }
                    break;
                case authorizedsignatoryprofile2_country:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_country", new ValidationException("authorizedsignatoryprofile2_country", "Invalid Authorizedsignatoryprofile2 Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_COUNTRY);
                        validationErrorList.addError("authorizedsignatoryprofile2_country", new PZValidationException("authorizedsignatoryprofile2_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCountry()))
                    {
                        String authorizedsignatoryprofile2_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setCountry(authorizedsignatoryprofile2_country[0].toString());
                    }
                    break;
                case authorizedsignatoryprofile2_street:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_STREET);
                        validationErrorList.addError("authorizedsignatoryprofile2_street", new PZValidationException("authorizedsignatoryprofile2_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setStreet("");
                    }
                    break;
                case authorizedsignatoryprofile2_nationality:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile2_nationality", new ValidationException("authorizedsignatoryprofile2_nationality", "Invalid authorizedsignatoryprofile2_nationality:::" + ownershipProfileVO.getAuthorizedsignatoryprofile2_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_NATIONALITY);
                        validationErrorList.addError("authorizedsignatoryprofile2_nationality", new PZValidationException("authorizedsignatoryprofile2_nationality", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setNationality("");
                    }
                    break;
                case authorizedsignatoryprofile2_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        // validationErrorList.addError("authorizedsignatoryprofile2_Passportexpirydate", new ValidationException("authorizedsignatoryprofile2_Passportexpirydate", "Invalid Passportexpirydate" + ownershipProfileVO.getAuthorizedsignatoryprofile2_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("authorizedsignatoryprofile2_Passportexpirydate", new PZValidationException("authorizedsignatoryprofile2_Passportexpirydate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile2_passportissuedate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("authorizedsignatoryprofile2_passportissuedate", new PZValidationException("authorizedsignatoryprofile_passportissuedate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile2_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPoliticallyexposed(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_POLITICALLY_EXPOSED);
                        validationErrorList.addError("authorizedsignatoryprofile2_politicallyexposed", new PZValidationException("authorizedsignatoryprofile2_politicallyexposed", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setPoliticallyexposed("");
                    }
                    break;
                case authorizedsignatoryprofile2_criminalrecord:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCriminalrecord(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_CRIMINAL_RECORDS);
                        validationErrorList.addError("authorizedsignatoryprofile2_criminalrecord", new PZValidationException("authorizedsignatoryprofile2_criminalrecord", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE2_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setCriminalrecord("");
                    }
                    break;
                case authorizedsignatoryprofile2_designation:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_designation", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDesignation(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_DESIGNATION);
                        validationErrorList.addError("authorizedsignatoryprofile2_designation", new PZValidationException("authorizedsignatoryprofile2_designation", "INVALID" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getDesignation(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setDesignation("");
                    }
                    break;
                case authorizedsignatoryprofile2_owned:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile2_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getOwned(), "Percentage", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE2_OWNED);
                        validationErrorList.addError("authorizedsignatoryprofile2_owned", new PZValidationException("authorizedsignatoryprofile2_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY2).setOwned("");
                    }
                    break;

                //ADD new 3
                //Auhtorize profile 3

                case authorizedsignatoryprofile3:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3", new ValidationException("authorizedsignatoryprofile3", "Invalid Name-Principal#1 :::" + ownershipProfileVO.getAuthorizedsignatoryprofile3(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3);
                        validationErrorList.addError("authorizedsignatoryprofile3", new PZValidationException("authorizedsignatoryprofile3", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setFirstname("");
                    }
                    break;

                case authorizedsignatoryprofile3_lastname:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_lastname", new ValidationException("authorizedsignatoryprofile3_lastname", "Invalid Authorizedsignatoryprofile3 lastname :::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_LASTNAME);
                        validationErrorList.addError("authorizedsignatoryprofile3_lastname", new PZValidationException("authorizedsignatoryprofile3_lastname", ErrorMessages.INVALID_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setLastname("");
                    }
                    break;

                case authorizedsignatoryprofile3_title:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_title", new ValidationException("authorizedsignatoryprofile3_title", "Invalid Authorizedsignatoryprofile3 Title:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_TITLE);
                        validationErrorList.addError("authorizedsignatoryprofile3_title", new PZValidationException("authorizedsignatoryprofile3_title", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setTitle("");
                    }
                    break;

                case authorizedsignatoryprofile3_telnocc1:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        // validationErrorList.addError("authorizedsignatoryprofile3_telnocc1", new ValidationException("authorizedsignatoryprofile3_telnocc1", "Invalid Authorizedsignatoryprofile3 telnocc:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_TELNOCC);
                        validationErrorList.addError("authorizedsignatoryprofile3_telnocc1", new PZValidationException("authorizedsignatoryprofile3_telnocc1", ErrorMessages.INVALID_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setTitle("");
                    }
                    break;

                case authorizedsignatoryprofile3_telephonenumber:

                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_telephonenumber", new ValidationException("authorizedsignatoryprofile3_telephonenumber", "Invalid Authorizedsignatoryprofile3 Telephone Number:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_TELNO);
                        validationErrorList.addError("authorizedsignatoryprofile3_telephonenumber", new PZValidationException("authorizedsignatoryprofile3_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setTelephonenumber("");
                    }
                    break;

                case authorizedsignatoryprofile3_emailaddress:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getEmailaddress(), "Email", 50, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_emailaddress", new ValidationException("authorizedsignatoryprofile3_emailaddress", "Invalid Authorizedsignatoryprofile3 Email Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_EMAIL);
                        validationErrorList.addError("authorizedsignatoryprofile3_emailaddress", new PZValidationException("authorizedsignatoryprofile3_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setEmailaddress("");
                    }
                    break;

                case authorizedsignatoryprofile3_dateofbirth:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_dateofbirth", new ValidationException("authorizedsignatoryprofile3_dateofbirth", "Invalid Authorizedsignatoryprofile3 Date of Birth" + ownershipProfileVO.getAuthorizedsignatoryprofile3_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_DOB);
                        validationErrorList.addError("authorizedsignatoryprofile3_dateofbirth", new PZValidationException("authorizedsignatoryprofile3_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile3_addressproof:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSPROOF);
                        validationErrorList.addError("authorizedsignatoryprofile3_addressproof", new PZValidationException("authorizedsignatoryprofile3_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setAddressProof("");
                    }
                    break;
                case authorizedsignatoryprofile3_addressId:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSID);
                        validationErrorList.addError("authorizedsignatoryprofile3_addressId", new PZValidationException("authorizedsignatoryprofile3_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setAddressId("");
                    }
                    break;
                case authorizedsignatoryprofile3_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_identificationtypeselect", new ValidationException("authorizedsignatoryprofile3_identificationtypeselect", "Invalid Authorizedsignatoryprofile3 Identification Type select:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("authorizedsignatoryprofile3_identificationtypeselect", new PZValidationException("authorizedsignatoryprofile3_identificationtypeselect", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setIdentificationtypeselect("");
                    }
                    break;

                case authorizedsignatoryprofile3_identificationtype:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_identificationtype", new ValidationException("authorizedsignatoryprofile3_identificationtype", "Invalid Authorizedsignatoryprofile3 Identification Type:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_IDENTIFICATIONTYPE);
                        validationErrorList.addError("authorizedsignatoryprofile3_identificationtype", new PZValidationException("authorizedsignatoryprofile3_identificationtype", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setIdentificationtype("");
                    }
                    break;

                case authorizedsignatoryprofile3_State:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getState(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_State", new ValidationException("authorizedsignatoryprofile3_State", "Invalid Authorizedsignatoryprofile3 State:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_STATE);
                        validationErrorList.addError("authorizedsignatoryprofile3_State", new PZValidationException("authorizedsignatoryprofile3_State", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setState("");
                    }
                    break;

                case authorizedsignatoryprofile3_address:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_address", new ValidationException("authorizedsignatoryprofile3_address", "Invalid Authorizedsignatoryprofile3 Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_ADDRESS);
                        validationErrorList.addError("authorizedsignatoryprofile3_address", new PZValidationException("authorizedsignatoryprofile3_address", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setAddress("");
                    }
                    break;

                case authorizedsignatoryprofile3_city:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCity(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_city", new ValidationException("authorizedsignatoryprofile3_city", "Invalid Authorizedsignatoryprofile3 City:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_CITY);
                        validationErrorList.addError("authorizedsignatoryprofile3_city", new PZValidationException("authorizedsignatoryprofile3_city", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setCity("");
                    }
                    break;

                case authorizedsignatoryprofile3_zip:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_zip", new ValidationException("authorizedsignatoryprofile3_zip", "Invalid Authorizedsignatoryprofile3 Zip:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_ZIP);
                        validationErrorList.addError("authorizedsignatoryprofile3_zip", new PZValidationException("authorizedsignatoryprofile3_zip", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setZipcode("");
                    }
                    break;

                case authorizedsignatoryprofile3_country:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_country", new ValidationException("authorizedsignatoryprofile3_country", "Invalid Authorizedsignatoryprofile3 Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_COUNTRY);
                        validationErrorList.addError("authorizedsignatoryprofile3_country", new PZValidationException("authorizedsignatoryprofile3_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setCountry("");
                    }

                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCountry()))
                    {
                        String authorizedsignatoryprofile3_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setCountry(authorizedsignatoryprofile3_country[0].toString());
                    }
                    break;
                case authorizedsignatoryprofile3_street:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_STREET);
                        validationErrorList.addError("authorizedsignatoryprofile3_street", new PZValidationException("authorizedsignatoryprofile3_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setStreet("");
                    }
                    break;
                case authorizedsignatoryprofile3_nationality:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_nationality", new ValidationException("authorizedsignatoryprofile3_nationality", "Invalid Authorizedsignatoryprofile3 nationality:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_NATIONALITY);
                        validationErrorList.addError("authorizedsignatoryprofile3_nationality", new PZValidationException("authorizedsignatoryprofile3_nationality", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setNationality("");
                    }
                    break;

                case authorizedsignatoryprofile3_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_Passportexpirydate", new ValidationException("authorizedsignatoryprofile3_Passportexpirydate", "Invalid Authorizedsignatoryprofile3 Passportexpirydate" + ownershipProfileVO.getAuthorizedsignatoryprofile3_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("authorizedsignatoryprofile3_Passportexpirydate", new PZValidationException("authorizedsignatoryprofile3_Passportexpirydate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile3_passportissuedate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("authorizedsignatoryprofile3_passportissuedate", new PZValidationException("authorizedsignatoryprofile_passportissuedate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile3_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPoliticallyexposed(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_POLITICALLY_EXPOSED);
                        validationErrorList.addError("authorizedsignatoryprofile3_politicallyexposed", new PZValidationException("authorizedsignatoryprofile3_politicallyexposed", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setPoliticallyexposed("");
                    }
                    break;
                case authorizedsignatoryprofile3_criminalrecord:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCriminalrecord(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_CRIMINAL_RECORDS);
                        validationErrorList.addError("authorizedsignatoryprofile3_criminalrecord", new PZValidationException("authorizedsignatoryprofile3_criminalrecord", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE3_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setCriminalrecord("");
                    }
                    break;
                case authorizedsignatoryprofile3_designation:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_designation", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDesignation(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_DESIGNATION);
                        validationErrorList.addError("authorizedsignatoryprofile3_designation", new PZValidationException("authorizedsignatoryprofile3_designation", "INVALID" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getDesignation(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setDesignation("");
                    }
                    break;
                case authorizedsignatoryprofile3_owned:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile3_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getOwned(), "Percentage", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE3_OWNED);
                        validationErrorList.addError("authorizedsignatoryprofile3_owned", new PZValidationException("authorizedsignatoryprofile3_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).setOwned("");
                    }
                    break;

                //ADD new 4
                //Auhtorize profile 4

                case authorizedsignatoryprofile4:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getFirstname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4", new ValidationException("authorizedsignatoryprofile4", "Invalid Name-Principal#1 :::" + ownershipProfileVO.getAuthorizedsignatoryprofile4(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4);
                        validationErrorList.addError("authorizedsignatoryprofile4", new PZValidationException("authorizedsignatoryprofile4", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4 + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getFirstname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setFirstname("");
                    }
                    break;

                case authorizedsignatoryprofile4_lastname:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_lastname", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getLastname(), "StrictString", 50, isOptional))//alphanum to alphanum
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_lastname", new ValidationException("authorizedsignatoryprofile4_lastname", "Invalid Authorizedsignatoryprofile4 lastname :::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_lastname(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_LASTNAME);
                        validationErrorList.addError("authorizedsignatoryprofile4_lastname", new PZValidationException("authorizedsignatoryprofile4_lastname", ErrorMessages.INVALID_LAST_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getLastname(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setLastname("");
                    }
                    break;

                case authorizedsignatoryprofile4_title:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_title", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getTitle(), "Title", 7, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_title", new ValidationException("authorizedsignatoryprofile4_title", "Invalid Authorizedsignatoryprofile4 Title:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_title(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_TITLE);
                        validationErrorList.addError("authorizedsignatoryprofile4_title", new PZValidationException("authorizedsignatoryprofile4_title", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_TITLE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getTitle(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setTitle("");
                    }
                    break;

                case authorizedsignatoryprofile4_telnocc1:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_telnocc1", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getTelnocc1(), "OnlyNumber", 3, isOptional))
                    {
                        // validationErrorList.addError("authorizedsignatoryprofile4_telnocc1", new ValidationException("authorizedsignatoryprofile4_telnocc1", "Invalid Authorizedsignatoryprofile4 telnocc:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_telnocc1(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_TELNOCC);
                        validationErrorList.addError("authorizedsignatoryprofile4_telnocc1", new PZValidationException("authorizedsignatoryprofile4_telnocc1", ErrorMessages.INVALID_TELNOCC + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getTelnocc1(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setTitle("");
                    }
                    break;

                case authorizedsignatoryprofile4_telephonenumber:

                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_telephonenumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getTelephonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_telephonenumber", new ValidationException("authorizedsignatoryprofile4_telephonenumber", "Invalid Authorizedsignatoryprofile3 Telephone Number:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_telephonenumber(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_TELNO);
                        validationErrorList.addError("authorizedsignatoryprofile4_telephonenumber", new PZValidationException("authorizedsignatoryprofile4_telephonenumber", ErrorMessages.INVALID_TELNO + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getTelephonenumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setTelephonenumber("");
                    }
                    break;

                case authorizedsignatoryprofile4_emailaddress:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_emailaddress", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getEmailaddress(), "Email", 50, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_emailaddress", new ValidationException("authorizedsignatoryprofile4_emailaddress", "Invalid Authorizedsignatoryprofile4 Email Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_emailaddress(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_EMAIL);
                        validationErrorList.addError("authorizedsignatoryprofile4_emailaddress", new PZValidationException("authorizedsignatoryprofile4_emailaddress", ErrorMessages.INVALID_EMAIL + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getEmailaddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setEmailaddress("");
                    }
                    break;

                case authorizedsignatoryprofile4_dateofbirth:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_dateofbirth", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDateofbirth(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDateofbirth()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDateofbirth(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDateofbirth(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile3_dateofbirth", new ValidationException("authorizedsignatoryprofile4_dateofbirth", "Invalid Authorizedsignatoryprofile4 Date of Birth" + ownershipProfileVO.getAuthorizedsignatoryprofile4_dateofbirth(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_DOB);
                        validationErrorList.addError("authorizedsignatoryprofile4_dateofbirth", new PZValidationException("authorizedsignatoryprofile4_dateofbirth", ErrorMessages.INVALID_BIRTHDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDateofbirth(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setDateofbirth("");
                    }
                    else
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setDateofbirth(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDateofbirth(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile4_addressproof:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSPROOF);
                        validationErrorList.addError("authorizedsignatoryprofile4_addressproof", new PZValidationException("authorizedsignatoryprofile4_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setAddressProof("");
                    }
                    break;
                case authorizedsignatoryprofile4_addressId:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE_ADDRESSID);
                        validationErrorList.addError("authorizedsignatoryprofile4_addressId", new PZValidationException("authorizedsignatoryprofile4_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setAddressId("");
                    }
                    break;
                case authorizedsignatoryprofile4_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getIdentificationtypeselect(), "identificationtypeselect", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_identificationtypeselect", new ValidationException("authorizedsignatoryprofile4_identificationtypeselect", "Invalid Authorizedsignatoryprofile4 Identification Type select:::" + ownershipProfileVO.getAuthorizedsignatoryprofile3_identificationtypeselect(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("authorizedsignatoryprofile4_identificationtypeselect", new PZValidationException("authorizedsignatoryprofile4_identificationtypeselect", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_IDENTIFICATIONTYPESELECT + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setIdentificationtypeselect("");
                    }
                    break;

                case authorizedsignatoryprofile4_identificationtype:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getIdentificationtype(), "UserName", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_identificationtype", new ValidationException("authorizedsignatoryprofile4_identificationtype", "Invalid Authorizedsignatoryprofile4 Identification Type:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_identificationtype(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_IDENTIFICATIONTYPE);
                        validationErrorList.addError("authorizedsignatoryprofile4_identificationtype", new PZValidationException("authorizedsignatoryprofile4_identificationtype", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_IDENTIFICATIONTYPE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setIdentificationtype("");
                    }
                    break;

                case authorizedsignatoryprofile4_State:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY3).getState(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_State", new ValidationException("authorizedsignatoryprofile4_State", "Invalid Authorizedsignatoryprofile4 State:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_State(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_STATE);
                        validationErrorList.addError("authorizedsignatoryprofile4_State", new PZValidationException("authorizedsignatoryprofile4_State", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setState("");
                    }
                    break;

                case authorizedsignatoryprofile4_address:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getAddress(), "SafeString", 150, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_address", new ValidationException("authorizedsignatoryprofile4_address", "Invalid Authorizedsignatoryprofile4 Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_address(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_ADDRESS);
                        validationErrorList.addError("authorizedsignatoryprofile4_address", new PZValidationException("authorizedsignatoryprofile4_address", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setAddress("");
                    }
                    break;

                case authorizedsignatoryprofile4_city:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_city", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCity(), "StrictString", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_city", new ValidationException("authorizedsignatoryprofile4_city", "Invalid Authorizedsignatoryprofile4 City:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_city(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_CITY);
                        validationErrorList.addError("authorizedsignatoryprofile4_city", new PZValidationException("authorizedsignatoryprofile4_city", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setCity("");
                    }
                    break;

                case authorizedsignatoryprofile4_zip:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_zip", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getZipcode(), "alphanum", 11, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_zip", new ValidationException("authorizedsignatoryprofile4_zip", "Invalid Authorizedsignatoryprofile4 Zip:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_zip(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_ZIP);
                        validationErrorList.addError("authorizedsignatoryprofile4_zip", new PZValidationException("authorizedsignatoryprofile4_zip", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setZipcode("");
                    }
                    break;

                case authorizedsignatoryprofile4_country:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCountry(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_country", new ValidationException("authorizedsignatoryprofile4_country", "Invalid Authorizedsignatoryprofile4 Address:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_country(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_COUNTRY);
                        validationErrorList.addError("authorizedsignatoryprofile4_country", new PZValidationException("authorizedsignatoryprofile4_country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setCountry("");
                    }

                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCountry()))
                    {
                        String authorizedsignatoryprofile4_country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setCountry(authorizedsignatoryprofile4_country[0].toString());
                    }
                    break;
                case authorizedsignatoryprofile4_street:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getStreet(), "Description", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_STREET);
                        validationErrorList.addError("authorizedsignatoryprofile4_street", new PZValidationException("authorizedsignatoryprofile4_street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setStreet("");
                    }
                    break;
                case authorizedsignatoryprofile4_nationality:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_nationality", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getNationality(), "AppCountry", 30, isOptional))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_nationality", new ValidationException("authorizedsignatoryprofile4_nationality", "Invalid Authorizedsignatoryprofile3 nationality:::" + ownershipProfileVO.getAuthorizedsignatoryprofile4_nationality(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_NATIONALITY);
                        validationErrorList.addError("authorizedsignatoryprofile4_nationality", new PZValidationException("authorizedsignatoryprofile4_nationality", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_NATIONALITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getNationality(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setNationality("");
                    }
                    break;

                case authorizedsignatoryprofile4_Passportexpirydate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_Passportexpirydate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate(), "dd/MM/yyyy") || !functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("authorizedsignatoryprofile4_Passportexpirydate", new ValidationException("authorizedsignatoryprofile4_Passportexpirydate", "Invalid Authorizedsignatoryprofile3 Passportexpirydate" + ownershipProfileVO.getAuthorizedsignatoryprofile4_Passportexpirydate(), "2"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_PASSPORTEXPIRYDATE);
                        validationErrorList.addError("authorizedsignatoryprofile4_Passportexpirydate", new PZValidationException("authorizedsignatoryprofile4_Passportexpirydate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_PASSPORTEXPIRYDATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setPassportexpirydate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setPassportexpirydate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportexpirydate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile4_passportissuedate:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_passportissuedate", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate(), "fromDate", 30, isOptional) || (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate()) && (functions.isRandomDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate(), "dd/MM/yyyy") || functions.isFutureDate(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate(), "dd/MM/yyyy"))))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_PASSPORT_ISSUING_DATE);
                        validationErrorList.addError("authorizedsignatoryprofile4_passportissuedate", new PZValidationException("authorizedsignatoryprofile_passportissuedate", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_PASSPORT_ISSUING_DATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setPassportissuedate("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate()))
                    {
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setPassportissuedate(commonFunctionUtil.convertDatepickerToTimestamp(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPassportissuedate(), "00:00:00"));
                    }
                    break;
                case authorizedsignatoryprofile4_politicallyexposed:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_politicallyexposed", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPoliticallyexposed(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_POLITICALLY_EXPOSED);
                        validationErrorList.addError("authorizedsignatoryprofile4_politicallyexposed", new PZValidationException("authorizedsignatoryprofile4_politicallyexposed", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_POLITICALLY_EXPOSED + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getPoliticallyexposed(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setPoliticallyexposed("");
                    }
                    break;
                case authorizedsignatoryprofile4_criminalrecord:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_criminalrecord", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCriminalrecord(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_CRIMINAL_RECORDS);
                        validationErrorList.addError("authorizedsignatoryprofile4_criminalrecord", new PZValidationException("authorizedsignatoryprofile4_criminalrecord", ErrorMessages.INVALID_AUTHORIZEDSIGNATORYPROFILE4_CRIMINAL_RECORD + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getCriminalrecord(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setCriminalrecord("");
                    }
                    break;
                case authorizedsignatoryprofile4_designation:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_designation", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDesignation(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_DESIGNATION);
                        validationErrorList.addError("authorizedsignatoryprofile4_designation", new PZValidationException("authorizedsignatoryprofile4_designation", "INVALID" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getDesignation(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setDesignation("");
                    }
                    break;
                case authorizedsignatoryprofile4_owned:
                    if (!ESAPI.validator().isValidInput("authorizedsignatoryprofile4_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getOwned(), "Percentage", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AUTHORIZEDSIGNATORYPROFILE4_OWNED);
                        validationErrorList.addError("authorizedsignatoryprofile4_owned", new PZValidationException("authorizedsignatoryprofile4_owned", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.AUTHORIZESIGNATORY4).setOwned("");
                    }
                    break;


                //ADD new corporate
                //Corporate shareholder1
                case corporateshareholder1_Name:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_Name", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getName(), "alphanum", 50, isOptional))//alphanum to alphanum
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_NAME);
                        validationErrorList.addError("corporateshareholder1_Name", new PZValidationException("corporateshareholder1_Name", ErrorMessages.INVALID_CORPORATESHAREHOLDER1_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getName(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setName("");
                    }
                    break;

                case corporateshareholder1_RegNumber:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_RegNumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getRegistrationNumber(), "SafeString", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_REGNUMBER);
                        validationErrorList.addError("corporateshareholder1_RegNumber", new PZValidationException("corporateshareholder1_RegNumber", ErrorMessages.INVALID_CORPORATESHAREHOLDER1_REGNUMBER + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getRegistrationNumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setRegistrationNumber("");
                    }
                    break;

                case corporateshareholder1_Address:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_Address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getAddress(), "SafeString", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_ADDRESS);
                        validationErrorList.addError("corporateshareholder1_Address", new PZValidationException("corporateshareholder1_Address", ErrorMessages.INVALID_CORPORATESHAREHOLDER1_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setAddress("");
                    }
                    break;

                case corporateshareholder1_City:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_City", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getCity(), "StrictString", 30, isOptional))// isOptional to true
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_CITY);
                        validationErrorList.addError("corporateshareholder1_City", new PZValidationException("corporateshareholder1_City", ErrorMessages.INVALID_CORPORATESHAREHOLDER1_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setCity("");
                    }
                    break;

                case corporateshareholder1_State:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getState(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_STATE);
                        validationErrorList.addError("corporateshareholder1_State", new PZValidationException("corporateshareholder1_State", ErrorMessages.INVALID_CORPORATESHAREHOLDER1_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setState("");
                    }
                    break;

                case corporateshareholder1_ZipCode:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_ZipCode", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getZipcode(), "alphanum", 11, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_ZIP);
                        validationErrorList.addError("corporateshareholder1_ZipCode", new PZValidationException("corporateshareholder1_ZipCode", ErrorMessages.INVALID_CORPORATESHAREHOLDER1_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setZipcode("");
                    }
                    break;

                case corporateshareholder1_Country:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_Country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getCountry(), "AppCountry", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_COUNTRY);
                        validationErrorList.addError("corporateshareholder1_Country", new PZValidationException("corporateshareholder1_Country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getCountry()))
                    {
                        String Corporateshareholder1_Country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setCountry(Corporateshareholder1_Country[0].toString());
                    }
                    break;
                case corporateshareholder1_Street:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_Street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getStreet(), "Description", 100, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_STREET);
                        validationErrorList.addError("corporateshareholder1_Street", new PZValidationException("corporateshareholder1_Street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setStreet("");
                    }
                    break;

                case corporateshareholder1_owned:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_OWNED);
                        validationErrorList.addError("corporateshareholder1_owned", new PZValidationException("corporateshareholder1_owned", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setOwned("");
                    }
                    break;
                case corporateshareholder1_addressproof:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_ADDRESSPROOF);
                        validationErrorList.addError("corporateshareholder1_addressproof", new PZValidationException("corporateshareholder1_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setAddressProof("");
                    }
                    break;
                case corporateshareholder1_addressId:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_ADDRESSID);
                        validationErrorList.addError("corporateshareholder1_addressId", new PZValidationException("corporateshareholder1_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setAddressId("");
                    }
                    break;
                case corporateshareholder1_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getIdentificationtypeselect(), "identificationtypeselect", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("corporateshareholder1_identificationtypeselect", new PZValidationException("corporateshareholder1_identificationtypeselect", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setIdentificationtypeselect("");
                    }
                    break;
                case corporateshareholder1_identificationtype:
                    if (!ESAPI.validator().isValidInput("corporateshareholder1_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getIdentificationtype(), "UserName", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER1_IDENTIFICATIONTYPE);
                        validationErrorList.addError("corporateshareholder1_identificationtype", new PZValidationException("corporateshareholder1_identificationtype", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER1).setIdentificationtype("");
                    }
                    break;

                //Corporate shareholder2
                case corporateshareholder2_Name:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_Name", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getName(), "alphanum", 50, isOptional))//alphanum to alphanum
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_NAME);
                        validationErrorList.addError("corporateshareholder2_Name", new PZValidationException("corporateshareholder2_Name", ErrorMessages.INVALID_CORPORATESHAREHOLDER2_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getName(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setName("");
                    }
                    break;

                case corporateshareholder2_RegNumber:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_RegNumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getRegistrationNumber(), "SafeString", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_REGNUMBER);
                        validationErrorList.addError("corporateshareholder2_RegNumber", new PZValidationException("corporateshareholder2_RegNumber", ErrorMessages.INVALID_CORPORATESHAREHOLDER2_REGNUMBER + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getRegistrationNumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setRegistrationNumber("");
                    }
                    break;

                case corporateshareholder2_Address:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_Address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getAddress(), "SafeString", 150, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_ADDRESS);
                        validationErrorList.addError("corporateshareholder2_Address", new PZValidationException("corporateshareholder2_Address", ErrorMessages.INVALID_CORPORATESHAREHOLDER2_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setAddress("");
                    }
                    break;

                case corporateshareholder2_City:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_City", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getCity(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_CITY);
                        validationErrorList.addError("corporateshareholder2_City", new PZValidationException("corporateshareholder2_City", ErrorMessages.INVALID_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setCity("");
                    }
                    break;

                case corporateshareholder2_State:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getState(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_STATE);
                        validationErrorList.addError("corporateshareholder2_State", new PZValidationException("corporateshareholder2_State", ErrorMessages.INVALID_CORPORATESHAREHOLDER2_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setState("");
                    }
                    break;

                case corporateshareholder2_ZipCode:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_ZipCode", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getZipcode(), "alphanum", 11, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_ZIP);
                        validationErrorList.addError("corporateshareholder2_ZipCode", new PZValidationException("corporateshareholder2_ZipCode", ErrorMessages.INVALID_CORPORATESHAREHOLDER2_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setZipcode("");
                    }
                    break;

                case corporateshareholder2_Country:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_Country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getCountry(), "AppCountry", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_COUNTRY);
                        validationErrorList.addError("corporateshareholder2_Country", new PZValidationException("corporateshareholder2_Country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getCountry(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getCountry()))
                    {
                        String Corporateshareholder2_Country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setCountry(Corporateshareholder2_Country[0].toString());
                    }
                    break;
                case corporateshareholder2_Street:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_Street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getStreet(), "Description", 100, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_STREET);
                        validationErrorList.addError("corporateshareholder2_Street", new PZValidationException("corporateshareholder2_Street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setStreet("");
                    }
                    break;

                case corporateshareholder2_owned:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_OWNED);
                        validationErrorList.addError("corporateshareholder2_owned", new PZValidationException("corporateshareholder2_owned", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setOwned("");
                    }
                    break;
                case corporateshareholder2_addressproof:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_ADDRESSPROOF);
                        validationErrorList.addError("corporateshareholder2_addressproof", new PZValidationException("corporateshareholder2_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setAddressProof("");
                    }
                    break;
                case corporateshareholder2_addressId:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_ADDRESSID);
                        validationErrorList.addError("corporateshareholder2_addressId", new PZValidationException("corporateshareholder2_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setAddressId("");
                    }
                    break;
                case corporateshareholder2_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getIdentificationtypeselect(), "identificationtypeselect", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("corporateshareholder2_identificationtypeselect", new PZValidationException("corporateshareholder2_identificationtypeselect", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setIdentificationtypeselect("");
                    }
                    break;
                case corporateshareholder2_identificationtype:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getIdentificationtype(), "UserName", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER2_IDENTIFICATIONTYPE);
                        validationErrorList.addError("corporateshareholder2_identificationtype", new PZValidationException("corporateshareholder2_identificationtype", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER2).setIdentificationtype("");
                    }
                    break;

                //ADD new 3
                //Corporate shareholder1
                case corporateshareholder3_Name:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_Name", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getName(), "alphanum", 50, isOptional))//alphanum to alphanum
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_NAME);
                        validationErrorList.addError("corporateshareholder3_Name", new PZValidationException("corporateshareholder3_Name", ErrorMessages.INVALID_CORPORATESHAREHOLDER3_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getName(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setName("");
                    }
                    break;

                case corporateshareholder3_RegNumber:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_RegNumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getRegistrationNumber(), "SafeString", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_REGNUMBER);
                        validationErrorList.addError("corporateshareholder3_RegNumber", new PZValidationException("corporateshareholder3_RegNumber", ErrorMessages.INVALID_CORPORATESHAREHOLDER3_REGNUMBER + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getRegistrationNumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setRegistrationNumber("");
                    }
                    break;

                case corporateshareholder3_Address:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_Address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getAddress(), "SafeString", 150, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_ADDRESS);
                        validationErrorList.addError("corporateshareholder3_Address", new PZValidationException("corporateshareholder3_Address", ErrorMessages.INVALID_CORPORATESHAREHOLDER3_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setAddress("");
                    }
                    break;

                case corporateshareholder3_City:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_City", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getCity(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_CITY);
                        validationErrorList.addError("corporateshareholder3_City", new PZValidationException("corporateshareholder3_City", ErrorMessages.INVALID_CORPORATESHAREHOLDER3_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setCity("");
                    }
                    break;

                case corporateshareholder3_State:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getState(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_STATE);
                        validationErrorList.addError("corporateshareholder3_State", new PZValidationException("corporateshareholder3_State", ErrorMessages.INVALID_CORPORATESHAREHOLDER3_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setState("");
                    }
                    break;

                case corporateshareholder3_ZipCode:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_ZipCode", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getZipcode(), "alphanum", 11, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_ZIP);
                        validationErrorList.addError("corporateshareholder3_ZipCode", new PZValidationException("corporateshareholder3_ZipCode", ErrorMessages.INVALID_CORPORATESHAREHOLDER3_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setZipcode("");
                    }
                    break;

                case corporateshareholder3_Country:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_Country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getCountry(), "AppCountry", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_COUNTRY);
                        validationErrorList.addError("corporateshareholder3_Country", new PZValidationException("corporateshareholder3_Country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getCountry(), errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getCountry()))
                    {
                        String Corporateshareholder3_Country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setCountry(Corporateshareholder3_Country[0].toString());
                    }
                    break;
                case corporateshareholder3_Street:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_Street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getStreet(), "Description", 100, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_STREET);
                        validationErrorList.addError("corporateshareholder3_Street", new PZValidationException("corporateshareholder3_Street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setStreet("");
                    }
                    break;

                case corporateshareholder3_owned:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_OWNED);
                        validationErrorList.addError("corporateshareholder3_owned", new PZValidationException("corporateshareholder3_owned", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setOwned("");
                    }
                    break;
                case corporateshareholder3_addressproof:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_ADDRESSPROOF);
                        validationErrorList.addError("corporateshareholder3_addressproof", new PZValidationException("corporateshareholder3_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setAddressProof("");
                    }
                    break;
                case corporateshareholder3_addressId:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_ADDRESSID);
                        validationErrorList.addError("corporateshareholder3_addressId", new PZValidationException("corporateshareholder3_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setAddressId("");
                    }
                    break;
                case corporateshareholder3_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("corporateshareholder3_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getIdentificationtypeselect(), "identificationtypeselect", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("corporateshareholder3_identificationtypeselect", new PZValidationException("corporateshareholder3_identificationtypeselect", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setIdentificationtypeselect("");
                    }
                    break;
                case corporateshareholder3_identificationtype:
                    if (!ESAPI.validator().isValidInput("corporateshareholder2_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getIdentificationtype(), "UserName", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER3_IDENTIFICATIONTYPE);
                        validationErrorList.addError("corporateshareholder2_identificationtype", new PZValidationException("corporateshareholder3_identificationtype", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).setIdentificationtype("");
                    }
                    break;

                //ADD new 4
                //Corporate shareholder4
                case corporateshareholder4_Name:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_Name", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getName(), "alphanum", 50, isOptional))//alphanum to alphanum
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_NAME);
                        validationErrorList.addError("corporateshareholder4_Name", new PZValidationException("corporateshareholder4_Name", ErrorMessages.INVALID_CORPORATESHAREHOLDER4_NAME + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getName(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setName("");
                    }
                    break;

                case corporateshareholder4_RegNumber:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_RegNumber", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getRegistrationNumber(), "SafeString", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_REGNUMBER);
                        validationErrorList.addError("corporateshareholder4_RegNumber", new PZValidationException("corporateshareholder4_RegNumber", ErrorMessages.INVALID_CORPORATESHAREHOLDER4_REGNUMBER + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getRegistrationNumber(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setRegistrationNumber("");
                    }
                    break;

                case corporateshareholder4_Address:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_Address", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getAddress(), "SafeString", 150, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_ADDRESS);
                        validationErrorList.addError("corporateshareholder4_Address", new PZValidationException("corporateshareholder4_Address", ErrorMessages.INVALID_CORPORATESHAREHOLDER4_ADDRESS + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getAddress(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setAddress("");
                    }
                    break;

                case corporateshareholder4_City:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_City", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getCity(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_CITY);
                        validationErrorList.addError("corporateshareholder4_City", new PZValidationException("corporateshareholder4_City", ErrorMessages.INVALID_CORPORATESHAREHOLDER4_CITY + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getCity(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setCity("");
                    }
                    break;

                case corporateshareholder4_State:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_State", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getState(), "StrictString", 30, isOptional))// isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_STATE);
                        validationErrorList.addError("corporateshareholder4_State", new PZValidationException("corporateshareholder4_State", ErrorMessages.INVALID_CORPORATESHAREHOLDER4_STATE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getState(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setState("");
                    }
                    break;

                case corporateshareholder4_ZipCode:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_ZipCode", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getZipcode(), "alphanum", 11, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_ZIP);
                        validationErrorList.addError("corporateshareholder4_ZipCode", new PZValidationException("corporateshareholder4_ZipCode", ErrorMessages.INVALID_CORPORATESHAREHOLDER4_ZIP + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getZipcode(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setZipcode("");
                    }
                    break;

                case corporateshareholder4_Country:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_Country", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getCountry(), "AppCountry", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_COUNTRY);
                        validationErrorList.addError("corporateshareholder4_Country", new PZValidationException("corporateshareholder4_Country", ErrorMessages.INVALID_COUNTRY_CODE + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getCountry(), errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setCountry("");
                    }
                    else if (functions.isValueNull(ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getCountry()))
                    {
                        String Corporateshareholder4_Country[] = ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getCountry().split("\\|");
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setCountry(Corporateshareholder4_Country[0].toString());
                    }
                    break;
                case corporateshareholder4_Street:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_Street", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getStreet(), "Description", 100, isOptional))//changed
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_STREET);
                        validationErrorList.addError("corporateshareholder4_Street", new PZValidationException("corporateshareholder4_Street", ErrorMessages.INVALID_STREET + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getStreet(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setStreet("");
                    }
                    break;

                case corporateshareholder4_owned:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_owned", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getOwned(), "Percentage", 3, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_OWNED);
                        validationErrorList.addError("corporateshareholder4_owned", new PZValidationException("corporateshareholder4_owned", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getOwned(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setOwned("");
                    }
                    break;
                case corporateshareholder4_addressproof:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_addressproof", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getAddressProof(), "addressProofSelect", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_ADDRESSPROOF);
                        validationErrorList.addError("corporateshareholder4_addressproof", new PZValidationException("corporateshareholder4_addressproof", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getAddressProof(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setAddressProof("");
                    }
                    break;
                case corporateshareholder4_addressId:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_addressId", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getAddressId(), "alphanum", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_ADDRESSID);
                        validationErrorList.addError("corporateshareholder4_addressId", new PZValidationException("corporateshareholder4_addressId", "Invalid data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getAddressId(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setAddressId("");
                    }
                    break;
                case corporateshareholder4_identificationtypeselect:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_identificationtypeselect", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getIdentificationtypeselect(), "identificationtypeselect", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_IDENTIFICATIONTYPESELECT);
                        validationErrorList.addError("corporateshareholder4_identificationtypeselect", new PZValidationException("corporateshareholder4_identificationtypeselect", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getIdentificationtypeselect(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setIdentificationtypeselect("");
                    }
                    break;
                case corporateshareholder4_identificationtype:
                    if (!ESAPI.validator().isValidInput("corporateshareholder4_identificationtype", ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER3).getIdentificationtype(), "UserName", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CORPORATESHAREHOLDER4_IDENTIFICATIONTYPE);
                        validationErrorList.addError("corporateshareholder2_identificationtype", new PZValidationException("corporateshareholder4_identificationtype", "Invalid Data" + ":::" + ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).getIdentificationtype(), "2", errorCodeVO));
                        ownershipProfileVO.getOwnershipProfileDetailsVOMap().get(ApplicationManagerTypes.CORPORATESHAREHOLDER4).setIdentificationtype("");
                    }
                    break;
            }
        }
        if(bankInputNameList.size()>0)
            InputValidations(ownershipProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);
    }

    public void InputValidations(BusinessProfileVO businessProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList, boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMapARGS)
    {
        boolean condMethodofacceptance = false;
        boolean condMethodofacceptanceAll = false;
        boolean condPaymentTypeAll = false;
        boolean condForeigntransactionAll = false;
        boolean condCardvolumeAll = false;
        boolean condRecuringService = true;
        boolean condSeasonalFluctuating = true;
        //boolean condisacallcenterused = true;
        boolean condisafulfillmenthouseused = true;
        boolean condCardtypesacceptedother = true;             //testing true to false
        boolean condiscardtypesaccepted_other = true;
        boolean condisshopping_cart = true;
        boolean condiscountriesblocked = true;
        boolean condisaffiliateprograms = true;
        boolean condisagencyemployed = true;
        boolean condislistfraudtools = true;
        boolean condMerchantCode = true;
        boolean condCustomerSupport = true;
        boolean recurringYN = true;
        boolean condTerminalOther = true;
        boolean condisdomainsowned = true;
        boolean condiscustomeridentification = true;
        boolean condPaymentDeliveryOther = true;

        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();
        //THIS is FOR CONVERSION OF REFERENCE TO VALUE type
        Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap=new HashMap<Boolean,Set<BankInputName>>();

        Set<BankInputName> bankInputNameSet = null;
        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        if(bankInputNameBooleanMapARGS==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        else
        {
            if(bankInputNameBooleanMapARGS.containsKey(false))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(false));
                bankInputNameBooleanMap.put(false,bankInputNameSet);
            }
            if(bankInputNameBooleanMapARGS.containsKey(true))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(true));
                bankInputNameBooleanMap.put(true,bankInputNameSet);
            }
        }

        bankInputNameBooleanMapARGS= new HashMap<Boolean,Set<BankInputName>>();
        //TILL HERE
        logger.debug("InputList:::"+inputList);
        for (BankInputName input : inputList)
        {
            switch (input)
            {
                case urls:
                    if (!ESAPI.validator().isValidInput("urls", businessProfileVO.getUrls(), "CSEURL", 255, isOptional))
                    {
                        //validationErrorList.addError("urls", new ValidationException("urls", "Invalid URL(S):::" + businessProfileVO.getUrls(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_URL);
                        validationErrorList.addError("urls", new PZValidationException("urls",ErrorMessages.INVALID_REDIRECT_URL + ":::" + businessProfileVO.getUrls(),"3", errorCodeVO));
                        businessProfileVO.setUrls("");
                    }
                    break;

                case descriptor:
                    if (!ESAPI.validator().isValidInput("descriptor", businessProfileVO.getDescriptor(), "alphanum", 100, isOptional)) //true to isOptional
                    {
                        //validationErrorList.addError("descriptor", new ValidationException("descriptor", "Invalid Descriptor :::" + businessProfileVO.getDescriptor(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DESCRIPTOR);
                        validationErrorList.addError("descriptor", new PZValidationException("descriptor",ErrorMessages.INVALID_DESCRIPTOR + ":::" + businessProfileVO.getDescriptor(),"3", errorCodeVO));
                        businessProfileVO.setDescriptor("");
                    }
                    break;

                case ipaddress:
                    if (!ESAPI.validator().isValidInput("ipaddress", businessProfileVO.getIpaddress(), "IPAddress", 50, isOptional))
                    {
                        //validationErrorList.addError("ipaddress", new ValidationException("ipaddress", "Invalid ipaddress:::" + businessProfileVO.getIpaddress(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_IPADDRESS);
                        validationErrorList.addError("ipaddress", new PZValidationException("ipaddress",ErrorMessages.INVALID_IPADDRESS + ":::" + businessProfileVO.getIpaddress(),"3", errorCodeVO));
                        businessProfileVO.setIpaddress("");
                    }
                    break;

                case login_id:
                    if (!ESAPI.validator().isValidInput("login_id", businessProfileVO.getLoginId(), "LoginId", 50, isOptional)) //isOptional to true
                    {
                        //validationErrorList.addError("login_id", new ValidationException("login_id", "Invalid login_id:::" + businessProfileVO.getLoginId(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LOGINID);
                        validationErrorList.addError("login_id", new PZValidationException("login_id",ErrorMessages.INVALID_LOGINID + ":::" + businessProfileVO.getLoginId(),"3", errorCodeVO));
                        businessProfileVO.setLoginId("");
                    }
                    break;

                case password:
                    if (!ESAPI.validator().isValidInput("password", businessProfileVO.getPassWord(), "Password", 100, isOptional)) //isOptional to true
                    {
                        //validationErrorList.addError("password", new ValidationException("password", "Invalid password:::" + businessProfileVO.getPassWord(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PASSWORD);
                        validationErrorList.addError("password", new PZValidationException("password",ErrorMessages.INVALID_PASSWORD + ":::" + businessProfileVO.getPassWord(),"3", errorCodeVO));
                        businessProfileVO.setPassWord("");
                    }
                    break;

                case is_website_live:
                    boolean condIs_Website_live = true;
                    if (!ESAPI.validator().isValidInput("is_website_live", businessProfileVO.getIs_website_live(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_IS_WEBSITE_LIVE);
                        validationErrorList.addError("is_website_live", new PZValidationException("is_website_live",ErrorMessages.INVALID_IS_WEBSITE_LIVE  + ":::" + businessProfileVO.getIs_website_live(), "3", errorCodeVO));
                        businessProfileVO.setIs_website_live("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getIs_website_live()))
                    {
                        if("N".equals(businessProfileVO.getIs_website_live()))
                        {
                            //System.out.println("condIs_Website_live set to true");
                            condIs_Website_live = true;
                        }
                        else
                        {
                            condIs_Website_live = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.test_link);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.test_link, condIs_Website_live);
                    }
                    break;

                case test_link:
                    if (!ESAPI.validator().isValidInput("test_link", businessProfileVO.getTest_link(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_IS_WEBSITE_LIVE);
                        validationErrorList.addError("test_link", new PZValidationException("test_link","Invalid data"  + " " + businessProfileVO.getIs_website_live(), "3", errorCodeVO));
                        businessProfileVO.setTest_link("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getTest_link()) && (!functions.isValueNull(businessProfileVO.getIs_website_live()) || "N".equals(businessProfileVO.getIs_website_live())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_IS_WEBSITE_LIVE);
                        validationErrorList.addError("test_link", new PZValidationException("test_link", ErrorMessages.INVALID_IS_WEBSITE_LIVE + ":::" + businessProfileVO.getTest_link(), "3", errorCodeVO));
                        businessProfileVO.setTest_link("");
                    }
                    break;

                case lowestticket:
                    if (!ESAPI.validator().isValidInput("lowestticket", businessProfileVO.getLowestticket(), "OnlyNumber", 30,isOptional))
                    {
                        //validationErrorList.addError("lowestticket", new ValidationException("lowestticket", "Invalid lowestticket:::" + businessProfileVO.getLowestticket(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LOWESTTICKET);
                        validationErrorList.addError("lowestticket", new PZValidationException("lowestticket",ErrorMessages.INVALID_LOWESTTICKET + ":::" + businessProfileVO.getLowestticket(),"3", errorCodeVO));
                        businessProfileVO.setLowestticket("");
                    }
                    else
                    {
                        bankInputNameList.add(BankInputName.LTlessthanAT);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.LTlessthanAT, functions.isValueNull(businessProfileVO.getLowestticket()) && functions.isValueNull(businessProfileVO.getAverageticket()));
                        bankInputNameList.add(BankInputName.ATlessthanHT);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.ATlessthanHT, functions.isValueNull(businessProfileVO.getAverageticket()) && functions.isValueNull(businessProfileVO.getHighestticket()));
                    }
                    break;

                case averageticket:
                    if (!ESAPI.validator().isValidInput("averageticket", businessProfileVO.getAverageticket(), "OnlyNumber", 30, isOptional))
                    {
                        //validationErrorList.addError("averageticket", new ValidationException("averageticket", "Invalid Average Ticket:::" + businessProfileVO.getAverageticket(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AVERAGE_TICKET);
                        validationErrorList.addError("averageticket", new PZValidationException("averageticket",ErrorMessages.INVALID_AVERAGE_TICKET + ":::" + businessProfileVO.getAverageticket(),"3", errorCodeVO));
                        businessProfileVO.setAverageticket("");
                    }
                    break;

                case highestticket:
                    if (!ESAPI.validator().isValidInput("highestticket", businessProfileVO.getHighestticket(), "OnlyNumber", 30, isOptional))
                    {
                        //validationErrorList.addError("highestticket", new ValidationException("highestticket", "Invalid Highest Ticket:::" + businessProfileVO.getHighestticket(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_HIGHEST_TICKET);
                        validationErrorList.addError("highestticket", new PZValidationException("highestticket",ErrorMessages.INVALID_HIGHEST_TICKET + ":::" + businessProfileVO.getHighestticket(),"3", errorCodeVO));
                        businessProfileVO.setHighestticket("");
                    }
                    break;

                case LTlessthanAT:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input)?true:false)) && (Integer.parseInt(businessProfileVO.getLowestticket()) > Integer.parseInt(businessProfileVO.getAverageticket())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_LT_LESSTHANAT_TICKET);
                        validationErrorList.addError("ltlessthan_AT", new PZValidationException("ltlessthan_AT",ErrorMessages.INVALID_TICKET + ":::" + businessProfileVO.getAverageticket(),"3", errorCodeVO));
                        //validationErrorList.addError("ltlessthan_AT", new ValidationException("ltlessthan_AT", "Invalid ticket:::" + businessProfileVO.getAverageticket(), "3"));
                    }
                    break;

                case ATlessthanHT:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input)?true:false)) && (Integer.parseInt(businessProfileVO.getAverageticket()) > Integer.parseInt(businessProfileVO.getHighestticket())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_AT_LESSTHANHT_TICKET);
                        validationErrorList.addError("atlessthan_HT", new PZValidationException("atlessthan_HT",ErrorMessages.INVALID_TICKET + ":::" + businessProfileVO.getHighestticket(),"3", errorCodeVO));
                        //validationErrorList.addError("atlessthan_HT", new ValidationException("atlessthan_HT", "Invalid ticket:::" + businessProfileVO.getHighestticket(), "3"));
                    }
                    break;

                case foreigntransactions_us:
                    if(functions.isValueNull(businessProfileVO.getForeigntransactions_us()) || functions.isValueNull(businessProfileVO.getForeigntransactions_canada()) || functions.isValueNull(businessProfileVO.getForeigntransactions_cis()) || functions.isValueNull(businessProfileVO.getForeigntransactions_RestoftheWorld()) || functions.isValueNull(businessProfileVO.getForeigntransactions_Europe()) || functions.isValueNull(businessProfileVO.getForeigntransactions_uk()) || functions.isValueNull(businessProfileVO.getForeigntransactions_Asia()))
                    {
                        condForeigntransactionAll=true;
                    }
                    if (!ESAPI.validator().isValidInput("foreigntransactions_us", businessProfileVO.getForeigntransactions_us(), "Percentage", 3, (condForeigntransactionAll || isOptional)))
                    {
                        //validationErrorList.addError("foreigntransactions_us", new ValidationException("foreigntransactions_us", "Invalid Percentage of foreign transactions US:::" + businessProfileVO.getForeigntransactions_us(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_US);
                        validationErrorList.addError("foreigntransactions_us", new PZValidationException("foreigntransactions_us",ErrorMessages.INVALID_FOREIGN_TRANSACTIONS_US + ":::" + businessProfileVO.getForeigntransactions_us(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_us("");
                    }
                    if(functions.isValueNull(businessProfileVO.getForeigntransactions_us()))
                    {
                        condForeigntransactionAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getForeigntransactions_Asia()))
                    {
                        condForeigntransactionAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getForeigntransactions_Europe()))
                    {
                        condForeigntransactionAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getForeigntransactions_cis()))
                    {
                        condForeigntransactionAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getForeigntransactions_canada()))
                    {
                        condForeigntransactionAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getForeigntransactions_uk()))
                    {
                        condForeigntransactionAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getForeigntransactions_RestoftheWorld()))
                    {
                        condForeigntransactionAll=true;
                    }
                    bankInputNameList.add(BankInputName.foreigntransactions_Europe);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.foreigntransactions_Europe,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.foreigntransactions_Europe)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.foreigntransactions_Asia);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.foreigntransactions_Asia,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.foreigntransactions_Asia)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.foreigntransactions_cis);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.foreigntransactions_cis,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.foreigntransactions_cis)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.foreigntransactions_canada);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.foreigntransactions_canada,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.foreigntransactions_canada)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.foreigntransactions_uk);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.foreigntransactions_uk,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.foreigntransactions_uk)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.foreigntransactions_RestoftheWorld);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.foreigntransactions_RestoftheWorld,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.foreigntransactions_RestoftheWorld)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.calculateforeigntransactions);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.calculateforeigntransactions,condForeigntransactionAll || !conditionalValidation);

                    break;

                case foreigntransactions_Europe:
                    if (!ESAPI.validator().isValidInput("foreigntransactions_Europe", businessProfileVO.getForeigntransactions_Europe(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        logger.debug("Inside Europe----"+(functions.isValueNull(businessProfileVO.getForeigntransactions_Europe()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_Europe()) && Integer.parseInt(businessProfileVO.getForeigntransactions_Europe()) > 100));
                        logger.debug("Inside Europe 123----" + businessProfileVO.getForeigntransactions_Europe());
                        //validationErrorList.addError("foreigntransactions_Europe", new ValidationException("foreigntransactions_Europe", "Invalid Percentage of foreign transactions Europe :::" + businessProfileVO.getForeigntransactions_Europe(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_EUROPE);
                        validationErrorList.addError("foreigntransactions_Europe", new PZValidationException("foreigntransactions_Europe",ErrorMessages.INVALID_FOREIGN_TRANSACTIONS_EUROPE + ":::" + businessProfileVO.getForeigntransactions_Europe(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_Europe("");
                    }
                    break;

                case foreigntransactions_Asia:
                    if (!ESAPI.validator().isValidInput("foreigntransactions_Asia", businessProfileVO.getForeigntransactions_Asia(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("foreigntransactions_Asia", new ValidationException("foreigntransactions_Asia", "Invalid Percentage of foreign transactions Asia:::" + businessProfileVO.getForeigntransactions_Asia(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_ASIA);
                        validationErrorList.addError("foreigntransactions_Asia", new PZValidationException("foreigntransactions_Asia",ErrorMessages.INVALID_FOREIGN_TRANSACTIONS_ASIA + ":::" + businessProfileVO.getForeigntransactions_Asia(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_Asia("");
                    }
                    break;

                case foreigntransactions_cis:
                    if (!ESAPI.validator().isValidInput("foreigntransactions_cis", businessProfileVO.getForeigntransactions_cis(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("foreigntransactions_cis", new ValidationException("foreigntransactions_cis", "Invalid foreigntransactions_cis:::" + businessProfileVO.getForeigntransactions_cis(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_CIS);
                        validationErrorList.addError("foreigntransactions_cis", new PZValidationException("foreigntransactions_cis",ErrorMessages.INVALID_FOREIGN_TRANSACTIONS_CIS + ":::" + businessProfileVO.getForeigntransactions_cis(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_cis("");
                    }
                    break;

                case foreigntransactions_canada:
                    if (!ESAPI.validator().isValidInput("foreigntransactions_canada", businessProfileVO.getForeigntransactions_canada(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("foreigntransactions_canada", new ValidationException("foreigntransactions_canada", "Invalid foreigntransactions_canada:::" + businessProfileVO.getForeigntransactions_canada(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_CANADA);
                        validationErrorList.addError("foreigntransactions_canada", new PZValidationException("foreigntransactions_canada",ErrorMessages.INVALID_FOREIGN_TRANSACTIONS_CANADA + ":::" + businessProfileVO.getForeigntransactions_canada(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_canada("");
                    }
                    break;

                case foreigntransactions_uk:
                    if (!ESAPI.validator().isValidInput("foreigntransactions_uk", businessProfileVO.getForeigntransactions_uk(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_UK);
                        validationErrorList.addError("foreigntransactions_uk", new PZValidationException("foreigntransactions_uk", "Invalid Data" + " " + businessProfileVO.getForeigntransactions_uk(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_uk("");
                    }
                    break;

                case foreigntransactions_RestoftheWorld:
                    if (!ESAPI.validator().isValidInput("foreigntransactions_RestoftheWorld", businessProfileVO.getForeigntransactions_RestoftheWorld(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("foreigntransactions_RestoftheWorld", new ValidationException("foreigntransactions_RestoftheWorld", "Invalid Percentage of foreign transactions Rest of the World :::" + businessProfileVO.getForeigntransactions_RestoftheWorld(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_FOREIGN_TRANSACTIONS_RESTOFTHEWORLD);
                        validationErrorList.addError("foreigntransactions_RestoftheWorld", new PZValidationException("foreigntransactions_RestoftheWorld",ErrorMessages.INVALID_FOREIGN_TRANSACTIONS_RESTOFTHEWORLD + ":::" + businessProfileVO.getForeigntransactions_RestoftheWorld(),"3", errorCodeVO));
                        businessProfileVO.setForeigntransactions_RestoftheWorld("");
                    }
                    break;

                case calculateforeigntransactions:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_us()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_us())) ? businessProfileVO.getForeigntransactions_us() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_canada()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_canada())) ? businessProfileVO.getForeigntransactions_canada() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_cis()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_cis())) ? businessProfileVO.getForeigntransactions_cis() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_Europe()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_Europe())) ? businessProfileVO.getForeigntransactions_Europe() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_Asia()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_Asia())) ? businessProfileVO.getForeigntransactions_Asia() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_uk()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_uk())) ? businessProfileVO.getForeigntransactions_uk() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_RestoftheWorld()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_RestoftheWorld())) ? businessProfileVO.getForeigntransactions_RestoftheWorld() : "0")) > 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALCULATE_FOREIGN_TRANSACTIONS);
                        validationErrorList.addError("foreigntransactions_All", new PZValidationException("foreigntransactions_All",ErrorMessages.INVALID_CALCULATE_FOREIGN_TRANSACTIONS + ":::" + businessProfileVO.getForeigntransactions_us(),"3", errorCodeVO));
                    }
                    else if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_us()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_us())) ? businessProfileVO.getForeigntransactions_us() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_canada()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_canada())) ? businessProfileVO.getForeigntransactions_canada() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_cis()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_cis())) ? businessProfileVO.getForeigntransactions_cis() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_Europe()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_Europe())) ? businessProfileVO.getForeigntransactions_Europe() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_Asia()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_Asia())) ? businessProfileVO.getForeigntransactions_Asia() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_uk()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_uk())) ? businessProfileVO.getForeigntransactions_uk() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getForeigntransactions_RestoftheWorld()) && functions.isNumericVal(businessProfileVO.getForeigntransactions_RestoftheWorld())) ? businessProfileVO.getForeigntransactions_RestoftheWorld() : "0")) < 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALCULATE_FOREIGN_TRANSACTIONS);
                        validationErrorList.addError("foreigntransactions_All", new PZValidationException("foreigntransactions_All",ErrorMessages.INVALID_CALCULATE_FOREIGN_TRANSACTIONS + ":::" + businessProfileVO.getForeigntransactions_us(),"3", errorCodeVO));
                    }
                    break;

                /*case methodofacceptance_moto:
                    *//*if(functions.isValueNull(businessProfileVO.getMethodofacceptance_moto()) || functions.isValueNull(businessProfileVO.getMethodofacceptance_internet()) || functions.isValueNull(businessProfileVO.getMethodofacceptance_swipe()))
                    {
                        condMethodofacceptanceAll=true;
                    }*//*

                    logger.debug("condMethodofacceptanceAll--->"+condMethodofacceptanceAll);
                    logger.debug("isOptional--->"+isOptional);
                    if (!ESAPI.validator().isValidInput("methodofacceptance_moto", businessProfileVO.getMethodofacceptance_moto(), "Percentage", 3, (condMethodofacceptanceAll || isOptional)))
                    {
                        //validationErrorList.addError("methodofacceptance_moto", new ValidationException("methodofacceptance_moto", "Invalid MOTO  :::" + businessProfileVO.getMethodofacceptance_moto(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_METHOD_OF_ACCEPTANCE);
                        validationErrorList.addError("methodofacceptance_moto", new PZValidationException("methodofacceptance_moto",ErrorMessages.INVALID_METHOD_OF_ACCEPTANCE + ":::" + businessProfileVO.getMethodofacceptance_moto(),"3", errorCodeVO));
                        businessProfileVO.setMethodofacceptance_moto("");
                    }
                    if(functions.isValueNull(businessProfileVO.getMethodofacceptance_moto()))
                    {
                        condMethodofacceptance=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getMethodofacceptance_internet()))
                    {
                        condMethodofacceptance=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getMethodofacceptance_swipe()))
                    {
                        condMethodofacceptance=true;
                    }
                    logger.debug("condMethodofacceptanceAll2--->"+condMethodofacceptanceAll);
                    bankInputNameList.add(BankInputName.methodofacceptance_internet);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.methodofacceptance_internet,condMethodofacceptance||isOptional);
                    bankInputNameList.add(BankInputName.methodofacceptance_swipe);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.methodofacceptance_swipe,condMethodofacceptance||isOptional);
                    bankInputNameList.add(BankInputName.calculatemethodofacceptance_moto);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.calculatemethodofacceptance_moto,condMethodofacceptanceAll);
                    break;

                case methodofacceptance_internet:
                    if (!ESAPI.validator().isValidInput("methodofacceptance_internet", businessProfileVO.getMethodofacceptance_internet(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("methodofacceptance_internet", new ValidationException("methodofacceptance_internet", "Invalid Internet:::" + businessProfileVO.getMethodofacceptance_internet(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_METHOD_OF_ACCEPTANCE_INTERNET);
                        validationErrorList.addError("methodofacceptance_internet", new PZValidationException("methodofacceptance_internet",ErrorMessages.INVALID_METHOD_OF_ACCEPTANCE_INTERNET + ":::" + businessProfileVO.getMethodofacceptance_internet(),"3", errorCodeVO));
                        businessProfileVO.setMethodofacceptance_internet("");
                    }

                    break;

                case  methodofacceptance_swipe:
                    if (!ESAPI.validator().isValidInput("methodofacceptance_swipe", businessProfileVO.getMethodofacceptance_swipe(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("methodofacceptance_swipe", new ValidationException("methodofacceptance_swipe", "Invalid Swipe:::" + businessProfileVO.getMethodofacceptance_swipe(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_METHOD_OF_ACCEPTANCE_SWIPE);
                        validationErrorList.addError("methodofacceptance_swipe", new PZValidationException("methodofacceptance_swipe",ErrorMessages.INVALID_METHOD_OF_ACCEPTANCE_SWIPE + ":::" + businessProfileVO.getMethodofacceptance_swipe(),"3", errorCodeVO));
                        businessProfileVO.setMethodofacceptance_swipe("");
                    }
                    break;

                case calculatemethodofacceptance_moto:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&(Integer.parseInt((functions.isValueNull(businessProfileVO.getMethodofacceptance_moto())  && functions.isNumericVal(businessProfileVO.getMethodofacceptance_moto())) ? businessProfileVO.getMethodofacceptance_moto() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getMethodofacceptance_internet())  && functions.isNumericVal(businessProfileVO.getMethodofacceptance_internet())) ? businessProfileVO.getMethodofacceptance_internet() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getMethodofacceptance_swipe()) && functions.isNumericVal(businessProfileVO.getMethodofacceptance_swipe())) ? businessProfileVO.getMethodofacceptance_swipe() : "0")) != 100)
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_METHOD_OF_ACCEPTANCE_MOTO);
                        validationErrorList.addError("methodofacceptance_All", new PZValidationException("methodofacceptance_All", ErrorMessages.INVALID_METHOD_OF_ACCEPTANCE_MOTO + ":::" + businessProfileVO.getMethodofacceptance_moto(), "3", errorCodeVO));
                        //validationErrorList.addError("methodofacceptance_All", new ValidationException("methodofacceptance_All", "Invalid Addition of all the method of Acceptance:::" + businessProfileVO.getMethodofacceptance_swipe(), "3"));
                    }
                    break;*/

                case cardtypesaccepted_visa:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_visa", businessProfileVO.getCardtypesaccepted_visa(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("cardtypesaccepted_visa", new ValidationException("cardtypesaccepted_visa", "Invalid kyc_processes:::" + businessProfileVO.getCardtypesaccepted_visa(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_VISA);
                        validationErrorList.addError("cardtypesaccepted_visa", new PZValidationException("cardtypesaccepted_visa", ErrorMessages.INVALID_CARDTYPEACCEPTED_VISA + ":::" + businessProfileVO.getCardtypesaccepted_visa(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_visa("");
                    }
                    bankInputNameList.add(BankInputName.cardtypesaccepted_mastercard);
                    break;

                case cardtypesaccepted_mastercard:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_mastercard", businessProfileVO.getCardtypesaccepted_mastercard(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("cardtypesaccepted_mastercard", new ValidationException("cardtypesaccepted_mastercard", "Invalid kyc_processes:::" + businessProfileVO.getCardtypesaccepted_mastercard(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_MASTERCARD);
                        validationErrorList.addError("cardtypesaccepted_mastercard", new PZValidationException("cardtypesaccepted_mastercard",ErrorMessages.INVALID_CARDTYPEACCEPTED_MASTERCARD + ":::" + businessProfileVO.getCardtypesaccepted_mastercard(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_mastercard("");
                    }
                    bankInputNameList.add(BankInputName.cardtypesaccepted_americanexpress);
                    break;

                case cardtypesaccepted_americanexpress:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_americanexpress", businessProfileVO.getCardtypesaccepted_americanexpress(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("cardtypesaccepted_americanexpress", new ValidationException("cardtypesaccepted_americanexpress", "Invalid kyc_processes:::" + businessProfileVO.getCardtypesaccepted_americanexpress(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_AMERICANEXPRESS);
                        validationErrorList.addError("cardtypesaccepted_americanexpress", new PZValidationException("cardtypesaccepted_americanexpress",ErrorMessages.INVALID_CARDTYPEACCEPTED_AMERICANEXPRESS + ":::" + businessProfileVO.getCardtypesaccepted_americanexpress(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_americanexpress("");
                    }
                    bankInputNameList.add(BankInputName.cardtypesaccepted_discover);
                    break;
                case cardtypesaccepted_discover:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_discover", businessProfileVO.getCardtypesaccepted_discover(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("cardtypesaccepted_discover", new ValidationException("cardtypesaccepted_discover", "Invalid kyc_processes:::" + businessProfileVO.getCardtypesaccepted_discover(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_DISCOVER);
                        validationErrorList.addError("cardtypesaccepted_discover", new PZValidationException("cardtypesaccepted_discover",ErrorMessages.INVALID_CARDTYPEACCEPTED_DISCOVER + ":::" + businessProfileVO.getCardtypesaccepted_discover(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_discover("");
                    }
                    bankInputNameList.add(BankInputName.cardtypesaccepted_diners);
                    break;

                case cardtypesaccepted_diners:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_diners", businessProfileVO.getCardtypesaccepted_diners(), "isYN", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("cardtypesaccepted_diners", new ValidationException("cardtypesaccepted_diners", "Invalid kyc_processes:::" + businessProfileVO.getCardtypesaccepted_diners(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_DINERS);
                        validationErrorList.addError("cardtypesaccepted_diners", new PZValidationException("cardtypesaccepted_diners",ErrorMessages.INVALID_CARDTYPEACCEPTED_DINERS + ":::" + businessProfileVO.getCardtypesaccepted_diners(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_diners("");
                    }
                    bankInputNameList.add(BankInputName.cardtypesaccepted_jcb);
                    break;

                case cardtypesaccepted_jcb:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_jcb", businessProfileVO.getCardtypesaccepted_jcb(), "isYN", 2, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("cardtypesaccepted_jcb", new ValidationException("cardtypesaccepted_jcb", "Invalid kyc_processes:::" + businessProfileVO.getCardtypesaccepted_jcb(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_JCB);
                        validationErrorList.addError("cardtypesaccepted_jcb", new PZValidationException("cardtypesaccepted_jcb",ErrorMessages.INVALID_CARDTYPEACCEPTED_JCB + ":::" + businessProfileVO.getCardtypesaccepted_jcb(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_jcb("");
                    }
                    break;

                case cardtypesaccepted_rupay:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_rupay", businessProfileVO.getCardtypesaccepted_rupay(), "isYN", 2, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_RUPAY);
                        validationErrorList.addError("cardtypesaccepted_rupay", new PZValidationException("cardtypesaccepted_rupay","Invalid Data" + " " + businessProfileVO.getCardtypesaccepted_rupay(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_rupay("");
                    }
                    break;

                case cardtypesaccepted_other:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_other", businessProfileVO.getCardtypesaccepted_other(), "isYN", 2, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_OTHER);
                        validationErrorList.addError("cardtypesaccepted_other", new PZValidationException("cardtypesaccepted_other", ErrorMessages.INVALID_CARDTYPEACCEPTED_OTHER + ":::" + businessProfileVO.getCardtypesaccepted_other(), "3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_other("");
                    }
                   /* else if(!functions.isValueNull(businessProfileVO.getCardtypesaccepted_other()) || "N".equals(businessProfileVO.getCardtypesaccepted_other()))
                    {
                        if((!functions.isValueNull(businessProfileVO.getCardtypesaccepted_americanexpress()) || "N".equals(businessProfileVO.getCardtypesaccepted_americanexpress())) &&
                                (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_visa()) || "N".equals(businessProfileVO.getCardtypesaccepted_visa())) &&
                                (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_diners()) || "N".equals(businessProfileVO.getCardtypesaccepted_diners())) &&
                                (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_discover()) || "N".equals(businessProfileVO.getCardtypesaccepted_discover())) &&
                                (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_jcb()) || "N".equals(businessProfileVO.getCardtypesaccepted_jcb())) &&
                                (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_rupay()) || "N".equals(businessProfileVO.getCardtypesaccepted_rupay())) &&
                                (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_mastercard()) || "N".equals(businessProfileVO.getCardtypesaccepted_mastercard())))
                        {
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED);
                            validationErrorList.addError("cardtypesaccepted", new PZValidationException("cardtypesaccepted",ErrorMessages.INVALID_CARDTYPEACCEPTED + ":::" + businessProfileVO.getCardtypesaccepted_other(),"3", errorCodeVO));
                            businessProfileVO.setCardtypesaccepted_other("");
                        }
                    }*/
                    else if(functions.isValueNull(businessProfileVO.getCardtypesaccepted_other()) && !"N".equals(businessProfileVO.getCardtypesaccepted_other()))
                    {
                        bankInputNameList.add(BankInputName.cardtypesaccepted_other_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardtypesaccepted_other_yes,false);
                    }
                    break;
                //this is for end validator

                case cardtypesaccepted_other_yes:
                    if (!ESAPI.validator().isValidInput("cardtypesaccepted_other_yes", businessProfileVO.getCardtypesaccepted_other_yes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_OTHER_YES);
                        validationErrorList.addError("cardtypesaccepted_other_yes", new PZValidationException("cardtypesaccepted_other_yes",ErrorMessages.INVALID_CARDTYPEACCEPTED_OTHER_YES + ":::" + businessProfileVO.getCardtypesaccepted_other_yes(),"3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_other_yes("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardtypesaccepted_other_yes()) && (!functions.isValueNull(businessProfileVO.getCardtypesaccepted_other()) || "N".equals(businessProfileVO.getCardtypesaccepted_other()) ))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDTYPEACCEPTED_SELECTION);
                        validationErrorList.addError("cardtypesaccepted_other_yes", new PZValidationException("cardtypesaccepted_other_yes", ErrorMessages.INVALID_CARDTYPEACCEPTED_SELECTION + ":::" + businessProfileVO.getCardtypesaccepted_other_yes(), "3", errorCodeVO));
                        businessProfileVO.setCardtypesaccepted_other_yes("");
                    }
                    break;

                case descriptionofproducts:
                    if (!ESAPI.validator().isValidInput("descriptionofproducts", businessProfileVO.getDescriptionofproducts(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("descriptionofproducts", new ValidationException("descriptionofproducts", "Invalid Description of products:::" + businessProfileVO.getDescriptionofproducts(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DESCRIPTIONOFPRODUCTS);
                        validationErrorList.addError("descriptionofproducts", new PZValidationException("descriptionofproducts",ErrorMessages.INVALID_DESCRIPTIONOFPRODUCTS + ":::" + businessProfileVO.getDescriptionofproducts(),"3", errorCodeVO));
                        businessProfileVO.setDescriptionofproducts("");
                    }
                    break;

                case product_sold_currencies:
                    if (!ESAPI.validator().isValidInput("product_sold_currencies", businessProfileVO.getProduct_sold_currencies(), "AppGateway", 3000, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRODUCT_SOLD_CURRENCIES);
                        validationErrorList.addError("product_sold_currencies", new PZValidationException("product_sold_currencies",ErrorMessages.INVALID_PRODUCT_SOLD_CURRENCIES  + ":::" + businessProfileVO.getProduct_sold_currencies(),"3", errorCodeVO));
                        businessProfileVO.setProduct_sold_currencies("");
                    }
                    break;

                case recurringservices:
                    if (!ESAPI.validator().isValidInput("recurringservices", businessProfileVO.getRecurringservices(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("recurringservices", new ValidationException("recurringservices", "Invalid Recurring Services:::" + businessProfileVO.getRecurringservices(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_RECURRINGSERVICES);
                        validationErrorList.addError("recurringservices", new PZValidationException("recurringservices", ErrorMessages.INVALID_RECURRINGSERVICES + ":::" + businessProfileVO.getRecurringservices(),"3", errorCodeVO));
                        businessProfileVO.setRecurringservices("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getRecurringservices()))
                    {
                        if ("N".equals(businessProfileVO.getRecurringservices()))
                        {
                            condRecuringService = true;
                        }
                        else
                        {
                            condRecuringService = isOptional;
                        }
                        bankInputNameList.add(BankInputName.recurringservicesyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.recurringservicesyes, condRecuringService);
                    }
                    break;

                case recurringservicesyes:
                    if (!ESAPI.validator().isValidInput("recurringservicesyes", businessProfileVO.getRecurringservicesyes(), "alphanum", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("recurringservicesyes", new ValidationException("recurringservicesyes", "Invalid Recurring Services describe:::" + businessProfileVO.getRecurringservicesyes(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_RECURRINGSERVICESYES);
                        validationErrorList.addError("recurringservicesyes", new PZValidationException("recurringservicesyes",ErrorMessages.INVALID_RECURRINGSERVICESYES + ":::" + businessProfileVO.getRecurringservicesyes(),"3", errorCodeVO));
                        businessProfileVO.setRecurringservicesyes("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getRecurringservicesyes()) && (!functions.isValueNull(businessProfileVO.getRecurringservices()) || "N".equals(businessProfileVO.getRecurringservices())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_RECURRINGSERVICES_SELECTION);
                        validationErrorList.addError("recurringservicesyes", new PZValidationException("recurringservicesyes",ErrorMessages.INVALID_RECURRINGSERVICES_SELECTION + ":::" + businessProfileVO.getRecurringservicesyes(),"3", errorCodeVO));
                        businessProfileVO.setRecurringservicesyes("");
                    }
                    break;

                /*case isacallcenterused:
                    if (!ESAPI.validator().isValidInput("isacallcenterused", businessProfileVO.getIsacallcenterused(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("isacallcenterused", new ValidationException("isacallcenterused", "Invalid Is a Call Center used:::" + businessProfileVO.getIsacallcenterused(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_ISACALLCENTERUSED);
                        validationErrorList.addError("isacallcenterused", new PZValidationException("isacallcenterused",ErrorMessages.INVALID_ISACALLCENTERUSED + ":::" + businessProfileVO.getIsacallcenterused(),"3", errorCodeVO));
                        businessProfileVO.setIsacallcenterused("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getIsacallcenterused()))
                    {
                        if ("N".equals(businessProfileVO.getIsacallcenterused()))
                        {
                            condisacallcenterused = true;
                        }
                        else
                        {
                            condisacallcenterused = isOptional;
                        }
                        bankInputNameList.add(BankInputName.isacallcenterusedyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.isacallcenterusedyes,condisacallcenterused);
                    }
                    break;
*/
                case isacallcenterusedyes:
                    if (!ESAPI.validator().isValidInput("isacallcenterusedyes", businessProfileVO.getIsacallcenterusedyes(), "alphanum", 100, isOptional))
                    {
                        //validationErrorList.addError("isacallcenterusedyes", new ValidationException("isacallcenterusedyes", "Invalid Is a Call Center used describe:::" + businessProfileVO.getIsacallcenterusedyes(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_ISACALLCENTERUSEDYES);
                        validationErrorList.addError("isacallcenterusedyes", new PZValidationException("isacallcenterusedyes",ErrorMessages.INVALID_ISACALLCENTERUSEDYES + ":::" + businessProfileVO.getIsacallcenterusedyes(),"3", errorCodeVO));
                        businessProfileVO.setIsacallcenterusedyes("");
                    }
                    /*else if (functions.isValueNull(businessProfileVO.getIsacallcenterusedyes()) && (!functions.isValueNull(businessProfileVO.getIsacallcenterusedyes()) || "N".equals(businessProfileVO.getIsacallcenterusedyes())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_ISACALLCENTERUSED_SELECTION);
                        validationErrorList.addError("isacallcenterusedyes", new PZValidationException("isacallcenterusedyes",ErrorMessages.INVALID_ISACALLCENTERUSED_SELECTION + ":::" + businessProfileVO.getIsacallcenterusedyes(),"3", errorCodeVO));
                        businessProfileVO.setIsacallcenterusedyes("");
                    }*/
                    break;

                case isafulfillmenthouseused:

                    if (!ESAPI.validator().isValidInput("isafulfillmenthouseused", businessProfileVO.getIsafulfillmenthouseused(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("isafulfillmenthouseused", new ValidationException("isafulfillmenthouseused", "Invalid Is a Fulfillment House used:::" + businessProfileVO.getIsafulfillmenthouseused(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_ISAFULFILLMENTHOUSEUSED);
                        validationErrorList.addError("isafulfillmenthouseused", new PZValidationException("isafulfillmenthouseused",ErrorMessages.INVALID_ISAFULFILLMENTHOUSEUSED + ":::" + businessProfileVO.getIsafulfillmenthouseused(),"3", errorCodeVO));
                        businessProfileVO.setIsafulfillmenthouseused("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getIsafulfillmenthouseused()))
                    {
                        if ("N".equals(businessProfileVO.getIsafulfillmenthouseused()))
                        {
                            condisafulfillmenthouseused = true;
                        }
                        else
                        {
                            condisafulfillmenthouseused = isOptional;
                        }
                        bankInputNameList.add(BankInputName.isafulfillmenthouseused_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.isafulfillmenthouseused_yes, condisafulfillmenthouseused);
                    }
                    break;

                case isafulfillmenthouseused_yes:
                    if (!ESAPI.validator().isValidInput("isafulfillmenthouseused_yes", businessProfileVO.getIsafulfillmenthouseused_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("isafulfillmenthouseused_yes", new ValidationException("isafulfillmenthouseused_yes", "Invalid Is a Fulfillment House used describe:::" + businessProfileVO.getIsafulfillmenthouseused_yes(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_ISAFULFILLMENTHOUSEUSED_YES);
                        validationErrorList.addError("isafulfillmenthouseused_yes", new PZValidationException("isafulfillmenthouseused_yes",ErrorMessages.INVALID_ISAFULFILLMENTHOUSEUSED_YES + ":::" + businessProfileVO.getIsafulfillmenthouseused_yes(),"3", errorCodeVO));
                        businessProfileVO.setIsafulfillmenthouseused_yes("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getIsafulfillmenthouseused_yes()) && (!functions.isValueNull(businessProfileVO.getIsafulfillmenthouseused()) || "N".equals(businessProfileVO.getIsafulfillmenthouseused())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_ISAFULFILLMENTHOUSEUSED_SELECTION);
                        validationErrorList.addError("isafulfillmenthouseused_yes", new PZValidationException("isafulfillmenthouseused_yes",ErrorMessages.INVALID_ISAFULFILLMENTHOUSEUSED_SELECTION + ":::" + businessProfileVO.getIsafulfillmenthouseused_yes(),"3", errorCodeVO));
                        businessProfileVO.setIsafulfillmenthouseused_yes("");
                    }
                    break;

                case visa_cardlogos:
                    if (!ESAPI.validator().isValidInput("visa_cardlogos", businessProfileVO.getVisa_cardlogos(), "isYN", 2, isOptional))//isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_VISA_CARDLOGOS);
                        validationErrorList.addError("visa_cardlogos", new PZValidationException("visa_cardlogos",ErrorMessages.INVALID_VISA_CARDLOGOS + ":::" + businessProfileVO.getVisa_cardlogos(),"3", errorCodeVO));
                        businessProfileVO.setVisa_cardlogos("");
                    }
                    break;

                case master_cardlogos:
                    if (!ESAPI.validator().isValidInput("master_cardlogos", businessProfileVO.getMaster_cardlogos(), "isYN", 2, isOptional))//isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MASTER_CARDLOGOS);
                        validationErrorList.addError("master_cardlogos", new PZValidationException("master_cardlogos",ErrorMessages.INVALID_MASTER_CARDLOGOS + ":::" + businessProfileVO.getMaster_cardlogos(),"3", errorCodeVO));
                        businessProfileVO.setMaster_cardlogos("");
                    }
                    break;

                case price_displayed:
                    if (!ESAPI.validator().isValidInput("price_displayed", businessProfileVO.getPrice_displayed(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("price_displayed", new ValidationException("price_displayed", "Invalid price_displayed:::" + businessProfileVO.getPrice_displayed(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRICE_DISPLAYED);
                        validationErrorList.addError("price_displayed", new PZValidationException("price_displayed",ErrorMessages.INVALID_PRICE_DISPLAYED + ":::" + businessProfileVO.getPrice_displayed(),"3", errorCodeVO));
                        businessProfileVO.setPrice_displayed("");
                    }
                    break;

                case companyidentifiable:
                    if (!ESAPI.validator().isValidInput("companyidentifiable", businessProfileVO.getCompanyIdentifiable(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("companyidentifiable", new ValidationException("companyidentifiable", "Invalid companyidentifiable:::" + businessProfileVO.getCompanyIdentifiable(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYIDENTIFIABLE);
                        validationErrorList.addError("companyidentifiable", new PZValidationException("companyidentifiable",ErrorMessages.INVALID_COMPANYIDENTIFIABLE + ":::" + businessProfileVO.getCompanyIdentifiable(),"3", errorCodeVO));
                        businessProfileVO.setCompanyIdentifiable("");
                    }
                    break;

                case clearlypresented:
                    if (!ESAPI.validator().isValidInput("clearlypresented", businessProfileVO.getClearlyPresented(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("clearlypresented", new ValidationException("clearlypresented", "Invalid ]clearlypresented:::" + businessProfileVO.getClearlyPresented(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CLEARLYPRESENTED);
                        validationErrorList.addError("clearlypresented", new PZValidationException("clearlypresented",ErrorMessages.INVALID_CLEARLYPRESENTED + ":::" + businessProfileVO.getClearlyPresented(),"3", errorCodeVO));
                        businessProfileVO.setClearlyPresented("");
                    }
                    break;

                case trackingnumber:
                    if (!ESAPI.validator().isValidInput("trackingnumber", businessProfileVO.getTrackingNumber(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("trackingnumber", new ValidationException("trackingnumber", "Invalid trackingnumber:::" + businessProfileVO.getTrackingNumber(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_TRACKINGNUMBER);
                        validationErrorList.addError("trackingnumber", new PZValidationException("trackingnumber", ErrorMessages.INVALID_TRACKINGNUMBER + ":::" + businessProfileVO.getTrackingNumber(),"3", errorCodeVO));
                        businessProfileVO.setTrackingNumber("");
                    }
                    break;

                /*case domainsowned:
                    if (!ESAPI.validator().isValidInput("domainsowned", businessProfileVO.getDomainsOwned(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("domainsowned", new ValidationException("domainsowned", "Invalid domainsowned:::" + businessProfileVO.getDomainsOwned(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DOMAINSOWNED);
                        validationErrorList.addError("domainsowned", new PZValidationException("domainsowned",ErrorMessages.INVALID_DOMAINSOWNED + ":::" + businessProfileVO.getDomainsOwned(),"3", errorCodeVO));
                        businessProfileVO.setDomainsOwned("");
                    }
                    break;*/

                case domainsowned:
                    if (!ESAPI.validator().isValidInput("domainsowned", businessProfileVO.getDomainsOwned(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DOMAINSOWNED);
                        validationErrorList.addError("domainsowned", new PZValidationException("domainsowned",ErrorMessages.INVALID_DOMAINSOWNED + ":::" + businessProfileVO.getDomainsOwned(),"3", errorCodeVO));
                        businessProfileVO.setDomainsOwned("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getDomainsOwned()))
                    {
                        if ("N".equals(businessProfileVO.getDomainsOwned()))
                        {
                            condisdomainsowned = true;
                        }
                        else
                        {
                            condisdomainsowned = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.domainsowned_no);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.domainsowned_no,condisdomainsowned);
                    }
                    break;

                case domainsowned_no:
                    if (!ESAPI.validator().isValidInput("domainsowned_no", businessProfileVO.getDomainsOwned_no(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DOMAINSOWNED_NO);
                        validationErrorList.addError("domainsowned_no", new PZValidationException("domainsowned_no",ErrorMessages.INVALID_DOMAINSOWNED_NO + ":::" + businessProfileVO.getDomainsOwned_no(),"3", errorCodeVO));
                        businessProfileVO.setDomainsOwned_no("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getDomainsOwned_no()) && (!functions.isValueNull(businessProfileVO.getDomainsOwned()) || "N".equals(businessProfileVO.getDomainsOwned())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DOMAINSOWNED_SELECTION);
                        validationErrorList.addError("domainsowned_no", new PZValidationException("domainsowned_no", ErrorMessages.INVALID_DOMAINSOWNED_SELECTION + ":::" + businessProfileVO.getDomainsOwned_no(), "3", errorCodeVO));
                        businessProfileVO.setDomainsOwned_no("");
                    }
                    break;

                case transaction_currency:
                    if (!ESAPI.validator().isValidInput("transaction_currency", businessProfileVO.getTransaction_currency(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("transaction_currency", new ValidationException("transaction_currency", "Invalid transaction_currency:::" + businessProfileVO.getTransaction_currency(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_TRANSACTION_CURRENCY);
                        validationErrorList.addError("transaction_currency", new PZValidationException("transaction_currency",ErrorMessages.INVALID_TRANSACTION_CURRENCY + ":::" + businessProfileVO.getTransaction_currency(),"3", errorCodeVO));

                        businessProfileVO.setTransaction_currency("");
                    }
                    break;

                case threeD_secure_compulsory:
                    if (!ESAPI.validator().isValidInput("threeD_secure_compulsory", businessProfileVO.getThreeD_secure_compulsory(), "isYN", 2, isOptional))//isOptional to isOptional
                    {
                        //validationErrorList.addError("threeD_secure_compulsory", new ValidationException("threeD_secure_compulsory", "Invalid threeD_secure_compulsory:::" + businessProfileVO.getThreeD_secure_compulsory(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_THREED_SECURE_COMPULSORY);
                        validationErrorList.addError("threeD_secure_compulsory", new PZValidationException("threeD_secure_compulsory",ErrorMessages.INVALID_THREED_SECURE_COMPULSORY + ":::" + businessProfileVO.getThreeD_secure_compulsory(),"3", errorCodeVO));
                        businessProfileVO.setThreeD_secure_compulsory("");
                    }
                    break;

                case cardholder_asked:
                    if (!ESAPI.validator().isValidInput("cardholder_asked", businessProfileVO.getCardholder_asked(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("cardholder_asked", new ValidationException("cardholder_asked", "Invalid cardholder_asked:::" + businessProfileVO.getCardholder_asked(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CARDHOLDER_ASKED);
                        validationErrorList.addError("cardholder_asked", new PZValidationException("cardholder_asked",ErrorMessages.INVALID_CARDHOLDER_ASKED + ":::" + businessProfileVO.getCardholder_asked(),"3", errorCodeVO));
                        businessProfileVO.setCardholder_asked("");
                    }
                    break;

                case dynamic_descriptors:
                    if (!ESAPI.validator().isValidInput("dynamic_descriptors", businessProfileVO.getDynamic_descriptors(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("dynamic_descriptors", new ValidationException("dynamic_descriptors", "Invalid dynamic_descriptors:::" + businessProfileVO.getDynamic_descriptors(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DYNAMIC_DESCRIPTORS);
                        validationErrorList.addError("dynamic_descriptors", new PZValidationException("dynamic_descriptors",ErrorMessages.INVALID_DYNAMIC_DESCRIPTORS + ":::" + businessProfileVO.getDynamic_descriptors(),"3", errorCodeVO));
                        businessProfileVO.setDynamic_descriptors("");
                    }
                    break;

                case shopping_cart:
                    if (!ESAPI.validator().isValidInput("shopping_cart", businessProfileVO.getShopping_cart(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("shopping_cart", new ValidationException("shopping_cart", "Invalid shopping_cart:::" + businessProfileVO.getShopping_cart(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SHOPPING_CART);
                        validationErrorList.addError("shopping_cart", new PZValidationException("shopping_cart",ErrorMessages.INVALID_SHOPPING_CART + ":::" + businessProfileVO.getShopping_cart(),"3", errorCodeVO));
                        businessProfileVO.setShopping_cart("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getShopping_cart()))
                    {
                        if ("N".equals(businessProfileVO.getShopping_cart()))
                        {
                            condisshopping_cart = true;
                        }
                        else
                        {
                            condisshopping_cart = isOptional;
                        }
                        bankInputNameList.add(BankInputName.shopping_cart_details);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.shopping_cart_details, condisshopping_cart);
                    }
                    break;

                case shopping_cart_details:
                    if (!ESAPI.validator().isValidInput("shopping_cart_details", businessProfileVO.getShopping_cart_details(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("shopping_cart_details", new ValidationException("shopping_cart_details", "Invalid shopping_cart_details:::" + businessProfileVO.getShopping_cart_details(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SHOPPING_CART_DETAILS);
                        validationErrorList.addError("shopping_cart_details", new PZValidationException("shopping_cart_details",ErrorMessages.INVALID_SHOPPING_CART_DETAILS + ":::" + businessProfileVO.getShopping_cart_details(),"3", errorCodeVO));
                        businessProfileVO.setShopping_cart_details("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getShopping_cart_details()) && (!functions.isValueNull(businessProfileVO.getShopping_cart()) || "N".equals(businessProfileVO.getShopping_cart())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SHOPPING_CART_SELECTION);
                        validationErrorList.addError("shopping_cart_details", new PZValidationException("shopping_cart_details",ErrorMessages.INVALID_SHOPPING_CART_SELECTION + ":::" + businessProfileVO.getShopping_cart_details(),"3", errorCodeVO));
                        businessProfileVO.setShopping_cart_details("");
                    }
                    break;

                /*case pricing_policies_website:
                    if (!ESAPI.validator().isValidInput("pricing_policies_website", businessProfileVO.getPricing_policies_website(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("pricing_policies_website", new ValidationException("pricing_policies_website", "Invalid pricing_policies_website:::" + businessProfileVO.getPricing_policies_website(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRICING_POLICIES_WEBSITE);
                        validationErrorList.addError("pricing_policies_website", new PZValidationException("pricing_policies_website",ErrorMessages.INVALID_PRICING_POLICIES_WEBSITE + ":::" + businessProfileVO.getPricing_policies_website(),"3", errorCodeVO));
                        businessProfileVO.setPricing_policies_website("");
                    }
                    break;*/

                case pricing_policies_website:
                    boolean condispricingpolicies = true;
                    if (!ESAPI.validator().isValidInput("pricing_policies_website", businessProfileVO.getPricing_policies_website(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRICING_POLICIES_WEBSITE);
                        validationErrorList.addError("pricing_policies_website", new PZValidationException("pricing_policies_website",ErrorMessages.INVALID_PRICING_POLICIES_WEBSITE + ":::" + businessProfileVO.getPricing_policies_website(),"3", errorCodeVO));
                        businessProfileVO.setPricing_policies_website("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getPricing_policies_website()))
                    {
                        if ("N".equals(businessProfileVO.getPricing_policies_website()))
                        {
                            condispricingpolicies = true;
                        }
                        else
                        {
                            condispricingpolicies = isOptional;
                        }
                        bankInputNameList.add(BankInputName.pricing_policies_website_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.pricing_policies_website_yes, condispricingpolicies);
                    }
                    break;

                case pricing_policies_website_yes:
                    if (!ESAPI.validator().isValidInput("pricing_policies_website_yes", businessProfileVO.getPricing_policies_website_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRICING_POLICIES_WEBSITE_YES);
                        validationErrorList.addError("pricing_policies_website_yes", new PZValidationException("pricing_policies_website_yes",ErrorMessages.INVALID_PRICING_POLICIES_WEBSITE_YES + ":::" + businessProfileVO.getPricing_policies_website_yes(),"3", errorCodeVO));
                        businessProfileVO.setPricing_policies_website_yes("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getPricing_policies_website_yes()) && (!functions.isValueNull(businessProfileVO.getPricing_policies_website()) || "N".equals(businessProfileVO.getPricing_policies_website())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRICING_POLICIES_WEBSITE_SELECTION);
                        validationErrorList.addError("pricing_policies_website_yes", new PZValidationException("pricing_policies_website_yes",ErrorMessages.INVALID_PRICING_POLICIES_WEBSITE_SELECTION + ":::" + businessProfileVO.getPricing_policies_website_yes(),"3", errorCodeVO));
                        businessProfileVO.setPricing_policies_website_yes("");
                    }
                    break;

                case fulfillment_timeframe:
                    if (!ESAPI.validator().isValidInput("fulfillment_timeframe", businessProfileVO.getFulfillment_timeframe(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("fulfillment_timeframe", new ValidationException("fulfillment_timeframe", "Invalid fulfillment_timeframe:::" + businessProfileVO.getFulfillment_timeframe(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FULFILLMENT_TIMEFRAME);
                        validationErrorList.addError("fulfillment_timeframe", new PZValidationException("fulfillment_timeframe",ErrorMessages.INVALID_FULFILLMENT_TIMEFRAME + ":::" + businessProfileVO.getFulfillment_timeframe(),"3", errorCodeVO));
                        businessProfileVO.setFulfillment_timeframe("");
                    }
                    break;

                case goods_policy:
                    if (!ESAPI.validator().isValidInput("goods_policy", businessProfileVO.getGoods_policy(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("goods_policy", new ValidationException("goods_policy", "Invalid goods_policy:::" + businessProfileVO.getGoods_policy(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_GOODS_POLICY);
                        validationErrorList.addError("goods_policy", new PZValidationException("goods_policy",ErrorMessages.INVALID_GOODS_POLICY + ":::" + businessProfileVO.getGoods_policy(),"3", errorCodeVO));
                        businessProfileVO.setGoods_policy("");
                    }
                    break;

                case countries_blocked:
                    if (!ESAPI.validator().isValidInput("countries_blocked", businessProfileVO.getCountries_blocked(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("countries_blocked", new ValidationException("countries_blocked", "Invalid countries_blocked:::" + businessProfileVO.getCountries_blocked(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COUNTRIES_BLOCKED);
                        validationErrorList.addError("countries_blocked", new PZValidationException("countries_blocked",ErrorMessages.INVALID_COUNTRIES_BLOCKED + ":::" + businessProfileVO.getCountries_blocked(),"3", errorCodeVO));
                        businessProfileVO.setCountries_blocked("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getCountries_blocked()))
                    {
                        if ("N".equals(businessProfileVO.getCountries_blocked()))
                        {
                            condiscountriesblocked = true;
                        }
                        else
                        {
                            condiscountriesblocked = isOptional;
                        }
                        bankInputNameList.add(BankInputName.countries_blocked_details);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.countries_blocked_details,condiscountriesblocked);
                    }
                    break;

                case countries_blocked_details:
                    if (!ESAPI.validator().isValidInput("countries_blocked_details", businessProfileVO.getCountries_blocked_details(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("countries_blocked_details", new ValidationException("countries_blocked_details", "Invalid countries_blocked_details:::" + businessProfileVO.getCountries_blocked_details(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COUNTRIES_BLOCKED_DETAILS);
                        validationErrorList.addError("countries_blocked_details", new PZValidationException("countries_blocked_details",ErrorMessages.INVALID_COUNTRIES_BLOCKED_DETAILS + ":::" + businessProfileVO.getCountries_blocked_details(),"3", errorCodeVO));
                        businessProfileVO.setCountries_blocked_details("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getCountries_blocked_details()) && (!functions.isValueNull(businessProfileVO.getCountries_blocked()) || "N".equals(businessProfileVO.getCountries_blocked())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COUNTRIES_BLOCKED_SELECTION);
                        validationErrorList.addError("countries_blocked_details", new PZValidationException("countries_blocked_details",ErrorMessages.INVALID_COUNTRIES_BLOCKED_SELECTION + ":::" + businessProfileVO.getCountries_blocked_details(),"3", errorCodeVO));
                        businessProfileVO.setCountries_blocked_details("");
                    }
                    break;

                case inhouselocation:
                    if (!ESAPI.validator().isValidInput("inhouselocation", businessProfileVO.getInHouseLocation(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("inhouselocation", new ValidationException("inhouselocation", "Invalid inhouselocation:::" + businessProfileVO.getInHouseLocation(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_INHOUSELOCATION);
                        validationErrorList.addError("inhouselocation", new PZValidationException("inhouselocation",ErrorMessages.INVALID_INHOUSELOCATION + ":::" + businessProfileVO.getInHouseLocation(),"3", errorCodeVO));
                        businessProfileVO.setInHouseLocation("");
                    }
                    break;

                case contactperson:
                    if (!ESAPI.validator().isValidInput("contactperson", businessProfileVO.getContactPerson(), "StrictString", 50, isOptional))
                    {
                        //validationErrorList.addError("contactperson", new ValidationException("contactperson", "Invalid contactperson:::" + businessProfileVO.getContactPerson(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CONTACTPERSON);
                        validationErrorList.addError("contactperson", new PZValidationException("contactperson",ErrorMessages.INVALID_CONTACTPERSON + ":::" + businessProfileVO.getContactPerson(),"3", errorCodeVO));
                        businessProfileVO.setContactPerson("");
                    }
                    break;

                case shipping_contactemail:
                    if (!ESAPI.validator().isValidInput("shipping_contactemail", businessProfileVO.getShippingContactemail(), "Email", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CONTACTEMAIL);
                        validationErrorList.addError("shipping_contactemail", new PZValidationException("shipping_contactemail",ErrorMessages.INVALID_CONTACTEMAIL + ":::" + businessProfileVO.getShippingContactemail(),"3", errorCodeVO));
                        businessProfileVO.setShippingContactemail("");
                    }
                    break;

                case otherlocation:
                    if (!ESAPI.validator().isValidInput("otherlocation", businessProfileVO.getOtherLocation(), "alphanum", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_OTHERLOCATION);
                        validationErrorList.addError("otherlocation", new PZValidationException("otherlocation",ErrorMessages.INVALID_OTHERLOCATION + ":::" + businessProfileVO.getOtherLocation(),"3", errorCodeVO));
                        businessProfileVO.setOtherLocation("");
                    }
                    break;

                case mainsuppliers:
                    if (!ESAPI.validator().isValidInput("mainsuppliers", businessProfileVO.getMainSuppliers(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("mainsuppliers", new ValidationException("mainsuppliers", "Invalid mainsuppliers:::" + businessProfileVO.getMainSuppliers(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MAINSUPPLIERS);
                        validationErrorList.addError("mainsuppliers", new PZValidationException("mainsuppliers",ErrorMessages.INVALID_MAINSUPPLIERS + ":::" + businessProfileVO.getMainSuppliers(),"3", errorCodeVO));
                        businessProfileVO.setMainSuppliers("");
                    }
                    break;

                case shipmentassured:
                    if (!ESAPI.validator().isValidInput("shipmentassured", businessProfileVO.getShipmentAssured(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("shipmentassured", new ValidationException("shipmentassured", "Invalid shipmentassured:::" + businessProfileVO.getShipmentAssured(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SHIPMENTASSURED);
                        validationErrorList.addError("shipmentassured", new PZValidationException("shipmentassured",ErrorMessages.INVALID_SHIPMENTASSURED + ":::" + businessProfileVO.getShipmentAssured(),"3", errorCodeVO));
                        businessProfileVO.setShipmentAssured("");
                    }
                    break;

                case copyright:
                    if (!ESAPI.validator().isValidInput("copyright", businessProfileVO.getCopyright(), "isYN", 50, isOptional))
                    {
                        //validationErrorList.addError("copyright", new ValidationException("copyright", "Invalid copyright:::" + businessProfileVO.getCopyright(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COPYRIGHT);
                        validationErrorList.addError("copyright", new PZValidationException("copyright",ErrorMessages.INVALID_COPYRIGHT + ":::" + businessProfileVO.getCopyright(),"3", errorCodeVO));
                        businessProfileVO.setCopyright("");
                    }
                    break;

                case sourcecontent:
                    if (!ESAPI.validator().isValidInput("sourcecontent", businessProfileVO.getSourceContent(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("sourcecontent", new ValidationException("sourcecontent", "Invalid sourcecontent:::" + businessProfileVO.getSourceContent(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SOURCECONTENT);
                        validationErrorList.addError("sourcecontent", new PZValidationException("sourcecontent",ErrorMessages.INVALID_SOURCECONTENT + ":::" + businessProfileVO.getSourceContent(),"3", errorCodeVO));
                        businessProfileVO.setSourceContent("");
                    }
                    break;

                case kyc_processes:
                    if (!ESAPI.validator().isValidInput("kyc_processes", businessProfileVO.getKyc_processes(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("kyc_processes", new ValidationException("kyc_processes", "Invalid kyc_processes:::" + businessProfileVO.getKyc_processes(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_KYC_PROCESSES);
                        validationErrorList.addError("kyc_processes", new PZValidationException("kyc_processes",ErrorMessages.INVALID_KYC_PROCESSES + ":::" + businessProfileVO.getKyc_processes(),"3", errorCodeVO));
                        businessProfileVO.setKyc_processes("");
                    }
                    break;

                case securitypolicy:
                    if (!ESAPI.validator().isValidInput("securitypolicy", businessProfileVO.getSecuritypolicy(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("securitypolicy", new ValidationException("securitypolicy", "Invalid Securitypolicy:::" + businessProfileVO.getSecuritypolicy(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SECURITYPOLICY);
                        validationErrorList.addError("securitypolicy", new PZValidationException("securitypolicy",ErrorMessages.INVALID_SECURITYPOLICY + ":::" + businessProfileVO.getSecuritypolicy(),"3", errorCodeVO));
                        businessProfileVO.setSecuritypolicy("");
                    }
                    break;

                case confidentialitypolicy:
                    if (!ESAPI.validator().isValidInput("confidentialitypolicy", businessProfileVO.getConfidentialitypolicy(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("confidentialitypolicy", new ValidationException("confidentialitypolicy", "Invalid confidentialitypolicy:::" + businessProfileVO.getConfidentialitypolicy(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CONFIDENTIALITYPOLICY);
                        validationErrorList.addError("confidentialitypolicy", new PZValidationException("confidentialitypolicy", ErrorMessages.INVALID_CONFIDENTIALITYPOLICY + ":::" + businessProfileVO.getConfidentialitypolicy(),"3", errorCodeVO));
                        businessProfileVO.setConfidentialitypolicy("");
                    }
                    break;

                case applicablejurisdictions:
                    if (!ESAPI.validator().isValidInput("applicablejurisdictions", businessProfileVO.getApplicablejurisdictions(), "isYN", 10, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("applicablejurisdictions", new ValidationException("applicablejurisdictions", "Invalid applicablejurisdictions:::" + businessProfileVO.getApplicablejurisdictions(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_APPLICABLEJURISDICTIONS);
                        validationErrorList.addError("applicablejurisdictions", new PZValidationException("applicablejurisdictions",ErrorMessages.INVALID_APPLICABLEJURISDICTION + ":::" + businessProfileVO.getApplicablejurisdictions(),"3", errorCodeVO));
                        businessProfileVO.setApplicablejurisdictions("");
                    }
                    break;

                case privacy_anonymity_dataprotection:
                    if (!ESAPI.validator().isValidInput("privacy_anonymity_dataprotection", businessProfileVO.getPrivacy_anonymity_dataprotection(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("privacy_anonymity_dataprotection", new ValidationException("privacy_anonymity_dataprotection", "Invalid privacy_anonymity_dataprotection:::" + businessProfileVO.getPrivacy_anonymity_dataprotection(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRIVACY_ANONMITY_DATAPROTECTION);
                        validationErrorList.addError("privacy_anonymity_dataprotection", new PZValidationException("privacy_anonymity_dataprotection",ErrorMessages.INVALID_PRIVACY_ANONMITY_DATAPROTECTION + ":::" + businessProfileVO.getPrivacy_anonymity_dataprotection(),"3", errorCodeVO));
                        businessProfileVO.setPrivacy_anonymity_dataprotection("");
                    }
                    break;

                case sslsecured:
                    if (!ESAPI.validator().isValidInput("sslsecured", businessProfileVO.getSslSecured(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("sslsecured", new ValidationException("sslsecured", "Invalid sslsecured:::" + businessProfileVO.getSslSecured(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SSLSECURED);
                        validationErrorList.addError("sslsecured", new PZValidationException("sslsecured",ErrorMessages.INVALID_SSLSECURED + ":::" + businessProfileVO.getSslSecured(),"3", errorCodeVO));
                        businessProfileVO.setSslSecured("");
                    }
                    break;

                case product_requires:
                    if (!ESAPI.validator().isValidInput("product_requires", businessProfileVO.getProduct_requires(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("product_requires", new ValidationException("product_requires", "Invalid product_requires:::" + businessProfileVO.getProduct_requires(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRODUCT_REQUIRES);
                        validationErrorList.addError("product_requires", new PZValidationException("product_requires",ErrorMessages.INVALID_PRODUCT_REQUIRES + ":::" + businessProfileVO.getProduct_requires(),"3", errorCodeVO));
                        businessProfileVO.setProduct_requires("");
                    }
                    break;

                case affiliate_programs:
                    if (!ESAPI.validator().isValidInput("affiliate_programs", businessProfileVO.getAffiliate_programs(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("affiliate_programs", new ValidationException("affiliate_programs", "Invalid affiliate_programs:::" + businessProfileVO.getAffiliate_programs(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AFFILIATE_PROGRAMS);
                        validationErrorList.addError("affiliate_programs", new PZValidationException("affiliate_programs",ErrorMessages.INVALID_AFFILIATE_PROGRAMS + ":::" + businessProfileVO.getAffiliate_programs(),"3", errorCodeVO));
                        businessProfileVO.setAffiliate_programs("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getAffiliate_programs()))
                    {
                        if ("N".equals(businessProfileVO.getAffiliate_programs()))
                        {
                            condisaffiliateprograms = true;
                        }
                        else
                        {
                            condisaffiliateprograms = isOptional;
                        }
                        bankInputNameList.add(BankInputName.affiliate_programs_details);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.affiliate_programs_details,condisaffiliateprograms);
                    }
                    break;

                case affiliate_programs_details:
                    if (!ESAPI.validator().isValidInput("affiliate_programs_details", businessProfileVO.getAffiliate_programs_details(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("affiliate_programs_details", new ValidationException("affiliate_programs_details", "Invalid affiliate_programs_details:::" + businessProfileVO.getAffiliate_programs_details(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AFFILIATE_PROGRAMS_DETAILS);
                        validationErrorList.addError("affiliate_programs_details", new PZValidationException("affiliate_programs_details",ErrorMessages.INVALID_AFFILIATE_PROGRAMS_DETAILS + ":::" + businessProfileVO.getAffiliate_programs_details(),"3", errorCodeVO));
                        businessProfileVO.setAffiliate_programs_details("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getAffiliate_programs_details()) && (!functions.isValueNull(businessProfileVO.getAffiliate_programs()) || "N".equals(businessProfileVO.getAffiliate_programs())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AFFILIATE_PROGRAMS_SELECTION);
                        validationErrorList.addError("affiliate_programs_details", new PZValidationException("affiliate_programs_details",ErrorMessages.INVALID_AFFILIATE_PROGRAMS_SELECTION + ":::" + businessProfileVO.getAffiliate_programs_details(),"3", errorCodeVO));
                        businessProfileVO.setAffiliate_programs_details("");
                    }
                    break;
                /*case listfraudtools:
                    if (!ESAPI.validator().isValidInput("listfraudtools", businessProfileVO.getListfraudtools(), "alphanum", 50, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("listfraudtools", new ValidationException("listfraudtools", "Invalid listfraudtools:::" + businessProfileVO.getListfraudtools(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LISTFRAUDTOOLS);
                        validationErrorList.addError("listfraudtools", new PZValidationException("listfraudtools",ErrorMessages.INVALID_LISTFRAUDTOOLS + ":::" + businessProfileVO.getListfraudtools(),"3", errorCodeVO));
                        businessProfileVO.setListfraudtools("");
                    }
                    break;*/
                case listfraudtools:
                    if (!ESAPI.validator().isValidInput("listfraudtools", businessProfileVO.getListfraudtools(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LISTFRAUDTOOLS);
                        validationErrorList.addError("listfraudtools", new PZValidationException("listfraudtools",ErrorMessages.INVALID_LISTFRAUDTOOLS + ":::" + businessProfileVO.getListfraudtools(),"3", errorCodeVO));
                        businessProfileVO.setListfraudtools("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getListfraudtools()))
                    {
                        if ("N".equals(businessProfileVO.getListfraudtools()))
                        {
                            condislistfraudtools = true;
                        }
                        else
                        {
                            condislistfraudtools = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.listfraudtools_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.listfraudtools_yes, condislistfraudtools);
                    }
                    break;
                case listfraudtools_yes:
                    if (!ESAPI.validator().isValidInput("listfraudtools_yes", businessProfileVO.getListfraudtools_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LISTFRAUDTOOLS_YES);
                        validationErrorList.addError("listfraudtools_yes", new PZValidationException("listfraudtools_yes",ErrorMessages.INVALID_LISTFRAUDTOOLS_YES + ":::" + businessProfileVO.getListfraudtools_yes(),"3", errorCodeVO));
                        businessProfileVO.setListfraudtools_yes("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getListfraudtools_yes()) && (!functions.isValueNull(businessProfileVO.getListfraudtools()) || "N".equals(businessProfileVO.getListfraudtools())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LISTFRAUDTOOLS_SELECTION);
                        validationErrorList.addError("listfraudtools_yes", new PZValidationException("listfraudtools_yes", ErrorMessages.INVALID_LISTFRAUDTOOLS_SELECTION + ":::" + businessProfileVO.getListfraudtools_yes(), "3", errorCodeVO));
                        businessProfileVO.setListfraudtools_yes("");
                    }
                    break;

                case App_Services:
                    if (!ESAPI.validator().isValidInput("App_Services", businessProfileVO.getApp_Services(), "isYN", 10, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("App_Services", new ValidationException("App_Services", "Invalid App_Services:::" + businessProfileVO.getApp_Services(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_APP_SERVICES);
                        validationErrorList.addError("App_Services", new PZValidationException("App_Services",ErrorMessages.INVALID_APP_SERVICES + ":::" + businessProfileVO.getApp_Services(),"3", errorCodeVO));
                        businessProfileVO.setApp_Services("");
                    }
                    break;
                case agency_employed:
                    if (!ESAPI.validator().isValidInput("agency_employed", businessProfileVO.getAgency_employed(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AGENCY_EMPLOYED);
                        validationErrorList.addError("agency_employed", new PZValidationException("agency_employed",ErrorMessages.INVALID_AGENCY_EMPLOYES + ":::" + businessProfileVO.getAgency_employed(),"3", errorCodeVO));
                        businessProfileVO.setAgency_employed("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getAgency_employed()))
                    {
                        if ("N".equals(businessProfileVO.getAgency_employed()))
                        {
                            condisagencyemployed = true;
                        }
                        else
                        {
                            condisagencyemployed = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.agency_employed_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.agency_employed_yes, condisagencyemployed);
                    }
                    break;
                case agency_employed_yes:
                    if (!ESAPI.validator().isValidInput("agency_employed_yes", businessProfileVO.getAgency_employed_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AGENCY_EMPLOYED_YES);
                        validationErrorList.addError("agency_employed_yes", new PZValidationException("agency_employed_yes",ErrorMessages.INVALID_AGENCY_EMPLOYES_YES + ":::" + businessProfileVO.getAgency_employed_yes(),"3", errorCodeVO));
                        businessProfileVO.setAgency_employed_yes("");
                    }
                    /*else if (functions.isValueNull(businessProfileVO.getAgency_employed_yes()) && "Y".equals(businessProfileVO.getAgency_employed()))
                    {
                        logger.debug("agency_employed_yes---inside else--->");
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AGENCY_EMPLOYED_SELECTION);
                        validationErrorList.addError("agency_employed_yes", new PZValidationException("agency_employed_yes", ErrorMessages.INVALID_AGENCY_EMPLOYES_SELECTION + ":::" + businessProfileVO.getAgency_employed_yes(), "3", errorCodeVO));
                        businessProfileVO.setAgency_employed_yes("");
                    }*/
                    break;

                case customer_support:
                    if (!ESAPI.validator().isValidInput("customer_support", businessProfileVO.getCustomer_support(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("customer_support", new ValidationException("customer_support", "Invalid customer_support:::" + businessProfileVO.getCustomer_support(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CUSTOMER_SUPPORT);
                        validationErrorList.addError("customer_support", new PZValidationException("customer_support",ErrorMessages.INVALID_CUSTOMER_SUPPORT + ":::" + businessProfileVO.getCustomer_support(),"3", errorCodeVO));
                        businessProfileVO.setCustomer_support("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getCustomer_support()))
                    {
                        if ("N".equals(businessProfileVO.getCustomer_support()))
                        {
                            condCustomerSupport = true;
                        }
                        else
                        {
                            condCustomerSupport = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.customersupport_email);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.customersupport_email, condCustomerSupport  || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.customersupport_email))?false:true));

                        bankInputNameList.add(BankInputName.custsupportwork_hours);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.custsupportwork_hours, condCustomerSupport  || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.custsupportwork_hours))?false:true));

                        bankInputNameList.add(BankInputName.technical_contact);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.technical_contact, condCustomerSupport  || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.technical_contact))?false:true));

                        bankInputNameList.add(BankInputName.timeframe);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.timeframe, condCustomerSupport  || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.timeframe))?false:true));
                    }
                    break;

                case customersupport_email:
                    if (!ESAPI.validator().isValidInput("customersupport_email", businessProfileVO.getCustomersupport_email(), "Email", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CUSTOMERSUPPORT_EMAIL);
                        validationErrorList.addError("customersupport_email", new PZValidationException("customersupport_email",ErrorMessages.INVALID_CUSTOMERSUPPORT_EMAIL + ":::" + businessProfileVO.getCustomersupport_email(),"3", errorCodeVO));
                        businessProfileVO.setCustomersupport_email("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getCustomersupport_email()) && (!functions.isValueNull(businessProfileVO.getCustomer_support()) || "N".equals(businessProfileVO.getCustomer_support())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CUSTOMER_SUPPORT_SELECTION_EMAIL);
                        validationErrorList.addError("customersupport_email", new PZValidationException("customersupport_email",ErrorMessages.INVALID_CUSTOMER_SUPPORT_SELECTION_EMAIL + ":::" + businessProfileVO.getCustomersupport_email(),"3", errorCodeVO));
                        businessProfileVO.setCustomersupport_email("");
                    }
                    break;

                case custsupportwork_hours:
                    if (!ESAPI.validator().isValidInput("custsupportwork_hours", businessProfileVO.getCustsupportwork_hours(), "alphanum", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("custsupportwork_hours", new ValidationException("custsupportwork_hours", "Invalid custsupportwork_hours:::" + businessProfileVO.getCustsupportwork_hours(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CUSTSUPPORTWORK_HOURS);
                        validationErrorList.addError("custsupportwork_hours", new PZValidationException("custsupportwork_hours",ErrorMessages.INVALID_CUSTSUPPORTWORK_HOURS + ":::" + businessProfileVO.getCustsupportwork_hours(),"3", errorCodeVO));
                        businessProfileVO.setCustsupportwork_hours("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getCustsupportwork_hours()) && (!functions.isValueNull(businessProfileVO.getCustomer_support()) || "N".equals(businessProfileVO.getCustomer_support())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CUSTOMER_SUPPORT_SELECTION_WORK_HOURS);
                        validationErrorList.addError("custsupportwork_hours", new PZValidationException("custsupportwork_hours",ErrorMessages.INVALID_CUSTOMER_SUPPORT_SELECTION_WORK_HOURS + ":::" + businessProfileVO.getCustsupportwork_hours(),"3", errorCodeVO));
                        businessProfileVO.setCustsupportwork_hours("");
                    }
                    break;

                case technical_contact:
                    if (!ESAPI.validator().isValidInput("technical_contact", businessProfileVO.getTechnical_contact(), "OnlyNumber", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("technical_contact", new ValidationException("technical_contact", "Invalid technical_contact:::" + businessProfileVO.getTechnical_contact(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_TECHNICAL_CONTACT);
                        validationErrorList.addError("technical_contact", new PZValidationException("technical_contact",ErrorMessages.INVALID_TECHNICAL_CONTACT + ":::" + businessProfileVO.getTechnical_contact(),"3", errorCodeVO));
                        businessProfileVO.setTechnical_contact("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getTechnical_contact()) && (!functions.isValueNull(businessProfileVO.getCustomer_support()) || "N".equals(businessProfileVO.getCustomer_support())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CUSTOMER_SUPPORT_SELECTION_TECH_CONTACT);
                        validationErrorList.addError("technical_contact", new PZValidationException("technical_contact",ErrorMessages.INVALID_CUSTOMER_SUPPORT_SELECTION_TECH_CONTACT + ":::" + businessProfileVO.getTechnical_contact(),"3", errorCodeVO));
                        businessProfileVO.setTechnical_contact("");
                    }
                    break;

                //ADD new
                case timeframe:
                    if (!ESAPI.validator().isValidInput("timeframe", businessProfileVO.getTimeframe(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("timeframe", new ValidationException("timeframe", "Invalid timeframe:::" + businessProfileVO.getTimeframe(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_TIMEFRAME);
                        validationErrorList.addError("timeframe", new PZValidationException("timeframe",ErrorMessages.INVALID_TIMEFRAME + ":::" + businessProfileVO.getTimeframe(),"3", errorCodeVO));
                        businessProfileVO.setTimeframe("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getTechnical_contact()) && (!functions.isValueNull(businessProfileVO.getCustomer_support()) || "N".equals(businessProfileVO.getCustomer_support())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CUSTOMER_SUPPORT_SELECTION_TIMEFRAME);
                        validationErrorList.addError("timeframe", new PZValidationException("timeframe",ErrorMessages.INVALID_CUSTOMER_SUPPORT_SELECTION_TIEFRAME + ":::" + businessProfileVO.getTimeframe(),"3", errorCodeVO));
                        businessProfileVO.setTimeframe("");
                    }
                    break;

                case livechat:
                    if (!ESAPI.validator().isValidInput("livechat", businessProfileVO.getLivechat(), "isYN", 2, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("livechat", new ValidationException("livechat", "Invalid livechat:::" + businessProfileVO.getLivechat(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LIVECHAT);
                        validationErrorList.addError("livechat", new PZValidationException("livechat",ErrorMessages.INVALID_LIVECHAT  + ":::" + businessProfileVO.getLivechat(),"3", errorCodeVO));
                        businessProfileVO.setLivechat("");
                    }
                    break;

                /*case MCC_Ctegory:
                    if (!ESAPI.validator().isValidInput("MCC_Ctegory", businessProfileVO.getMCC_Ctegory(), "isYN", 2, isOptional))  //isOptional to isOptional
                    {
                        //validationErrorList.addError("MCC_Ctegory", new ValidationException("MCC_Ctegory", "Invalid MCC_Ctegory:::" + businessProfileVO.getMCC_Ctegory(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MCC_CATEGORY);
                        validationErrorList.addError("MCC_Ctegory", new PZValidationException("MCC_Ctegory",ErrorMessages.INVALID_MCC_CATEGORY  + ":::" + businessProfileVO.getMCC_Ctegory(),"3", errorCodeVO));
                        businessProfileVO.setMCC_Ctegory("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getMCC_Ctegory()))
                    {
                        if ("N".equals(businessProfileVO.getMCC_Ctegory()))
                        {
                            condMerchantCode = true;
                        }
                        else
                        {
                            condMerchantCode = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.merchantcode);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.merchantcode, condMerchantCode || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.merchantcode))?false:true));
                    }
                    break;*/

                case merchantcode:
                    if (!ESAPI.validator().isValidInput("merchantcode", businessProfileVO.getMerchantCode(), "AppGateway", 100, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTCODE);
                        validationErrorList.addError("merchantcode", new PZValidationException("merchantcode",ErrorMessages.INVALID_MERCHANTCODE  + ":::" + businessProfileVO.getMerchantCode(),"3", errorCodeVO));
                        businessProfileVO.setMerchantCode("");
                    }
                    break;

                case customers_identification:
                    if (!ESAPI.validator().isValidInput("customers_identification", businessProfileVO.getCustomers_identification(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CUSTOMER_IDENTIFICATION);
                        validationErrorList.addError("customers_identification", new PZValidationException("customers_identification",ErrorMessages.INVALID_CUSTOMER_IDENTIFICATION + ":::" + businessProfileVO.getCustomers_identification(),"3", errorCodeVO));
                        businessProfileVO.setCustomers_identification("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getCustomers_identification()))
                    {
                        if ("N".equals(businessProfileVO.getCustomers_identification()))
                        {
                            condiscustomeridentification = true;
                        }
                        else
                        {
                            condiscustomeridentification = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.customers_identification_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.customers_identification_yes, condiscustomeridentification);
                    }
                    break;

                case customers_identification_yes:
                    if (!ESAPI.validator().isValidInput("customers_identification_yes", businessProfileVO.getCustomers_identification_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CUSTOMER_IDENTIFICATION_YES);
                        validationErrorList.addError("customers_identification_yes", new PZValidationException("customers_identification_yes",ErrorMessages.INVALID_CUSTOMER_IDENTIFICATION_YES + ":::" + businessProfileVO.getCustomers_identification_yes(),"3", errorCodeVO));
                        businessProfileVO.setCustomers_identification_yes("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getCustomers_identification_yes()) && (!functions.isValueNull(businessProfileVO.getCustomers_identification()) || "N".equals(businessProfileVO.getCustomers_identification())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CUSTOMER_IDENTIFICATION_SELECTION);
                        validationErrorList.addError("customers_identification_yes", new PZValidationException("customers_identification_yes", ErrorMessages.INVALID_CUSTOMER_IDENTIFICATION_SELECTION + ":::" + businessProfileVO.getCustomers_identification_yes(), "3", errorCodeVO));
                        businessProfileVO.setCustomers_identification_yes("");
                    }
                    break;
                //Add new
                case directmail:
                    if (!ESAPI.validator().isValidInput("directmail", businessProfileVO.getDirectMail(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("directmail", new ValidationException("directmail", "Invalid directmail:::" + businessProfileVO.getDirectMail(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DIRECTMAIL);
                        validationErrorList.addError("directmail", new PZValidationException("directmail",ErrorMessages.INVALID_DIRECTMAIL  + ":::" + businessProfileVO.getDirectMail(),"3", errorCodeVO));
                        businessProfileVO.setDirectMail("");
                    }
                    break;

                case internet:
                    if (!ESAPI.validator().isValidInput("internet", businessProfileVO.getInternet(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("internet", new ValidationException("internet", "Invalid internet:::" + businessProfileVO.getInternet(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_INTERNET);
                        validationErrorList.addError("internet", new PZValidationException("internet",ErrorMessages.INVALID_INTERNET  + ":::" + businessProfileVO.getInternet(),"3", errorCodeVO));
                        businessProfileVO.setInternet("");
                    }
                    break;

                case Yellowpages:
                    if (!ESAPI.validator().isValidInput("Yellowpages", businessProfileVO.getYellowPages(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("Yellowpages", new ValidationException("Yellowpages", "Invalid Yellowpages:::" + businessProfileVO.getYellowPages(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_YELLOWPAGES);
                        validationErrorList.addError("Yellowpages", new PZValidationException("Yellowpages",ErrorMessages.INVALID_YELLOWPAGES  + ":::" + businessProfileVO.getYellowPages(),"3", errorCodeVO));
                        businessProfileVO.setYellowPages("");
                    }
                    break;

                case radiotv:
                    if (!ESAPI.validator().isValidInput("radiotv", businessProfileVO.getRadioTv(), "isYN", 2, isOptional))

                    {
                        //validationErrorList.addError("radiotv", new ValidationException("radiotv", "Invalid radiotv:::" + businessProfileVO.getRadioTv(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_RADIOTV);
                        validationErrorList.addError("radiotv", new PZValidationException("radiotv",ErrorMessages.INVALID_RADIOTV  + ":::" + businessProfileVO.getRadioTv(),"3", errorCodeVO));
                        businessProfileVO.setRadioTv("");
                    }
                    break;

                case outboundtelemarketing:
                    if (!ESAPI.validator().isValidInput("outboundtelemarketing", businessProfileVO.getOutboundTelemarketing(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("outboundtelemarketing", new ValidationException("outboundtelemarketing", "Invalid outboundtelemarketing:::" + businessProfileVO.getOutboundTelemarketing(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_OUTBOUNDTELEMARKETING);
                        validationErrorList.addError("outboundtelemarketing", new PZValidationException("outboundtelemarketing",ErrorMessages.INVALID_OUTBOUNDTELEMARKETING  + ":::" + businessProfileVO.getOutboundTelemarketing(),"3", errorCodeVO));
                        businessProfileVO.setOutboundTelemarketing("");
                    }
                    break;

                case networking:
                    if (!ESAPI.validator().isValidInput("networking", businessProfileVO.getNetworking(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("networking", new ValidationException("networking", "Invalid networking:::" + businessProfileVO.getNetworking(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NETWORKING);
                        validationErrorList.addError("networking", new PZValidationException("networking",ErrorMessages.INVALID_NETWORKING  + ":::" + businessProfileVO.getNetworking(),"3", errorCodeVO));
                        businessProfileVO.setNetworking("");
                    }
                    break;

                case billing_model:
                    if (!ESAPI.validator().isValidInput("billing_model", businessProfileVO.getBillingModel(), "billing", 50, isOptional))
                    {
                        //validationErrorList.addError("billing_model", new ValidationException("billing_model", "Invalid billing_model:::" + businessProfileVO.getBillingModel(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BILLING_MODEL);
                        validationErrorList.addError("billing_model", new PZValidationException("billing_model", ErrorMessages.INVALID_BILLING_MODEL  + ":::" + businessProfileVO.getBillingModel(),"3", errorCodeVO));
                        businessProfileVO.setBillingModel("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getBillingModel()))
                    {
                        if ("recurring".equals(businessProfileVO.getBillingModel()))
                        {
                            bankInputNameList.add(BankInputName.billing_timeframe);
                            setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.billing_timeframe, isOptional);
                            bankInputNameList.add(BankInputName.recurring_amount);
                            setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.recurring_amount, isOptional);
                        }
                        else if("payment_other".equals(businessProfileVO.getBillingModel()))
                        {
                            bankInputNameList.add(BankInputName.payment_type_yes);
                            setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.payment_type_yes, false);
                        }
                    }
                    break;

                case payment_type_yes:
                    if (!ESAPI.validator().isValidInput("payment_type_yes", businessProfileVO.getPayment_type_yes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true) || functions.hasHTMLTags(businessProfileVO.getPayment_type_yes())) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_TYPE);
                        validationErrorList.addError("payment_type_yes", new PZValidationException("payment_type_yes","Invalid data"  + ":::" + businessProfileVO.getPayment_type_yes(),"3", errorCodeVO));
                        businessProfileVO.setPayment_type_yes("");
                    }
                    break;

                case billing_timeframe:
                    if (!ESAPI.validator().isValidInput("billing_timeframe", businessProfileVO.getBillingTimeFrame(), "timeframe", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("billing_timeframe", new ValidationException("billing_timeframe", "Invalid Billing TimeFrame:::" + businessProfileVO.getBillingTimeFrame(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BILLING_TIMEFRAME);
                        validationErrorList.addError("billing_timeframe", new PZValidationException("billing_timeframe",ErrorMessages.INVALID_BILLING_TIMEFRAME  + ":::" + businessProfileVO.getBillingTimeFrame(),"3", errorCodeVO));
                        businessProfileVO.setBillingTimeFrame("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getBillingTimeFrame()) && (functions.isValueNull(businessProfileVO.getBillingModel()) && !"recurring".equals(businessProfileVO.getBillingModel())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BILLING_MODEL_SELECTION_BILLING_TIMEFRAME);
                        validationErrorList.addError("billing_timeframe", new PZValidationException("billing_timeframe",ErrorMessages.INVALID_BILLING_MODEL_SELECTION_BILLING_TIMEFRAME  + ":::" + businessProfileVO.getBillingTimeFrame(),"3", errorCodeVO));
                        businessProfileVO.setBillingTimeFrame("");
                    }
                    break;

                case recurring_amount:
                    if (!ESAPI.validator().isValidInput("recurring_amount", businessProfileVO.getRecurringAmount(), "Amount", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("recurring_amount", new ValidationException("recurring_amount", "Invalid recurring_amount:::" + businessProfileVO.getRecurringAmount(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_RECURRING_AMOUNT);
                        validationErrorList.addError("recurring_amount", new PZValidationException("recurring_amount",ErrorMessages.INVALID_RECURRING_AMOUNT  + ":::" + businessProfileVO.getRecurringAmount(),"3", errorCodeVO));
                        businessProfileVO.setRecurringAmount("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getRecurringAmount()) && (functions.isValueNull(businessProfileVO.getBillingModel()) && !"recurring".equals(businessProfileVO.getBillingModel())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BILLING_MODEL_SELECTION_RECURRING_AMOUNT);
                        validationErrorList.addError("recurring_amount", new PZValidationException("recurring_amount",ErrorMessages.INVALID_BILLING_MODEL_SELECTION_RECURRING_AMOUNT  + ":::" + businessProfileVO.getBillingTimeFrame(),"3", errorCodeVO));
                        businessProfileVO.setBillingTimeFrame("");
                    }
                    break;

                case coolingoffperiod:
                    if (!ESAPI.validator().isValidInput("coolingoffperiod", businessProfileVO.getCoolingoffperiod(), "alphanum", 50, isOptional)) //isOptional to isOptional
                    {
                        //validationErrorList.addError("coolingoffperiod", new ValidationException("coolingoffperiod", "Invalid coolingoffperiod:::" + businessProfileVO.getCoolingoffperiod(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COOLINGOFFPERIOD);
                        validationErrorList.addError("coolingoffperiod", new PZValidationException("coolingoffperiod",ErrorMessages.INVALID_COOLINGOFFPERIOD  + ":::" + businessProfileVO.getCoolingoffperiod(),"3", errorCodeVO));
                        businessProfileVO.setCoolingoffperiod("");
                    }
                    break;

                case automatic_recurring:
                    if (!ESAPI.validator().isValidInput("automatic_recurring", businessProfileVO.getAutomaticRecurring(), "isYN", 50, isOptional))
                    {
                        //validationErrorList.addError("automatic_recurring", new ValidationException("automatic_recurring", "Invalid automatic_recurring:::" + businessProfileVO.getAutomaticRecurring(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AUTOMATIC_RECURRING);
                        validationErrorList.addError("automatic_recurring", new PZValidationException("automatic_recurring",ErrorMessages.INVALID_AUTOMATIC_RECURRING  + ":::" + businessProfileVO.getAutomaticRecurring(),"3", errorCodeVO));
                        businessProfileVO.setAutomaticRecurring("");
                    }
                    break;

                case multiple_membership:
                    if (!ESAPI.validator().isValidInput("multiple_membership", businessProfileVO.getMultipleMembership(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("multiple_membership", new ValidationException("multiple_membership", "Invalid multiple_membership:::" + businessProfileVO.getMultipleMembership(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MULTPLE_MEMBERSHIP);
                        validationErrorList.addError("multiple_membership", new PZValidationException("multiple_membership",ErrorMessages.INVALID_MULTPLE_MEMBERSHIP  + ":::" + businessProfileVO.getMultipleMembership(),"3", errorCodeVO));
                        businessProfileVO.setMultipleMembership("");
                    }
                    break;

                case free_membership:
                    if (!ESAPI.validator().isValidInput("free_membership", businessProfileVO.getFreeMembership(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("free_membership", new ValidationException("free_membership", "Invalid free_membership:::" + businessProfileVO.getFreeMembership(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FREE_MEMBERSHIP);
                        validationErrorList.addError("free_membership", new PZValidationException("free_membership",ErrorMessages.INVALID_FREE_MEMBERSHIP  + ":::" + businessProfileVO.getFreeMembership(),"3", errorCodeVO));
                        businessProfileVO.setFreeMembership("");
                    }
                    break;

                case creditcard_Required:
                    if (!ESAPI.validator().isValidInput("creditcard_Required", businessProfileVO.getCreditCardRequired(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("creditcard_Required", new ValidationException("creditcard_Required", "Invalid creditcard_Required:::" + businessProfileVO.getCreditCardRequired(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CREDITCARD_REQUIRED);
                        validationErrorList.addError("creditcard_Required", new PZValidationException("creditcard_Required",ErrorMessages.INVALID_CREDITCARD_REQUIRED  + ":::" + businessProfileVO.getCreditCardRequired(),"3", errorCodeVO));
                        businessProfileVO.setCreditCardRequired("");
                    }
                    break;

                case automatically_billed:
                    if (!ESAPI.validator().isValidInput("automatically_billed", businessProfileVO.getAutomaticallyBilled(), "isYN", 50, isOptional))
                    {
                        //validationErrorList.addError("automatically_billed", new ValidationException("automatically_billed", "Invalid automatically_billed:::" + businessProfileVO.getAutomaticallyBilled(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AUTOMATICALLY_BILLED);
                        validationErrorList.addError("automatically_billed", new PZValidationException("automatically_billed",ErrorMessages.INVALID_AUTOMATICALLY_BILLED  + ":::" + businessProfileVO.getAutomaticallyBilled(),"3", errorCodeVO));
                        businessProfileVO.setAutomaticallyBilled("");
                    }
                    break;

                case pre_authorization:
                    if (!ESAPI.validator().isValidInput("pre_authorization", businessProfileVO.getPreAuthorization(), "isYN", 2, isOptional))
                    {
                        //validationErrorList.addError("pre_authorization", new ValidationException("pre_authorization", "Invalid pre_authorization:::" + businessProfileVO.getPreAuthorization(), "3"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRE_AUTHORIZATION);
                        validationErrorList.addError("pre_authorization", new PZValidationException("pre_authorization",ErrorMessages.INVALID_PRE_AUTHORIZATION  + ":::" + businessProfileVO.getPreAuthorization(),"3", errorCodeVO));
                        businessProfileVO.setPreAuthorization("");
                    }
                    break;

                // Wirecard requirement added in Business Profile
                /*case shopsystem_plugin:
                    if (!ESAPI.validator().isValidInput("shopsystem_plugin", businessProfileVO.getShopsystem_plugin(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPSYSTEM_PLUGIN);
                        validationErrorList.addError("shopsystem_plugin", new PZValidationException("shopsystem_plugin",ErrorMessages.INVALID_SHOPSYSTEM_PLUGIN  + ":::" + businessProfileVO.getShopsystem_plugin(),"3", errorCodeVO));
                        businessProfileVO.setShopsystem_plugin("");
                    }
                    break;*/

                case shopsystem_plugin:
                    if (!ESAPI.validator().isValidInput("shopsystem_plugin", businessProfileVO.getShopsystem_plugin(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPSYSTEM_PLUGIN);
                        validationErrorList.addError("shopsystem_plugin", new PZValidationException("shopsystem_plugin",ErrorMessages.INVALID_SHOPSYSTEM_PLUGIN  + ":::" + businessProfileVO.getShopsystem_plugin(), "3",  errorCodeVO));

                        businessProfileVO.setShopsystem_plugin("");
                    }
                    break;

                case direct_debit_sepa:
                    if (!ESAPI.validator().isValidInput("direct_debit_sepa", businessProfileVO.getDirect_debit_sepa(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_DIRECT_DEBIT_SEPA);
                        validationErrorList.addError("direct_debit_sepa", new PZValidationException("direct_debit_sepa",ErrorMessages.INVALID_DIRECT_DEBIT_SEPA  + ":::" + businessProfileVO.getDirect_debit_sepa(),"3", errorCodeVO));
                        businessProfileVO.setDirect_debit_sepa("");
                    }
                    break;

                case alternative_payments:
                    if (!ESAPI.validator().isValidInput("alternative_payments", businessProfileVO.getAlternative_payments(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ALTERNATIVE_PAYMENTS);
                        validationErrorList.addError("alternative_payments", new PZValidationException("alternative_payments",ErrorMessages.INVALID_ALTERNATIVE_PAYMENT  + ":::" + businessProfileVO.getAlternative_payments(),"3", errorCodeVO));
                        businessProfileVO.setAlternative_payments("");
                    }
                    break;

                case risk_management:
                    if (!ESAPI.validator().isValidInput("risk_management", businessProfileVO.getRisk_management(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_RISK_MANAGEMENT);
                        validationErrorList.addError("risk_management", new PZValidationException("risk_management",ErrorMessages.INVALID_RISK_MANAGEMENT  + ":::" + businessProfileVO.getRisk_management(), "3", errorCodeVO));
                        businessProfileVO.setRisk_management("");
                    }
                    break;

                case payment_engine:
                    if (!ESAPI.validator().isValidInput("payment_engine", businessProfileVO.getPayment_engine(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_ENGINE);
                        validationErrorList.addError("payment_engine", new PZValidationException("payment_engine",ErrorMessages.INVALID_PAYMENT_ENGINE  + ":::" + businessProfileVO.getPayment_engine(),"3", errorCodeVO));
                        businessProfileVO.setPayment_engine("");
                    }
                    break;

                case webhost_company_name:
                    if (!ESAPI.validator().isValidInput("webhost_company_name", businessProfileVO.getWebhost_company_name(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_WEBHOST_COMPANY_NAME);
                        validationErrorList.addError("webhost_company_name", new PZValidationException("webhost_company_name",ErrorMessages.INVALID_WEBHOSTING_COMPANY_NAME  + ":::" + businessProfileVO.getWebhost_company_name(),"3", errorCodeVO));
                        businessProfileVO.setWebhost_company_name("");
                    }
                    break;

                case webhost_phone:
                    if (!ESAPI.validator().isValidInput("webhost_phone", businessProfileVO.getWebhost_phone(), "OnlyNumber", 15, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_WEBHOST_PHONE);
                        validationErrorList.addError("webhost_phone", new PZValidationException("webhost_phone",ErrorMessages.INVALID_WEBHOSTING_PHONE  + ":::" + businessProfileVO.getWebhost_phone(),"3", errorCodeVO));
                        businessProfileVO.setWebhost_phone("");
                    }
                    break;

                case webhost_email:
                    if (!ESAPI.validator().isValidInput("webhost_email", businessProfileVO.getWebhost_email(), "Email", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_WEBHOST_EMAIL);
                        validationErrorList.addError("webhost_email", new PZValidationException("webhost_email",ErrorMessages.INVALID_WEBHOSTING_EMAIL  + ":::" + businessProfileVO.getWebhost_email(),"3", errorCodeVO));
                        businessProfileVO.setWebhost_email("");
                    }
                    break;

                case webhost_website:
                    if (!ESAPI.validator().isValidInput("webhost_website", businessProfileVO.getWebhost_website(), "CSEURL", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_WEBHOST_WEBSITE);
                        validationErrorList.addError("webhost_website", new PZValidationException("webhost_website",ErrorMessages.INVALID_WEBHOSTING_WEBSITE  + ":::" + businessProfileVO.getWebhost_website(),"3", errorCodeVO));
                        businessProfileVO.setWebhost_website("");
                    }
                    break;

                case webhost_address:
                    if (!ESAPI.validator().isValidInput("webhost_address", businessProfileVO.getWebhost_address(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_WEBHOST_ADDRESS);
                        validationErrorList.addError("webhost_address", new PZValidationException("webhost_address",ErrorMessages.INVALID_WEBHOSTING_ADDRESS  + ":::" + businessProfileVO.getWebhost_address(),"3", errorCodeVO));
                        businessProfileVO.setWebhost_address("");
                    }
                    break;

                case payment_company_name:
                    if (!ESAPI.validator().isValidInput("payment_company_name", businessProfileVO.getPayment_company_name(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_COMPANY_NAME);
                        validationErrorList.addError("payment_company_name", new PZValidationException("payment_company_name",ErrorMessages.INVALID_PAYMENT_COMPANY_NAME  + ":::" + businessProfileVO.getPayment_company_name(),"3", errorCodeVO));
                        businessProfileVO.setPayment_company_name("");
                    }
                    break;

                case payment_phone:
                    if (!ESAPI.validator().isValidInput("payment_phone", businessProfileVO.getPayment_phone(), "OnlyNumber", 15, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_PHONE);
                        validationErrorList.addError("payment_phone", new PZValidationException("payment_phone",ErrorMessages.INVALID_PAYMENT_PHONE  + ":::" + businessProfileVO.getPayment_phone(),"3", errorCodeVO));
                        businessProfileVO.setPayment_phone("");
                    }
                    break;

                case payment_email:
                    if (!ESAPI.validator().isValidInput("payment_email", businessProfileVO.getPayment_email(), "Email", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_EMAIL);
                        validationErrorList.addError("payment_email", new PZValidationException("payment_email",ErrorMessages.INVALID_PAYMENT_EMAIL  + ":::" + businessProfileVO.getPayment_email(),"3", errorCodeVO));
                        businessProfileVO.setPayment_email("");
                    }
                    break;

                case payment_website:
                    if (!ESAPI.validator().isValidInput("payment_website", businessProfileVO.getPayment_website(), "CSEURL", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_WEBSITE);
                        validationErrorList.addError("payment_website", new PZValidationException("payment_website",ErrorMessages.INVALID_PAYMENT_WEBSITE  + ":::" + businessProfileVO.getPayment_website(),"3", errorCodeVO));
                        businessProfileVO.setPayment_website("");
                    }
                    break;

                case payment_address:
                    if (!ESAPI.validator().isValidInput("payment_address", businessProfileVO.getPayment_address(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_ADDRESS);
                        validationErrorList.addError("payment_address", new PZValidationException("payment_address",ErrorMessages.INVALID_PAYMENT_ADDRESS  + ":::" + businessProfileVO.getPayment_address(),"3", errorCodeVO));
                        businessProfileVO.setPayment_address("");
                    }
                    break;

                case callcenter_phone:
                    if (!ESAPI.validator().isValidInput("callcenter_phone", businessProfileVO.getCallcenter_phone(), "OnlyNumber", 15, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALL_CENTER_PHONE);
                        validationErrorList.addError("callcenter_phone", new PZValidationException("callcenter_phone",ErrorMessages.INVALID_CALLCENTER_PHONE  + ":::" + businessProfileVO.getCallcenter_phone(), "3", errorCodeVO));
                        businessProfileVO.setCallcenter_phone("");
                    }
                    break;

                case callcenter_email:
                    if (!ESAPI.validator().isValidInput("callcenter_email", businessProfileVO.getCallcenter_email(), "Email", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALL_CENTER_EMAIL);
                        validationErrorList.addError("callcenter_email", new PZValidationException("callcenter_email",ErrorMessages.INVALID_CALLCENTER_EMAIL  + ":::" + businessProfileVO.getCallcenter_email(), "3", errorCodeVO));
                        businessProfileVO.setCallcenter_email("");
                    }
                    break;


                case callcenter_website:
                    if (!ESAPI.validator().isValidInput("callcenter_website", businessProfileVO.getCallcenter_website(), "CSEURL", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALL_CENTER_WEBSITE);
                        validationErrorList.addError("callcenter_website", new PZValidationException("callcenter_website",ErrorMessages.INVALID_CALLCENTER_WEBSITE  + ":::" + businessProfileVO.getCallcenter_website(), "3", errorCodeVO));
                        businessProfileVO.setCallcenter_website("");
                    }
                    break;

                case callcenter_address:
                    if (!ESAPI.validator().isValidInput("callcenter_address", businessProfileVO.getCallcenter_address(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALL_CENTER_ADDRESS);
                        validationErrorList.addError("callcenter_address", new PZValidationException("callcenter_address",ErrorMessages.INVALID_CALLCENTER_ADDRESS  + ":::" + businessProfileVO.getCallcenter_address(), "3", errorCodeVO));
                        businessProfileVO.setCallcenter_address("");
                    }
                    break;

                case shoppingcart_company_name:
                    if (!ESAPI.validator().isValidInput("shoppingcart_company_name", businessProfileVO.getShoppingcart_company_name(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPPING_CART_COMPANY_NAME);
                        validationErrorList.addError("shoppingcart_company_name", new PZValidationException("shoppingcart_company_name",ErrorMessages.INVALID_SHOPPING_CART_COMPANY_NAME  + ":::" + businessProfileVO.getShoppingcart_company_name(), "3", errorCodeVO));
                        businessProfileVO.setShoppingcart_company_name("");
                    }
                    break;

                case shoppingcart_phone:
                    if (!ESAPI.validator().isValidInput("shoppingcart_phone", businessProfileVO.getShoppingcart_phone(), "OnlyNumber", 15, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPPING_CART_PHONE);
                        validationErrorList.addError("shoppingcart_phone", new PZValidationException("shoppingcart_phone",ErrorMessages.INVALID_SHOPPING_CART_PHONE  + ":::" + businessProfileVO.getShoppingcart_phone(), "3", errorCodeVO));
                        businessProfileVO.setShoppingcart_phone("");
                    }
                    break;

                case shoppingcart_email:
                    if (!ESAPI.validator().isValidInput("shoppingcart_email", businessProfileVO.getShoppingcart_email(), "Email", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPPING_CART_EMAIL);
                        validationErrorList.addError("shoppingcart_email", new PZValidationException("shoppingcart_email",ErrorMessages.INVALID_SHOPPING_CART_EMAIL  + ":::" + businessProfileVO.getShoppingcart_email(), "3", errorCodeVO));
                        businessProfileVO.setShoppingcart_email("");
                    }
                    break;

                case shoppingcart_website:
                    if (!ESAPI.validator().isValidInput("shoppingcart_website", businessProfileVO.getShoppingcart_website(), "CSEURL", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPPING_CART_WEBSITE);
                        validationErrorList.addError("shoppingcart_website", new PZValidationException("shoppingcart_website",ErrorMessages.INVALID_SHOPPING_CART_WEBSITE  + ":::" + businessProfileVO.getShoppingcart_website(), "3", errorCodeVO));
                        businessProfileVO.setShoppingcart_website("");
                    }
                    break;

                case shoppingcart_address:
                    if (!ESAPI.validator().isValidInput("shoppingcart_address", businessProfileVO.getShoppingcart_address(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SHOPPING_CART_ADDRESS);
                        validationErrorList.addError("shoppingcart_address", new PZValidationException("shoppingcart_address",ErrorMessages.INVALID_SHOPPING_CART_ADDRESS  + ":::" + businessProfileVO.getShoppingcart_address(), "3", errorCodeVO));
                        businessProfileVO.setShoppingcart_address("");
                    }
                    break;

                case seasonal_fluctuating:
                    if (!ESAPI.validator().isValidInput("seasonal_fluctuating", businessProfileVO.getSeasonal_fluctuating(), "isYN", 2, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SEASONAL_FLUCTUATING);
                        validationErrorList.addError("seasonal_fluctuating", new PZValidationException("seasonal_fluctuating", ErrorMessages.INVALID_SEASONAL_FLUCTUATING + ":::" + businessProfileVO.getSeasonal_fluctuating(), "3", errorCodeVO));
                        businessProfileVO.setSeasonal_fluctuating("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getSeasonal_fluctuating()))
                    {
                        if ("N".equals(businessProfileVO.getSeasonal_fluctuating()))
                        {
                            condSeasonalFluctuating = true;
                        }
                        else
                        {
                            condSeasonalFluctuating = isOptional;
                        }
                        bankInputNameList.add(BankInputName.seasonal_fluctuating_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.seasonal_fluctuating_yes, condSeasonalFluctuating);
                    }
                    break;

                case seasonal_fluctuating_yes:
                    if (!ESAPI.validator().isValidInput("seasonal_fluctuating_yes", businessProfileVO.getSeasonal_fluctuating_yes(), "alphanum", 30, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SEASONAL_FLUCTUATING_YES);
                        validationErrorList.addError("seasonal_fluctuating_yes", new PZValidationException("seasonal_fluctuating_yes",ErrorMessages.INVALID_SEASONAL_FLUCTUATING_YES + ":::" + businessProfileVO.getSeasonal_fluctuating_yes(),"3", errorCodeVO));
                        businessProfileVO.setSeasonal_fluctuating_yes("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getSeasonal_fluctuating_yes()) && (!functions.isValueNull(businessProfileVO.getSeasonal_fluctuating()) || "N".equals(businessProfileVO.getSeasonal_fluctuating())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SEASONAL_FLUCTUATING_SELECTION);
                        validationErrorList.addError("seasonal_fluctuating_yes", new PZValidationException("seasonal_fluctuating_yes",ErrorMessages.INVALID_SEASONAL_FLUCTUATING_SELECTION + ":::" + businessProfileVO.getSeasonal_fluctuating_yes(),"3", errorCodeVO));
                        businessProfileVO.setSeasonal_fluctuating_yes("");
                    }
                    break;

                case paymenttype_credit:

                    if(functions.isValueNull(businessProfileVO.getPaymenttype_credit()) || functions.isValueNull(businessProfileVO.getPaymenttype_debit()) || functions.isValueNull(businessProfileVO.getPaymenttype_netbanking()) || functions.isValueNull(businessProfileVO.getPaymenttype_wallet()) || functions.isValueNull(businessProfileVO.getPaymenttype_alternate()))
                    {
                        condPaymentTypeAll=true;
                    }
                    if (!ESAPI.validator().isValidInput("paymenttype_credit", businessProfileVO.getPaymenttype_credit(), "Percentage", 3, (condPaymentTypeAll || isOptional)))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_TYPE_CREDIT);
                        validationErrorList.addError("paymenttype_credit", new PZValidationException("paymenttype_credit",ErrorMessages.INVALID_PAYMENT_TYPE_CREDIT + ":::" + businessProfileVO.getPaymenttype_credit(),"3", errorCodeVO));
                        businessProfileVO.setPaymenttype_credit("");
                    }
                    if(functions.isValueNull(businessProfileVO.getPaymenttype_credit()))
                    {
                        condPaymentTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getPaymenttype_debit()))
                    {
                        condPaymentTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getPaymenttype_netbanking()))
                    {
                        condPaymentTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getPaymenttype_wallet()))
                    {
                        condPaymentTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getPaymenttype_alternate()))
                    {
                        condPaymentTypeAll=true;
                    }

                    bankInputNameList.add(BankInputName.paymenttype_debit);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.paymenttype_debit,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.paymenttype_debit)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.paymenttype_netbanking);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.paymenttype_netbanking,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.paymenttype_netbanking)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.paymenttype_wallet);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.paymenttype_wallet,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.paymenttype_wallet)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.paymenttype_alternate);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.paymenttype_alternate,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.paymenttype_alternate)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.calculatepaymenttype);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.calculatepaymenttype,condPaymentTypeAll || !conditionalValidation);
                    break;

                case paymenttype_debit:
                    if (!ESAPI.validator().isValidInput("paymenttype_debit", businessProfileVO.getPaymenttype_credit(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_TYPE_DEBIT);
                        validationErrorList.addError("paymenttype_debit", new PZValidationException("paymenttype_debit",ErrorMessages.INVALID_PAYMENT_TYPE_DEBIT + ":::" + businessProfileVO.getPaymenttype_credit(),"3", errorCodeVO));
                        businessProfileVO.setPaymenttype_debit("");
                    }
                    break;

                case paymenttype_netbanking:
                    if (!ESAPI.validator().isValidInput("paymenttype_netbanking", businessProfileVO.getPaymenttype_netbanking(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_TYPE_NETBANKING);
                        validationErrorList.addError("paymenttype_netbanking", new PZValidationException("paymenttype_netbanking",ErrorMessages.INVALID_PAYMENT_TYPE_NETBANKING + ":::" + businessProfileVO.getPaymenttype_netbanking(),"3", errorCodeVO));
                        businessProfileVO.setPaymenttype_netbanking("");
                    }
                    break;

                case paymenttype_wallet:
                    if (!ESAPI.validator().isValidInput("paymenttype_wallet", businessProfileVO.getPaymenttype_wallet(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_TYPE_WALLET);
                        validationErrorList.addError("paymenttype_wallet", new PZValidationException("paymenttype_wallet",ErrorMessages.INVALID_PAYMENT_TYPE_WALLET + ":::" + businessProfileVO.getPaymenttype_wallet(),"3", errorCodeVO));
                        businessProfileVO.setPaymenttype_wallet("");
                    }
                    break;

                case paymenttype_alternate:
                    if (!ESAPI.validator().isValidInput("paymenttype_alternate", businessProfileVO.getPaymenttype_alternate(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_TYPE_ALTERNATE);
                        validationErrorList.addError("paymenttype_alternate", new PZValidationException("paymenttype_alternate",ErrorMessages.INVALID_PAYMENT_TYPE_ALTERNATE + ":::" + businessProfileVO.getPaymenttype_alternate(),"3", errorCodeVO));
                        businessProfileVO.setPaymenttype_alternate("");
                    }
                    break;

                case calculatepaymenttype:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_credit()) && functions.isNumericVal(businessProfileVO.getPaymenttype_credit())) ? businessProfileVO.getPaymenttype_credit() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_debit()) && functions.isNumericVal(businessProfileVO.getPaymenttype_debit())) ? businessProfileVO.getPaymenttype_debit() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_netbanking()) && functions.isNumericVal(businessProfileVO.getPaymenttype_netbanking())) ? businessProfileVO.getPaymenttype_netbanking() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_wallet()) && functions.isNumericVal(businessProfileVO.getPaymenttype_wallet())) ? businessProfileVO.getPaymenttype_wallet() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_alternate()) && functions.isNumericVal(businessProfileVO.getPaymenttype_alternate())) ? businessProfileVO.getPaymenttype_alternate() : "0")) > 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALCULATE_PAYMENT_TYPE);
                        validationErrorList.addError("paymenttype_All", new PZValidationException("paymenttype_All",ErrorMessages.INVALID_CALCULATE_PAYMENT_TYPE + ":::" + businessProfileVO.getPaymenttype_credit(),"3", errorCodeVO));
                    }
                    else if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_credit()) && functions.isNumericVal(businessProfileVO.getPaymenttype_credit())) ? businessProfileVO.getPaymenttype_credit() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_debit()) && functions.isNumericVal(businessProfileVO.getPaymenttype_debit())) ? businessProfileVO.getPaymenttype_debit() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_netbanking()) && functions.isNumericVal(businessProfileVO.getPaymenttype_netbanking())) ? businessProfileVO.getPaymenttype_netbanking() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_wallet()) && functions.isNumericVal(businessProfileVO.getPaymenttype_wallet())) ? businessProfileVO.getPaymenttype_wallet() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getPaymenttype_alternate()) && functions.isNumericVal(businessProfileVO.getPaymenttype_alternate())) ? businessProfileVO.getPaymenttype_alternate() : "0")) < 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALCULATE_PAYMENT_TYPE);
                        validationErrorList.addError("paymenttype_All", new PZValidationException("paymenttype_All",ErrorMessages.INVALID_CALCULATE_PAYMENT_TYPE + ":::" + businessProfileVO.getPaymenttype_credit(), "3", errorCodeVO));
                    }
                    break;

                case creditor_id:
                    if (!ESAPI.validator().isValidInput("creditor_id", businessProfileVO.getCreditor_id(), "alphanum", 255, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CREDITOR);
                        validationErrorList.addError("creditor_id", new PZValidationException("creditor_id",ErrorMessages.INVALID_CREDITOR_ID  + ":::" + businessProfileVO.getCreditor_id(), "3", errorCodeVO));
                        businessProfileVO.setCreditor_id("");
                    }
                    break;

                case goods_delivery:
                    if (!ESAPI.validator().isValidInput("goods_delivery", businessProfileVO.getGoods_delivery(), "goodsDelivery", 30, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_GOODS_DELIVERY);
                        validationErrorList.addError("goods_delivery", new PZValidationException("goods_delivery",ErrorMessages.INVALID_GOODS_DELIVERY  + ":::" + businessProfileVO.getGoods_delivery(), "3", errorCodeVO));
                        businessProfileVO.setGoods_delivery("");
                    }
                    break;

                case cardvolume_visa:
                    if(functions.isValueNull(businessProfileVO.getCardvolume_visa()) || functions.isValueNull(businessProfileVO.getCardvolume_mastercard()) || functions.isValueNull(businessProfileVO.getCardvolume_americanexpress()) || functions.isValueNull(businessProfileVO.getCardvolume_dinner()) || functions.isValueNull(businessProfileVO.getCardvolume_discover()) || functions.isValueNull(businessProfileVO.getCardvolume_other()))
                    {
                        condCardvolumeAll=true;
                    }
                    if (!ESAPI.validator().isValidInput("cardvolume_visa", businessProfileVO.getCardvolume_visa(), "Percentage", 3, (condCardvolumeAll || isOptional)))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_VISA);
                        validationErrorList.addError("cardvolume_visa", new PZValidationException("cardvolume_visa",ErrorMessages.INVALID_CARD_VOLUME_VISA + ":::" + businessProfileVO.getCardvolume_visa(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_visa("");
                    }
                    if(functions.isValueNull(businessProfileVO.getCardvolume_visa()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_mastercard()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_americanexpress()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_dinner()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_discover()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_rupay()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_jcb()))
                    {
                        condCardvolumeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getCardvolume_other()))
                    {
                        condCardvolumeAll=true;
                    }
                    bankInputNameList.add(BankInputName.cardvolume_mastercard);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_mastercard,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_mastercard)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.cardvolume_americanexpress);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_americanexpress,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_americanexpress)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.cardvolume_dinner);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_dinner,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_dinner)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.cardvolume_discover);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_discover,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_discover)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.cardvolume_rupay);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_rupay,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_rupay)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.cardvolume_jcb);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_jcb,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_jcb)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.cardvolume_other);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.cardvolume_other,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.cardvolume_other)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.calculatecardvolume);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.calculatecardvolume,condCardvolumeAll || !conditionalValidation);
                    break;

                case cardvolume_mastercard:
                    if (!ESAPI.validator().isValidInput("cardvolume_mastercard", businessProfileVO.getCardvolume_mastercard(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_MASTERCARD);
                        validationErrorList.addError("cardvolume_mastercard", new PZValidationException("cardvolume_mastercard",ErrorMessages.INVALID_CARD_VOLUME_MASTERCARD + ":::" + businessProfileVO.getCardvolume_mastercard(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_mastercard("");
                    }
                    break;

                case cardvolume_americanexpress:
                    if (!ESAPI.validator().isValidInput("cardvolume_americanexpress", businessProfileVO.getCardvolume_americanexpress(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_AMERICANEXPRESS);
                        validationErrorList.addError("cardvolume_americanexpress", new PZValidationException("cardvolume_americanexpress",ErrorMessages.INVALID_CARD_VOLUME_AMERICANEXPRESS + ":::" + businessProfileVO.getCardvolume_americanexpress(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_americanexpress("");
                    }
                    break;

                case cardvolume_dinner:
                    if (!ESAPI.validator().isValidInput("cardvolume_dinner", businessProfileVO.getCardvolume_dinner(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_DINNER);
                        validationErrorList.addError("cardvolume_dinner", new PZValidationException("cardvolume_dinner",ErrorMessages.INVALID_CARD_VOLUME_DINNER + ":::" + businessProfileVO.getCardvolume_dinner(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_dinner("");
                    }
                    break;

                case cardvolume_discover:
                    if (!ESAPI.validator().isValidInput("cardvolume_discover", businessProfileVO.getCardvolume_discover(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_DISCOVER);
                        validationErrorList.addError("cardvolume_discover", new PZValidationException("cardvolume_discover",ErrorMessages.INVALID_CARD_VOLUME_DISCOVER + ":::" + businessProfileVO.getCardvolume_discover(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_discover("");
                    }
                    break;

                case cardvolume_rupay:
                    if (!ESAPI.validator().isValidInput("cardvolume_rupay", businessProfileVO.getCardvolume_rupay(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_RUPAY);
                        validationErrorList.addError("cardvolume_rupay", new PZValidationException("cardvolume_rupay","Invalid Data" + " " + businessProfileVO.getCardvolume_rupay(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_rupay("");
                    }
                    break;

                case cardvolume_jcb:
                    if (!ESAPI.validator().isValidInput("cardvolume_jcb", businessProfileVO.getCardvolume_jcb(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_JCB);
                        validationErrorList.addError("cardvolume_jcb", new PZValidationException("cardvolume_jcb","Invalid Data" + " " + businessProfileVO.getCardvolume_jcb(), "3", errorCodeVO));
                        businessProfileVO.setCardvolume_jcb("");
                    }
                    break;

                case cardvolume_other:
                    if (!ESAPI.validator().isValidInput("cardvolume_other", businessProfileVO.getCardvolume_other(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_OTHER);
                        validationErrorList.addError("cardvolume_other", new PZValidationException("cardvolume_other",ErrorMessages.INVALID_CARD_VOLUME_OTHER + ":::" + businessProfileVO.getCardvolume_other(),"3", errorCodeVO));
                        businessProfileVO.setCardvolume_other("");
                    }
                    break;

                case calculatecardvolume:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_visa()) && functions.isNumericVal(businessProfileVO.getCardvolume_visa())) ? businessProfileVO.getCardvolume_visa() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_mastercard()) && functions.isNumericVal(businessProfileVO.getCardvolume_mastercard())) ? businessProfileVO.getCardvolume_mastercard() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_americanexpress()) && functions.isNumericVal(businessProfileVO.getCardvolume_americanexpress())) ? businessProfileVO.getCardvolume_americanexpress() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_dinner()) && functions.isNumericVal(businessProfileVO.getCardvolume_dinner())) ? businessProfileVO.getCardvolume_dinner() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_discover()) && functions.isNumericVal(businessProfileVO.getCardvolume_discover())) ? businessProfileVO.getCardvolume_discover() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_rupay()) && functions.isNumericVal(businessProfileVO.getCardvolume_rupay())) ? businessProfileVO.getCardvolume_rupay() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_other()) && functions.isNumericVal(businessProfileVO.getCardvolume_other())) ? businessProfileVO.getCardvolume_other() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_jcb()) && functions.isNumericVal(businessProfileVO.getCardvolume_jcb())) ? businessProfileVO.getCardvolume_jcb() : "0")) > 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CARD_VOLUME_ALL);
                        validationErrorList.addError("cardvolumeall", new PZValidationException("cardvolumeall", ErrorMessages.INVALID_CARD_VOLUME_ALL + ":::" + businessProfileVO.getCardvolume_visa(), "3", errorCodeVO));
                    }
                    else if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_visa()) && functions.isNumericVal(businessProfileVO.getCardvolume_visa())) ? businessProfileVO.getCardvolume_visa() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_mastercard()) && functions.isNumericVal(businessProfileVO.getCardvolume_mastercard())) ? businessProfileVO.getCardvolume_mastercard() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_americanexpress()) && functions.isNumericVal(businessProfileVO.getCardvolume_americanexpress())) ? businessProfileVO.getCardvolume_americanexpress() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_dinner()) && functions.isNumericVal(businessProfileVO.getCardvolume_dinner())) ? businessProfileVO.getCardvolume_dinner() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_discover()) && functions.isNumericVal(businessProfileVO.getCardvolume_discover())) ? businessProfileVO.getCardvolume_discover() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_rupay()) && functions.isNumericVal(businessProfileVO.getCardvolume_rupay())) ? businessProfileVO.getCardvolume_rupay() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_other()) && functions.isNumericVal(businessProfileVO.getCardvolume_other())) ? businessProfileVO.getCardvolume_other() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getCardvolume_jcb()) && functions.isNumericVal(businessProfileVO.getCardvolume_jcb())) ? businessProfileVO.getCardvolume_jcb() : "0")) < 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SELECTION_CARD_VOLUME_ALL);
                        validationErrorList.addError("cardvolumeall", new PZValidationException("cardvolumeall", ErrorMessages.INVALID_SELECTION_CARD_VOLUME_ALL + ":::" + businessProfileVO.getCardvolume_visa(), "3", errorCodeVO));
                    }
                    break;

                /*case terminal_type:
                    if (!ESAPI.validator().isValidInput("terminal_type", businessProfileVO.getTerminal_type(), "AppTerminalType", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TERMINAL_TYPE);
                        validationErrorList.addError("terminal_type", new PZValidationException("terminal_type", ErrorMessages.INVALID_TERMINAL_TYPE  + ":::" + businessProfileVO.getTerminal_type(),"3", errorCodeVO));
                        businessProfileVO.setTerminal_type("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getTerminal_type()) && "other_terminal".equals(businessProfileVO.getTerminal_type()))
                    {
//                        condTerminalOther = false;
                        bankInputNameList.add(BankInputName.terminal_type_otheryes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.terminal_type_otheryes, false);
                    }
                    break;

                case terminal_type_otheryes:
                    if (!ESAPI.validator().isValidInput("terminal_type_otheryes", businessProfileVO.getTerminal_type_otheryes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TERMINAL_TYPE_OTHER);
                        validationErrorList.addError("terminal_type_otheryes", new PZValidationException("terminal_type_otheryes",ErrorMessages.INVALID_TERMINAL_TYPE_OTHER  + ":::" + businessProfileVO.getTerminal_type_otheryes(),"3", errorCodeVO));
                        businessProfileVO.setTerminal_type_otheryes("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getTerminal_type_otheryes()) && (functions.isValueNull(businessProfileVO.getTerminal_type()) && !"other_terminal".equals(businessProfileVO.getTerminal_type())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SELECTION_TERMINAL_TYPE_OTHER);
                        validationErrorList.addError("terminal_type_otheryes", new PZValidationException("terminal_type_otheryes", ErrorMessages.INVALID_SELECTION_TERMINAL_TYPE_OTHER + ":::" + businessProfileVO.getTerminal_type_otheryes(), "3", errorCodeVO));
                        businessProfileVO.setTerminal_type_otheryes("");
                    }
                    break;*/

                case one_time_percentage:
                    boolean condTerminalTypeAll = false;
                    if(functions.isValueNull(businessProfileVO.getOne_time_percentage()) || functions.isValueNull(businessProfileVO.getMoto_percentage()) || functions.isValueNull(businessProfileVO.getInternet_percentage()) || functions.isValueNull(businessProfileVO.getSwipe_percentage()) || functions.isValueNull(businessProfileVO.getRecurring_percentage()) || functions.isValueNull(businessProfileVO.getThreedsecure_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    if (!ESAPI.validator().isValidInput("one_time_percentage", businessProfileVO.getOne_time_percentage(), "Percentage", 3, (condTerminalTypeAll || isOptional)))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ONE_TIME_PERCENTAGE);
                        validationErrorList.addError("one_time_percentage", new PZValidationException("one_time_percentage",ErrorMessages.INVALID_ONE_TIME_PERCENTAGE + ":::" + businessProfileVO.getOne_time_percentage(),"3", errorCodeVO));
                        businessProfileVO.setOne_time_percentage("");
                    }
                    if(functions.isValueNull(businessProfileVO.getOne_time_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getMoto_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getInternet_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getSwipe_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getRecurring_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getThreedsecure_percentage()))
                    {
                        condTerminalTypeAll=true;
                    }
                    else if(functions.isValueNull(businessProfileVO.getTerminal_type_otheryes()))
                    {
                        condTerminalTypeAll=true;
                    }

                    bankInputNameList.add(BankInputName.moto_percentage);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.moto_percentage,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.moto_percentage)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.internet_percentage);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.internet_percentage,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.internet_percentage)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.swipe_percentage);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.swipe_percentage,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.swipe_percentage)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.recurring_percentage);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.recurring_percentage,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.recurring_percentage)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.threedsecure_percentage);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.threedsecure_percentage,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.threedsecure_percentage)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.terminal_type_otheryes);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.terminal_type_otheryes,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.terminal_type_otheryes)?false:true||isOptional);
                    bankInputNameList.add(BankInputName.calculateterminaltype);
                    setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.calculateterminaltype,condTerminalTypeAll || !conditionalValidation);
                    break;

                case moto_percentage:
                    if (!ESAPI.validator().isValidInput("moto_percentage", businessProfileVO.getMoto_percentage(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MOTO_PERCENTAGE);
                        validationErrorList.addError("moto_percentage", new PZValidationException("moto_percentage",ErrorMessages.INVALID_MOTO_PERCENTAGE + ":::" + businessProfileVO.getMoto_percentage(),"3", errorCodeVO));
                        businessProfileVO.setMoto_percentage("");
                    }
                    break;

                case internet_percentage:
                    if (!ESAPI.validator().isValidInput("internet_percentage", businessProfileVO.getInternet_percentage(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_INTERNET_PERCENTAGE);
                        validationErrorList.addError("internet_percentage", new PZValidationException("internet_percentage",ErrorMessages.INVALID_INTERNET_PERCENTAGE + ":::" + businessProfileVO.getInternet_percentage(),"3", errorCodeVO));
                        businessProfileVO.setInternet_percentage("");
                    }
                    break;

                case swipe_percentage:
                    if (!ESAPI.validator().isValidInput("swipe_percentage", businessProfileVO.getSwipe_percentage(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SWIPE_PERCENTAGE);
                        validationErrorList.addError("swipe_percentage", new PZValidationException("swipe_percentage",ErrorMessages.INVALID_SWIPE_PERCENTAGE + ":::" + businessProfileVO.getSwipe_percentage(),"3", errorCodeVO));
                        businessProfileVO.setSwipe_percentage("");
                    }
                    break;

                case recurring_percentage:
                    if (!ESAPI.validator().isValidInput("recurring_percentage", businessProfileVO.getRecurring_percentage(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_RECURRING_PERCENTAGE);
                        validationErrorList.addError("recurring_percentage", new PZValidationException("recurring_percentage",ErrorMessages.INVALID_RECURRING_PERCENTAGE + ":::" + businessProfileVO.getRecurring_percentage(),"3", errorCodeVO));
                        businessProfileVO.setRecurring_percentage("");
                    }
                    break;

                case threedsecure_percentage:
                    if (!ESAPI.validator().isValidInput("threedsecure_percentage", businessProfileVO.getThreedsecure_percentage(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_3D_SECURE_PERCENTAGE);
                        validationErrorList.addError("threedsecure_percentage", new PZValidationException("threedsecure_percentage",ErrorMessages.INVALID_3D_SECURE_PERCENTAGE + ":::" + businessProfileVO.getThreedsecure_percentage(),"3", errorCodeVO));
                        businessProfileVO.setThreedsecure_percentage("");
                    }
                    break;

                case terminal_type_otheryes:
                    if (!ESAPI.validator().isValidInput("terminal_type_otheryes", businessProfileVO.getTerminal_type_otheryes(), "Percentage", 3, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_TERMINAL_TYPE_OTHER);
                        validationErrorList.addError("terminal_type_otheryes", new PZValidationException("terminal_type_otheryes",ErrorMessages.INVALID_TERMINAL_TYPE_OTHER + ":::" + businessProfileVO.getTerminal_type_otheryes(),"3", errorCodeVO));
                        businessProfileVO.setTerminal_type_otheryes("");
                    }
                    break;

                case calculateterminaltype:
                    if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getOne_time_percentage()) && functions.isNumericVal(businessProfileVO.getOne_time_percentage())) ? businessProfileVO.getOne_time_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getMoto_percentage()) && functions.isNumericVal(businessProfileVO.getMoto_percentage())) ? businessProfileVO.getMoto_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getInternet_percentage()) && functions.isNumericVal(businessProfileVO.getInternet_percentage())) ? businessProfileVO.getInternet_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getSwipe_percentage()) && functions.isNumericVal(businessProfileVO.getSwipe_percentage())) ? businessProfileVO.getSwipe_percentage() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getRecurring_percentage()) && functions.isNumericVal(businessProfileVO.getRecurring_percentage())) ? businessProfileVO.getRecurring_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getThreedsecure_percentage()) && functions.isNumericVal(businessProfileVO.getThreedsecure_percentage())) ? businessProfileVO.getThreedsecure_percentage() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getTerminal_type_otheryes()) && functions.isNumericVal(businessProfileVO.getTerminal_type_otheryes())) ? businessProfileVO.getTerminal_type_otheryes() : "0")) > 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALCULATE_TERMINAL_TYPE);
                        validationErrorList.addError("terminaltypeAll", new PZValidationException("terminaltypeAll",ErrorMessages.INVALID_CALCULATE_TERMINAL_TYPE + ":::" + businessProfileVO.getOne_time_percentage(),"3", errorCodeVO));
                    }
                    else if (((bankInputNameBooleanMap.containsKey(true) && bankInputNameBooleanMap.get(true).contains(input))?true:false) &&((Integer.parseInt((functions.isValueNull(businessProfileVO.getOne_time_percentage()) && functions.isNumericVal(businessProfileVO.getOne_time_percentage())) ? businessProfileVO.getOne_time_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getMoto_percentage()) && functions.isNumericVal(businessProfileVO.getMoto_percentage())) ? businessProfileVO.getMoto_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getInternet_percentage()) && functions.isNumericVal(businessProfileVO.getInternet_percentage())) ? businessProfileVO.getInternet_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getSwipe_percentage()) && functions.isNumericVal(businessProfileVO.getSwipe_percentage())) ? businessProfileVO.getSwipe_percentage() : "0")+ Integer.parseInt((functions.isValueNull(businessProfileVO.getRecurring_percentage()) && functions.isNumericVal(businessProfileVO.getRecurring_percentage())) ? businessProfileVO.getRecurring_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getThreedsecure_percentage()) && functions.isNumericVal(businessProfileVO.getThreedsecure_percentage())) ? businessProfileVO.getThreedsecure_percentage() : "0") + Integer.parseInt((functions.isValueNull(businessProfileVO.getTerminal_type_otheryes()) && functions.isNumericVal(businessProfileVO.getTerminal_type_otheryes())) ? businessProfileVO.getTerminal_type_otheryes() : "0")) < 100))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CALCULATE_TERMINAL_TYPE);
                        validationErrorList.addError("terminaltypeAll", new PZValidationException("terminaltypeAll",ErrorMessages.INVALID_CALCULATE_TERMINAL_TYPE + ":::" + businessProfileVO.getOne_time_percentage(), "3", errorCodeVO));
                    }
                    break;

                case payment_delivery:
                    if (!ESAPI.validator().isValidInput("payment_delivery", businessProfileVO.getPayment_delivery(), "AppPaymentDelivery", 50, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_DELIVERY);
                        validationErrorList.addError("payment_delivery", new PZValidationException("payment_delivery", ErrorMessages.INVALID_PAYMENT_DELIVERY  + ":::" + businessProfileVO.getPayment_delivery(),"3", errorCodeVO));
                        businessProfileVO.setPayment_delivery("");
                    }
                    else if (functions.isValueNull(businessProfileVO.getPayment_delivery()))
                    {
                        if ("payment_delivery_other".equals(businessProfileVO.getPayment_delivery()))
                        {
                            condPaymentDeliveryOther = isOptional;
                        }
                        else
                        {
                            condPaymentDeliveryOther = true;
                        }
                        bankInputNameList.add(BankInputName.payment_delivery_otheryes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.payment_delivery_otheryes, condPaymentDeliveryOther);
                    }
                    break;

                case payment_delivery_otheryes:
                    if (!ESAPI.validator().isValidInput("payment_delivery_otheryes", businessProfileVO.getPayment_delivery_otheryes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PAYMENT_DELIVERY_OTHER);
                        validationErrorList.addError("payment_delivery_otheryes", new PZValidationException("payment_delivery_otheryes",ErrorMessages.INVALID_PAYMENT_DELIVERY_OTHER  + ":::" + businessProfileVO.getPayment_delivery_otheryes(),"3", errorCodeVO));
                        businessProfileVO.setPayment_delivery_otheryes("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getPayment_delivery_otheryes()) && (functions.isValueNull(businessProfileVO.getPayment_delivery()) && !"payment_delivery_other".equals(businessProfileVO.getPayment_delivery())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_SELECTION_PAYMENT_DELIVERY_OTHER);
                        validationErrorList.addError("payment_delivery_otheryes", new PZValidationException("payment_delivery_otheryes",ErrorMessages.INVALID_SELECTION_PAYMENT_DELIVERY_OTHER  + ":::" + businessProfileVO.getPayment_delivery_otheryes(),"3", errorCodeVO));
                        businessProfileVO.setPayment_delivery_otheryes("");
                    }
                    break;

                case orderconfirmation_post:
                    if (!ESAPI.validator().isValidInput("orderconfirmation_post", businessProfileVO.getOrderconfirmation_post(), "isYN", 1, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ORDERCONFIRMATION_POST);
                        validationErrorList.addError("orderconfirmation_post", new PZValidationException("orderconfirmation_post",ErrorMessages.INVALID_ORDERCONFIRMATION_POST + ":::" + businessProfileVO.getOrderconfirmation_post(), "3", errorCodeVO));
                        businessProfileVO.setOrderconfirmation_post("");
                    }
                    break;

                case orderconfirmation_email:
                    if (!ESAPI.validator().isValidInput("orderconfirmation_email", businessProfileVO.getOrderconfirmation_email(), "isYN", 1, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ORDERCONFIRMATION_EMAIL);
                        validationErrorList.addError("orderconfirmation_email", new PZValidationException("orderconfirmation_email",ErrorMessages.INVALID_ORDERCONFIRMATION_EMAIL + ":::" + businessProfileVO.getOrderconfirmation_email(), "3", errorCodeVO));
                        businessProfileVO.setOrderconfirmation_email("");
                    }
                    break;

                case orderconfirmation_sms:
                    if (!ESAPI.validator().isValidInput("orderconfirmation_sms", businessProfileVO.getOrderconfirmation_sms(), "isYN", 1, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ORDERCONFIRMATION_SMS);
                        validationErrorList.addError("orderconfirmation_sms", new PZValidationException("orderconfirmation_sms",ErrorMessages.INVALID_ORDERCONFIRMATION_SMS + ":::" + businessProfileVO.getOrderconfirmation_sms(), "3", errorCodeVO));
                        businessProfileVO.setOrderconfirmation_sms("");
                    }
                    break;

                case orderconfirmation_other:
                    if (!ESAPI.validator().isValidInput("orderconfirmation_other", businessProfileVO.getOrderconfirmation_other(), "isYN", 1, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ORDERCONFIRMATION_OTHER);
                        validationErrorList.addError("orderconfirmation_other", new PZValidationException("orderconfirmation_other",ErrorMessages.INVALID_ORDERCONFIRMATION_OTHER + ":::" + businessProfileVO.getOrderconfirmation_other(), "3", errorCodeVO));
                        businessProfileVO.setOrderconfirmation_other("");
                    }
                    else if(functions.isValueNull(businessProfileVO.getOrderconfirmation_other()) && "Y".equals(businessProfileVO.getOrderconfirmation_other()))
                    {
                        bankInputNameList.add(BankInputName.orderconfirmation_other_yes);
                    }
                    break;

                case orderconfirmation_other_yes:
                    if (!ESAPI.validator().isValidInput("orderconfirmation_other_yes", businessProfileVO.getOrderconfirmation_other_yes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_ORDERCONFIRMATION_OTHER_YES);
                        validationErrorList.addError("orderconfirmation_other_yes", new PZValidationException("orderconfirmation_other_yes",ErrorMessages.INVALID_ORDERCONFIRMATION_OTHER_YES + ":::" + businessProfileVO.getOrderconfirmation_other_yes(), "3", errorCodeVO));
                        businessProfileVO.setOrderconfirmation_other_yes("");
                    }
                    break;
                case physicalgoods_delivered:
                    if (!ESAPI.validator().isValidInput("physicalgoods_delivered", businessProfileVO.getPhysicalgoods_delivered(), "isYN", 1, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_PHYSICAL_GOODS_DELIVERED);
                        validationErrorList.addError("physicalgoods_delivered", new PZValidationException("physicalgoods_delivered",ErrorMessages.INVALID_PHYSICAL_GOODS_DELIVERED + ":::" + businessProfileVO.getPhysicalgoods_delivered(), "3", errorCodeVO));
                        businessProfileVO.setPhysicalgoods_delivered("");
                    }
                    break;
                case viainternetgoods_delivered:
                    if (!ESAPI.validator().isValidInput("viainternetgoods_delivered", businessProfileVO.getViainternetgoods_delivered(), "isYN", 1, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_VIA_INTERNET_GOODS_DELIVERED);
                        validationErrorList.addError("viainternetgoods_delivered", new PZValidationException("physicalgoods_delivered", ErrorMessages.INVALID_VIA_INTERNET_GOODS_DELIVERED + ":::" + businessProfileVO.getViainternetgoods_delivered(), "3", errorCodeVO));
                        businessProfileVO.setViainternetgoods_delivered("");
                    }
                    break;
            }
        }

        if(bankInputNameList.size()>0)
        {
            InputValidations(businessProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);
        }
    }

    //Application_Manager BankProfile Validator
/*    public void InputValidations(BankProfileVO bankProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList, boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMapARGS)
    {
        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();

        //THIS is FOR CONVERSION OF REFERENCE TO VALUE type
        Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap=new HashMap<Boolean,Set<BankInputName>>();

        Set<BankInputName> bankInputNameSet = null;
        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        if(bankInputNameBooleanMapARGS==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        else
        {
            if(bankInputNameBooleanMapARGS.containsKey(false))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(false));
                bankInputNameBooleanMap.put(false,bankInputNameSet);
            }

            if(bankInputNameBooleanMapARGS.containsKey(true))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(true));
                bankInputNameBooleanMap.put(true,bankInputNameSet);
            }

        }

        bankInputNameBooleanMapARGS= new HashMap<Boolean,Set<BankInputName>>();
        //TILL HERE

        for (BankInputName input : inputList)
        {
            switch (input)
            {
                case currency_payments_USD:
                    if (!ESAPI.validator().isValidInput("currency_payments_USD", bankProfileVO.getCurrency_payments_USD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_USD", new ValidationException("currency_payments_USD", "Invalid currency_payments_USD:::" + bankProfileVO.getCurrency_payments_USD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_USD);
                        validationErrorList.addError("currency_payments_USD", new PZValidationException("currency_payments_USD",ErrorMessages.INVALID_CURRENCY_PAYMENTS_USD  + ":::" + bankProfileVO.getCurrency_payments_USD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_USD("");
                    }
                    break;
                case currency_payments_EUR:
                    if (!ESAPI.validator().isValidInput("currency_payments_EUR", bankProfileVO.getCurrency_payments_EUR(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_EUR", new ValidationException("currency_payments_EUR", "Invalid currency_payments_EUR:::" + bankProfileVO.getCurrency_payments_EUR(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_EUR);
                        validationErrorList.addError("currency_payments_EUR", new PZValidationException("currency_payments_EUR",ErrorMessages.INVALID_CURRENCY_PAYMENTS_EUR  + ":::" + bankProfileVO.getCurrency_payments_EUR(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_EUR("");
                    }
                    break;
                case currency_payments_GBP:
                    if (!ESAPI.validator().isValidInput("currency_payments_GBP", bankProfileVO.getCurrency_payments_GBP(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_GBP", new ValidationException("currency_payments_GBP", "Invalid currency_payments_GBP:::" + bankProfileVO.getCurrency_payments_GBP(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_GBP);
                        validationErrorList.addError("currency_payments_GBP", new PZValidationException("currency_payments_GBP",ErrorMessages.INVALID_CURRENCY_PAYMENTS_GBP  + ":::" + bankProfileVO.getCurrency_payments_GBP(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_GBP("");
                    }
                    break;
                case currency_payments_JPY:
                    if (!ESAPI.validator().isValidInput("currency_payments_JPY", bankProfileVO.getCurrency_payments_JPY(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_JPY", new ValidationException("currency_payments_JPY", "Invalid currency_payments_JPY:::" + bankProfileVO.getCurrency_payments_JPY(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_JPY);
                        validationErrorList.addError("currency_payments_JPY", new PZValidationException("currency_payments_JPY",ErrorMessages.INVALID_CURRENCY_PAYMENTS_JPY  + ":::" + bankProfileVO.getCurrency_payments_JPY(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_JPY("");
                    }
                    break;
                case currency_payments_PEN:
                    if (!ESAPI.validator().isValidInput("currency_payments_PEN", bankProfileVO.getCurrency_payments_PEN(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_PEN", new ValidationException("currency_payments_PEN", "Invalid currency_payments_PEN:::" + bankProfileVO.getCurrency_payments_PEN(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_PEN);
                        validationErrorList.addError("currency_payments_PEN", new PZValidationException("currency_payments_PEN",ErrorMessages.INVALID_CURRENCY_PAYMENTS_PEN  + ":::" + bankProfileVO.getCurrency_payments_PEN(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_PEN("");
                    }
                    break;
                case currency_payments_HKD:
                    if (!ESAPI.validator().isValidInput("currency_payments_HKD", bankProfileVO.getCurrency_payments_HKD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_HKD", new ValidationException("currency_payments_HKD", "Invalid currency_payments_HKD:::" + bankProfileVO.getCurrency_payments_HKD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_HKD);
                        validationErrorList.addError("currency_payments_HKD", new PZValidationException("currency_payments_HKD",ErrorMessages.INVALID_CURRENCY_PAYMENTS_HKD  + ":::" + bankProfileVO.getCurrency_payments_HKD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_HKD("");
                    }
                    break;
                case currency_payments_AUD:
                    if (!ESAPI.validator().isValidInput("currency_payments_AUD", bankProfileVO.getCurrency_payments_AUD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_AUD", new ValidationException("currency_payments_AUD", "Invalid currency_payments_AUD:::" + bankProfileVO.getCurrency_payments_AUD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_AUD);
                        validationErrorList.addError("currency_payments_AUD", new PZValidationException("currency_payments_AUD",ErrorMessages.INVALID_CURRENCY_PAYMENTS_AUD  + ":::" + bankProfileVO.getCurrency_payments_AUD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_AUD("");
                    }
                    break;
                case currency_payments_CAD:
                    if (!ESAPI.validator().isValidInput("currency_payments_CAD", bankProfileVO.getCurrency_payments_CAD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_CAD", new ValidationException("currency_payments_CAD", "Invalid currency_payments_CAD:::" + bankProfileVO.getCurrency_payments_CAD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_CAD);
                        validationErrorList.addError("currency_payments_CAD", new PZValidationException("currency_payments_CAD",ErrorMessages.INVALID_CURRENCY_PAYMENTS_CAD  + ":::" + bankProfileVO.getCurrency_payments_CAD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_CAD("");
                    }
                    break;
                case currency_payments_DKK:
                    if (!ESAPI.validator().isValidInput("currency_payments_DKK", bankProfileVO.getCurrency_payments_DKK(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_DKK", new ValidationException("currency_payments_DKK", "Invalid currency_payments_DKK:::" + bankProfileVO.getCurrency_payments_DKK(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_DKK);
                        validationErrorList.addError("currency_payments_DKK", new PZValidationException("currency_payments_DKK",ErrorMessages.INVALID_CURRENCY_PAYMENTS_DKK  + ":::" + bankProfileVO.getCurrency_payments_DKK(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_DKK("");
                    }
                    break;
                case currency_payments_SEK:
                    if (!ESAPI.validator().isValidInput("currency_payments_SEK", bankProfileVO.getCurrency_payments_SEK(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_SEK", new ValidationException("currency_payments_SEK", "Invalid currency_payments_SEK:::" + bankProfileVO.getCurrency_payments_SEK(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_SEK);
                        validationErrorList.addError("currency_payments_SEK", new PZValidationException("currency_payments_SEK",ErrorMessages.INVALID_CURRENCY_PAYMENTS_SEK  + ":::" + bankProfileVO.getCurrency_payments_SEK(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_SEK("");
                    }
                    break;
                case currency_payments_NOK:
                    if (!ESAPI.validator().isValidInput("currency_payments_NOK", bankProfileVO.getCurrency_payments_NOK(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_NOK", new ValidationException("currency_payments_NOK", "Invalid currency_payments_NOK:::" + bankProfileVO.getCurrency_payments_NOK(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_NOK);
                        validationErrorList.addError("currency_payments_NOK", new PZValidationException("currency_payments_NOK",ErrorMessages.INVALID_CURRENCY_PAYMENTS_NOK  + ":::" + bankProfileVO.getCurrency_payments_NOK(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_NOK("");
                    }
                    break;
                case currency_payments_INR:
                    if (!ESAPI.validator().isValidInput("currency_payments_INR", bankProfileVO.getCurrency_payments_INR(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_payments_INR", new ValidationException("currency_payments_INR", "Invalid currency_payments_INR:::" + bankProfileVO.getCurrency_payments_INR(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PAYMENTS_INR);
                        validationErrorList.addError("currency_payments_INR", new PZValidationException("currency_payments_INR",ErrorMessages.INVALID_CURRENCY_PAYMENTS_INR  + ":::" + bankProfileVO.getCurrency_payments_INR(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_payments_INR("");
                    }
                    break;

                case currency_products_USD:
                    if (!ESAPI.validator().isValidInput("currency_products_USD", bankProfileVO.getCurrency_products_USD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_USD", new ValidationException("currency_products_USD", "Invalid currency_products_USD:::" + bankProfileVO.getCurrency_products_USD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_USD);
                        validationErrorList.addError("currency_products_USD", new PZValidationException("currency_products_USD",ErrorMessages.INVALID_CURRENCY_PRODUCTS_USD  + ":::" + bankProfileVO.getCurrency_products_USD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_USD("");
                    }
                    break;
                case currency_products_EUR:
                    if (!ESAPI.validator().isValidInput("currency_products_EUR", bankProfileVO.getCurrency_products_EUR(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_EUR", new ValidationException("currency_products_EUR", "Invalid currency_products_EUR:::" + bankProfileVO.getCurrency_products_EUR(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_EUR);
                        validationErrorList.addError("currency_products_EUR", new PZValidationException("currency_products_EUR",ErrorMessages.INVALID_CURRENCY_PRODUCTS_EUR  + ":::" + bankProfileVO.getCurrency_products_EUR(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_EUR("");
                    }
                    break;
                case currency_products_GBP:
                    if (!ESAPI.validator().isValidInput("currency_products_GBP", bankProfileVO.getCurrency_products_GBP(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_GBP", new ValidationException("currency_products_GBP", "Invalid currency_products_GBP:::" + bankProfileVO.getCurrency_products_GBP(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_GBP);
                        validationErrorList.addError("currency_products_GBP", new PZValidationException("currency_products_GBP",ErrorMessages.INVALID_CURRENCY_PRODUCTS_GBP  + ":::" + bankProfileVO.getCurrency_products_GBP(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_GBP("");
                    }
                    break;
                case currency_products_JPY:
                    if (!ESAPI.validator().isValidInput("currency_products_JPY", bankProfileVO.getCurrency_products_JPY(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_JPY", new ValidationException("currency_products_JPY", "Invalid currency_products_JPY:::" + bankProfileVO.getCurrency_products_JPY(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_JPY);
                        validationErrorList.addError("currency_products_JPY", new PZValidationException("currency_products_JPY",ErrorMessages.INVALID_CURRENCY_PRODUCTS_JPY  + ":::" + bankProfileVO.getCurrency_products_JPY(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_JPY("");
                    }
                    break;
                case currency_products_PEN:
                    if (!ESAPI.validator().isValidInput("currency_products_PEN", bankProfileVO.getCurrency_products_PEN(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_PEN", new ValidationException("currency_products_PEN", "Invalid currency_products_PEN:::" + bankProfileVO.getCurrency_products_PEN(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_PEN);
                        validationErrorList.addError("currency_products_PEN", new PZValidationException("currency_products_PEN",ErrorMessages.INVALID_CURRENCY_PRODUCTS_PEN  + ":::" + bankProfileVO.getCurrency_products_PEN(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_PEN("");
                    }
                    break;
                case currency_products_HKD:
                    if (!ESAPI.validator().isValidInput("currency_products_HKD", bankProfileVO.getCurrency_products_HKD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_HKD", new ValidationException("currency_products_HKD", "Invalid currency_products_HKD:::" + bankProfileVO.getCurrency_products_HKD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_HKD);
                        validationErrorList.addError("currency_products_HKD", new PZValidationException("currency_products_HKD", ErrorMessages.INVALID_CURRENCY_PRODUCTS_HKD  + ":::" + bankProfileVO.getCurrency_products_HKD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_HKD("");
                    }
                    break;
                case currency_products_AUD:
                    if (!ESAPI.validator().isValidInput("currency_products_AUD", bankProfileVO.getCurrency_products_AUD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_AUD", new ValidationException("currency_products_AUD", "Invalid currency_products_AUD:::" + bankProfileVO.getCurrency_products_AUD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_AUD);
                        validationErrorList.addError("currency_products_AUD", new PZValidationException("currency_products_AUD",ErrorMessages.INVALID_CURRENCY_PRODUCTS_AUD  + ":::" + bankProfileVO.getCurrency_products_AUD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_AUD("");
                    }
                    break;
                case currency_products_CAD:
                    if (!ESAPI.validator().isValidInput("currency_products_CAD", bankProfileVO.getCurrency_products_CAD(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_CAD", new ValidationException("currency_products_CAD", "Invalid currency_products_CAD:::" + bankProfileVO.getCurrency_products_CAD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_CAD);
                        validationErrorList.addError("currency_products_CAD", new PZValidationException("currency_products_CAD",ErrorMessages.INVALID_CURRENCY_PRODUCTS_CAD  + ":::" + bankProfileVO.getCurrency_products_CAD(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_CAD("");
                    }
                    break;
                case currency_products_DKK:
                    if (!ESAPI.validator().isValidInput("currency_products_DKK", bankProfileVO.getCurrency_products_DKK(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_DKK", new ValidationException("currency_products_DKK", "Invalid currency_products_DKK:::" + bankProfileVO.getCurrency_products_DKK(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_DKK);
                        validationErrorList.addError("currency_products_DKK", new PZValidationException("currency_products_DKK",ErrorMessages.INVALID_CURRENCY_PRODUCTS_DKK  + ":::" + bankProfileVO.getCurrency_products_DKK(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_DKK("");
                    }
                    break;
                case currency_products_SEK:
                    if (!ESAPI.validator().isValidInput("currency_products_SEK", bankProfileVO.getCurrency_products_SEK(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_SEK", new ValidationException("currency_products_SEK", "Invalid currency_products_SEK:::" + bankProfileVO.getCurrency_products_SEK(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_SEK);
                        validationErrorList.addError("currency_products_SEK", new PZValidationException("currency_products_SEK",ErrorMessages.INVALID_CURRENCY_PRODUCTS_SEK  + ":::" + bankProfileVO.getCurrency_products_SEK(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_SEK("");
                    }
                    break;
                case currency_products_NOK:
                    if (!ESAPI.validator().isValidInput("currency_products_NOK", bankProfileVO.getCurrency_products_NOK(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_NOK", new ValidationException("currency_products_NOK", "Invalid currency_products_NOK:::" + bankProfileVO.getCurrency_products_NOK(),"5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_NOK);
                        validationErrorList.addError("currency_products_NOK", new PZValidationException("currency_products_NOK",ErrorMessages.INVALID_CURRENCY_PRODUCTS_NOK  + ":::" + bankProfileVO.getCurrency_products_NOK(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_NOK("");
                    }
                    break;
                case currency_products_INR:
                    if (!ESAPI.validator().isValidInput("currency_products_INR", bankProfileVO.getCurrency_products_INR(), "isYN", 255, isOptional))
                    {
                        //validationErrorList.addError("currency_products_INR", new ValidationException("currency_products_INR", "Invalid currency_products_INR:::" + bankProfileVO.getCurrency_products_INR(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY_PRODUCTS_INR);
                        validationErrorList.addError("currency_products_INR", new PZValidationException("currency_products_INR",ErrorMessages.INVALID_CURRENCY_PRODUCTS_INR  + ":::" + bankProfileVO.getCurrency_products_INR(),"5", errorCodeVO));
                        bankProfileVO.setCurrency_products_INR("");
                    }
                    break;
                case bankinfo_bic:
                    if (!ESAPI.validator().isValidInput("bankinfo_bic", bankProfileVO.getBankinfo_bic(), "alphanum", 100, isOptional))
                    {
                        //validationErrorList.addError("bankinfo_bic", new ValidationException("bankinfo_bic", "Invalid SWIFT/BIC:::" + bankProfileVO.getBankinfo_bic(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BIC);
                        validationErrorList.addError("bankinfo_bic", new PZValidationException("bankinfo_bic",ErrorMessages.INVALID_BANKINFO_BIC  + ":::" + bankProfileVO.getBankinfo_bic(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bic("");
                    }
                    break;
                case bankinfo_bank_name:

                    if (!ESAPI.validator().isValidInput("bankinfo_bank_name", bankProfileVO.getBankinfo_bank_name(), "alphanum", 100, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("bankinfo_bank_name", new ValidationException("bankinfo_bank_name", "Invalid Bank Name:::" + bankProfileVO.getBankinfo_bank_name(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANK_NAME);
                        validationErrorList.addError("bankinfo_bank_name", new PZValidationException("bankinfo_bank_name",ErrorMessages.INVALID_BANKINFO_BANK_NAME  + ":::" + bankProfileVO.getBankinfo_bank_name(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bank_name("");
                    }
                    break;
                case bankinfo_bankaddress:

                    if (!ESAPI.validator().isValidInput("bankinfo_bankaddress", bankProfileVO.getBankinfo_bankaddress(), "AppAddress", 255, isOptional))// isOptional to isOptional
                    {
                        //validationErrorList.addError("bankinfo_bankaddress", new ValidationException("bankinfo_bankaddress", "Invalid Bank Address:::" + bankProfileVO.getBankinfo_bankaddress(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANKADDRESS);
                        validationErrorList.addError("bankinfo_bankaddress", new PZValidationException("bankinfo_bankaddress",ErrorMessages.INVALID_BANKINFO_BANKADDRESS  + ":::" + bankProfileVO.getBankinfo_bankaddress(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bankaddress("");
                    }
                    break;

                case bankinfo_bankphonenumber:
                    if (!ESAPI.validator().isValidInput("bankinfo_bankphonenumber", bankProfileVO.getBankinfo_bankphonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("bankinfo_bankphonenumber", new ValidationException("bankinfo_bankphonenumber", "Invalid Bank Phone Number:::" + bankProfileVO.getBankinfo_bankphonenumber(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANKPHONENUMBER);
                        validationErrorList.addError("bankinfo_bankphonenumber", new PZValidationException("bankinfo_bankphonenumber",ErrorMessages.INVALID_BANKINFO_BANKPHONENUMBER  + ":::" + bankProfileVO.getBankinfo_bankphonenumber(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bankphonenumber("");
                    }
                    break;

                case bankinfo_aba_routingcode:
                    if (!ESAPI.validator().isValidInput("bankinfo_aba_routingcode", bankProfileVO.getBankinfo_aba_routingcode(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("bankinfo_aba_routingcode", new ValidationException("bankinfo_aba_routingcode", "Invalid ABA routing code (US):::" + bankProfileVO.getBankinfo_aba_routingcode(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ABA_ROUTINGCODE);
                        validationErrorList.addError("bankinfo_aba_routingcode", new PZValidationException("bankinfo_aba_routingcode",ErrorMessages.INVALID_BANKINFO_ABA_ROUTINGCODE  + ":::" + bankProfileVO.getBankinfo_aba_routingcode(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_aba_routingcode("");
                    }
                    break;

                case bankinfo_accountholder:
                    if (!ESAPI.validator().isValidInput("bankinfo_accountholder", bankProfileVO.getBankinfo_accountholder(), "alphanum", 30, isOptional))// isOptional to isOptional, StrictString to alphanum
                    {
                        //validationErrorList.addError("bankinfo_accountholder", new ValidationException("bankinfo_accountholder", "Invalid Account Holder:::" + bankProfileVO.getBankinfo_accountholder(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ACCOUNTHOLDER);
                        validationErrorList.addError("bankinfo_accountholder", new PZValidationException("bankinfo_accountholder",ErrorMessages.INVALID_BANKINFO_ACCOUNTHOLDER  + ":::" + bankProfileVO.getBankinfo_accountholder(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_accountholder("");
                    }
                    break;

                case bank_accountnumber_IBAN:
                    logger.debug("Account/IBAN number:::"+bankProfileVO.getBank_accountnumber_IBAN());
                    if (!ESAPI.validator().isValidInput("bank_accountnumber_IBAN", bankProfileVO.getBank_accountnumber_IBAN(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("bank_accountnumber_IBAN", new ValidationException("bank_accountnumber_IBAN", "Invalid Account number/IBAN Number :::" + bankProfileVO.getBank_accountnumber_IBAN(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANK_ACCOUNTNUMBER_IBAN);
                        validationErrorList.addError("bank_accountnumber_IBAN", new PZValidationException("bank_accountnumber_IBAN",ErrorMessages.INVALID_BANK_ACCOUNTNUMBER_IBAN  + ":::" + bankProfileVO.getBank_accountnumber_IBAN(),"4", errorCodeVO));
                        bankProfileVO.setBank_accountnumber_IBAN("");
                    }
                    break;

                //add new
                case bankcontactperson:
                    if (!ESAPI.validator().isValidInput("bankcontactperson", bankProfileVO.getBankcontactperson(), "StrictString", 50, isOptional))//new added
                    {
                        //validationErrorList.addError("bankcontactperson", new ValidationException("bankcontactperson", "Invalid bankcontactperson:::" + bankProfileVO.getBankcontactperson(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CONTACTPERSON);
                        validationErrorList.addError("bankcontactperson", new PZValidationException("bankcontactperson",ErrorMessages.INVALID_CONTACTPERSON  + ":::" + bankProfileVO.getBankcontactperson(),"4", errorCodeVO));
                        bankProfileVO.setBankcontactperson("");
                    }
                    break;
                case aquirer:
                    if (!ESAPI.validator().isValidInput("aquirer", bankProfileVO.getAquirer(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AQUIRER);
                        validationErrorList.addError("aquirer", new PZValidationException("aquirer",ErrorMessages.INVALID_AQUIRER + ":::" + bankProfileVO.getAquirer(),"4", errorCodeVO));
                        bankProfileVO.setAquirer("");
                    }
                    break;
                case reason_aquirer:
                    if (!ESAPI.validator().isValidInput("reason_aquirer", bankProfileVO.getReasonaquirer(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("reason_aquirer", new ValidationException("reason_aquirer", "Invalid reason_aquirer :::" + bankProfileVO.getReasonaquirer(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REASON_AQUIRER);
                        validationErrorList.addError("reason_aquirer", new PZValidationException("reason_aquirer",ErrorMessages.INVALID_REASON_AQUIRER  + ":::" + bankProfileVO.getReasonaquirer(),"4", errorCodeVO));
                        bankProfileVO.setReasonaquirer("");
                    }
                    break;

                //Processing  History
                case salesvolume_lastmonth:
                    if (!ESAPI.validator().isValidInput("salesvolume_lastmonth", bankProfileVO.getSalesvolume_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_lastmonth", new ValidationException("salesvolume_lastmonth", "Invalid salesvolume_lastmonth:::" + bankProfileVO.getSalesvolume_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_LASTMONTH);
                        validationErrorList.addError("salesvolume_lastmonth", new PZValidationException("salesvolume_lastmonth",ErrorMessages.INVALID_SALESVOLUME_LASTMONTH  + ":::" + bankProfileVO.getSalesvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_lastmonth("");
                    }
                    break;
                case salesvolume_2monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_2monthsago", bankProfileVO.getSalesvolume_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_2monthsago", new ValidationException("salesvolume_2monthsago", " Invalid salesvolume_2monthsago:::" + bankProfileVO.getSalesvolume_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_2MONTHSAGO);
                        validationErrorList.addError("salesvolume_2monthsago", new PZValidationException("salesvolume_2monthsago",ErrorMessages.INVALID_SALESVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_2monthsago("");
                    }
                    break;
                case salesvolume_3monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_3monthsago", bankProfileVO.getSalesvolume_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_3monthsago", new ValidationException("salesvolume_3monthsago", "Invalid salesvolume_3monthsago:::" + bankProfileVO.getSalesvolume_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_3MONTHSAGO);
                        validationErrorList.addError("salesvolume_3monthsago", new PZValidationException("salesvolume_3monthsago",ErrorMessages.INVALID_SALESVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_3monthsago("");
                    }
                    break;
                case salesvolume_4monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_4monthsago", bankProfileVO.getSalesvolume_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_4monthsago", new ValidationException("salesvolume_4monthsago", "Invalid salesvolume_4monthsago:::" + bankProfileVO.getSalesvolume_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_4MONTHSAGO);
                        validationErrorList.addError("salesvolume_4monthsago", new PZValidationException("salesvolume_4monthsago",ErrorMessages.INVALID_SALESVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_4monthsago("");
                    }
                    break;
                case salesvolume_5monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_5monthsago", bankProfileVO.getSalesvolume_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_5monthsago", new ValidationException("salesvolume_5monthsago", "Invalid salesvolume_5monthsago:::" + bankProfileVO.getSalesvolume_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_5MONTHSAGO);
                        validationErrorList.addError("salesvolume_5monthsago", new PZValidationException("salesvolume_5monthsago",ErrorMessages.INVALID_SALESVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_5monthsago("");
                    }
                    break;
                case salesvolume_6monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_6monthsago", bankProfileVO.getSalesvolume_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_6monthsago", new ValidationException("salesvolume_6monthsago", "Invalid salesvolume_6monthsago:::" + bankProfileVO.getSalesvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_6MONTHSAGO);
                        validationErrorList.addError("salesvolume_6monthsago", new PZValidationException("salesvolume_6monthsago",ErrorMessages.INVALID_SALESVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_6monthsago("");
                    }
                    break;
                case numberoftransactions_lastmonth:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_lastmonth", bankProfileVO.getNumberoftransactions_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_lastmonth", new ValidationException("numberoftransactions_lastmonth", "Invalid numberoftransactions_lastmonth:::" + bankProfileVO.getNumberoftransactions_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_LASTMONTH);
                        validationErrorList.addError("numberoftransactions_lastmonth", new PZValidationException("numberoftransactions_lastmonth",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_LASTMONTH  + ":::" + bankProfileVO.getNumberoftransactions_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_lastmonth("");
                    }
                    break;
                case numberoftransactions_2monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_2monthsago", bankProfileVO.getNumberoftransactions_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_2monthsago", new ValidationException("numberoftransactions_2monthsago", "Invalid numberoftransactions_2monthsago:::" + bankProfileVO.getNumberoftransactions_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_2MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_2monthsago", new PZValidationException("numberoftransactions_2monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_2MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_2monthsago("");
                    }
                    break;
                case numberoftransactions_3monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_3monthsago", bankProfileVO.getNumberoftransactions_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_3monthsago", new ValidationException("numberoftransactions_3monthsago", "Invalid numberoftransactions_3monthsago:::" + bankProfileVO.getNumberoftransactions_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_3MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_3monthsago", new PZValidationException("numberoftransactions_3monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_3MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_3monthsago("");
                    }
                    break;
                case numberoftransactions_4monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_4monthsago", bankProfileVO.getNumberoftransactions_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_4monthsago", new ValidationException("numberoftransactions_4monthsago", "Invalid numberoftransactions_4monthsago:::" + bankProfileVO.getNumberoftransactions_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_4MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_4monthsago", new PZValidationException("numberoftransactions_4monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_4MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_4monthsago("");
                    }
                    break;
                case numberoftransactions_5monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_5monthsago", bankProfileVO.getNumberoftransactions_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_5monthsago", new ValidationException("numberoftransactions_5monthsago", "Invalid numberoftransactions_5monthsago:::" + bankProfileVO.getNumberoftransactions_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_5MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_5monthsago", new PZValidationException("numberoftransactions_5monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_5MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_5monthsago("");
                    }
                    break;
                case numberoftransactions_6monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_6monthsago", bankProfileVO.getNumberoftransactions_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_6monthsago", new ValidationException("numberoftransactions_6monthsago", "Invalid numberoftransactions_6monthsago:::" + bankProfileVO.getNumberoftransactions_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_6MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_6monthsago", new PZValidationException("numberoftransactions_6monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_6MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_6monthsago("");
                    }
                    break;
                case chargebackvolume_lastmonth:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_lastmonth", bankProfileVO.getChargebackvolume_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_lastmonth", new ValidationException("chargebackvolume_lastmonth", "Invalid chargebackvolume_lastmonth:::" + bankProfileVO.getChargebackvolume_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_LASTMONTH);
                        validationErrorList.addError("chargebackvolume_lastmonth", new PZValidationException("chargebackvolume_lastmonth",ErrorMessages.INVALID_CHARGEBACKVOLUME_LASTMONTH  + ":::" + bankProfileVO.getChargebackvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_lastmonth("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getChargebackvolume_lastmonth()) && (Integer.parseInt(bankProfileVO.getSalesvolume_lastmonth()) < Integer.parseInt(bankProfileVO.getChargebackvolume_lastmonth())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_LASTMONTH);
                        validationErrorList.addError("chargebackvolume_lastmonth", new PZValidationException("chargebackvolume_lastmonth",ErrorMessages.INVALID_CHARGEBACKVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getChargebackvolume_lastmonth()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_lastmonth()) / Float.valueOf(bankProfileVO.getSalesvolume_lastmonth()))*100;
                        bankProfileVO.setChargebackratio_lastmonth(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_2monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_2monthsago", bankProfileVO.getChargebackvolume_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_2MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_2monthsago", new PZValidationException("chargebackvolume_2monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_2monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_2monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_2monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_2MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_2monthsago", new PZValidationException("chargebackvolume_2monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_2monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_2monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_2monthsago()))*100;
                        bankProfileVO.setChargebackratio_2monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_3monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_3monthsago", bankProfileVO.getChargebackvolume_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_3monthsago", new ValidationException("chargebackvolume_3monthsago", "Invalid chargebackvolume_3monthsago:::" + bankProfileVO.getChargebackvolume_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_3MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_3monthsago", new PZValidationException("chargebackvolume_3monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_3monthsago("");

                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_3monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_3monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_3monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_3MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_3monthsago", new PZValidationException("chargebackvolume_3monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_3monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_3monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_3monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_3monthsago()))*100;
                        bankProfileVO.setChargebackratio_3monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_4monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_4monthsago", bankProfileVO.getChargebackvolume_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_4monthsago", new ValidationException("chargebackvolume_4monthsago", "Invalid chargebackvolume_4monthsago:::" + bankProfileVO.getChargebackvolume_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_4MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_4monthsago", new PZValidationException("chargebackvolume_4monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_4monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_4monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_4monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_4monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_4MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_4monthsago", new PZValidationException("chargebackvolume_4monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_4monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_4monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_4monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_4monthsago()))*100;
                        bankProfileVO.setChargebackratio_4monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_5monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_5monthsago", bankProfileVO.getChargebackvolume_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_5monthsago", new ValidationException("chargebackvolume_5monthsago", "Invalid chargebackvolume_5monthsago:::" + bankProfileVO.getChargebackvolume_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_5MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_5monthsago", new PZValidationException("chargebackvolume_5monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_5monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_5monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_5monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_5monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_5MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_5monthsago", new PZValidationException("chargebackvolume_5monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_5monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_5monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_5monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_5monthsago()))*100;
                        bankProfileVO.setChargebackratio_5monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_6monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_6monthsago", bankProfileVO.getChargebackvolume_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_6monthsago", new ValidationException("chargebackvolume_6monthsago", "Invalid chargebackvolume_6monthsago:::" + bankProfileVO.getChargebackvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_6MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_6monthsago", new PZValidationException("chargebackvolume_6monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_6monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_6monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_6monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_6monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_6MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_6monthsago", new PZValidationException("chargebackvolume_6monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_6monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_6monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_6monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_6monthsago()))*100;
                        bankProfileVO.setChargebackratio_6monthsago(String.valueOf(cbkRatio));
                    }
                    break;

                case numberofchargebacks_lastmonth:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_lastmonth", bankProfileVO.getNumberofchargebacks_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_lastmonth", new ValidationException("numberofchargebacks_lastmonth", "Invalid numberofchargebacks_lastmonth:::" + bankProfileVO.getNumberofchargebacks_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_LASTMONTH);
                        validationErrorList.addError("numberofchargebacks_lastmonth", new PZValidationException("numberofchargebacks_lastmonth",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_LASTMONTH  + ":::" + bankProfileVO.getNumberofchargebacks_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_lastmonth("");
                    }
                    break;
                case numberofchargebacks_2monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_2monthsago", bankProfileVO.getNumberofchargebacks_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_2monthsago", new ValidationException("numberofchargebacks_2monthsago", "Invalid numberofchargebacks_2monthsago:::" + bankProfileVO.getNumberofchargebacks_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_2MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_2monthsago", new PZValidationException("numberofchargebacks_2monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_2MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_2monthsago("");
                    }
                    break;
                case numberofchargebacks_3monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_3monthsago", bankProfileVO.getNumberofchargebacks_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_3monthsago", new ValidationException("numberofchargebacks_3monthsago", "Invalid numberofchargebacks_3monthsago:::" + bankProfileVO.getNumberofchargebacks_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_3MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_3monthsago", new PZValidationException("numberofchargebacks_3monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_3MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_3monthsago("");
                    }
                    break;
                case numberofchargebacks_4monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_4monthsago", bankProfileVO.getNumberofchargebacks_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_4monthsago", new ValidationException("numberofchargebacks_4monthsago", "Invalid numberofchargebacks_4monthsago:::" + bankProfileVO.getNumberofchargebacks_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_4MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_4monthsago", new PZValidationException("numberofchargebacks_4monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_4MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_4monthsago("");
                    }
                    break;
                case numberofchargebacks_5monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_5monthsago", bankProfileVO.getNumberofchargebacks_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_5monthsago", new ValidationException("numberofchargebacks_5monthsago", "Invalid numberofchargebacks_5monthsago:::" + bankProfileVO.getNumberofchargebacks_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_5MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_5monthsago", new PZValidationException("numberofchargebacks_5monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_5MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_5monthsago("");
                    }
                    break;
                case numberofchargebacks_6monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_6monthsago", bankProfileVO.getNumberofchargebacks_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_6monthsago", new ValidationException("numberofchargebacks_6monthsago", "Invalid numberofchargebacks_6monthsago:::" + bankProfileVO.getNumberofchargebacks_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_6MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_6monthsago", new PZValidationException("numberofchargebacks_6monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_6MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_6monthsago("");
                    }
                    break;
                case refundsvolume_lastmonth:
                    if (!ESAPI.validator().isValidInput("refundsvolume_lastmonth", bankProfileVO.getRefundsvolume_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_lastmonth", new ValidationException("refundsvolume_lastmonth", "Invalid refundsvolume_lastmonth:::" + bankProfileVO.getRefundsvolume_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_LASTMONTH);
                        validationErrorList.addError("refundsvolume_lastmonth", new PZValidationException("refundsvolume_lastmonth",ErrorMessages.INVALID_REFUNDSVOLUME_LASTMONTH  + ":::" + bankProfileVO.getRefundsvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_lastmonth("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getRefundsvolume_lastmonth()) && (Integer.parseInt(bankProfileVO.getSalesvolume_lastmonth()) < Integer.parseInt(bankProfileVO.getRefundsvolume_lastmonth())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_LASTMONTH);
                        validationErrorList.addError("refundsvolume_lastmonth", new PZValidationException("refundsvolume_lastmonth",ErrorMessages.INVALID_REFUNDRATIO_LASTMONTH  + ":::" + bankProfileVO.getRefundsvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_lastmonth("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getRefundsvolume_lastmonth()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_lastmonth()) / Float.valueOf(bankProfileVO.getSalesvolume_lastmonth())) * 100;
                        bankProfileVO.setRefundratio_lastmonth(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_2monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_2monthsago", bankProfileVO.getRefundsvolume_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_2monthsago", new ValidationException("refundsvolume_2monthsago", "Invalid refundsvolume_2monthsago:::" + bankProfileVO.getRefundsvolume_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_2MONTHSAGO);
                        validationErrorList.addError("refundsvolume_2monthsago", new PZValidationException("refundsvolume_2monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_2monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_2monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_2monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_2MONTHSAGO);
                        validationErrorList.addError("refundsvolume_2monthsago", new PZValidationException("refundsvolume_2monthsago",ErrorMessages.INVALID_REFUNDRATIO_2MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_2monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_2monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_2monthsago())) * 100;
                        bankProfileVO.setRefundratio_2monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_3monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_3monthsago", bankProfileVO.getRefundsvolume_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_3monthsago", new ValidationException("refundsvolume_3monthsago", "Invalid refundsvolume_3monthsago:::" + bankProfileVO.getRefundsvolume_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_3MONTHSAGO);
                        validationErrorList.addError("refundsvolume_3monthsago", new PZValidationException("refundsvolume_3monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_3monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_3monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_3monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_3monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_3MONTHSAGO);
                        validationErrorList.addError("refundsvolume_3monthsago", new PZValidationException("refundsvolume_3monthsago",ErrorMessages.INVALID_REFUNDRATIO_3MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_3monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_3monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_3monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_3monthsago())) * 100;
                        bankProfileVO.setRefundratio_3monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_4monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_4monthsago", bankProfileVO.getRefundsvolume_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_4monthsago", new ValidationException("refundsvolume_4monthsago", "Invalid refundsvolume_4monthsago:::" + bankProfileVO.getRefundsvolume_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_4MONTHSAGO);
                        validationErrorList.addError("refundsvolume_4monthsago", new PZValidationException("refundsvolume_4monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_4monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_4monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_4monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_4monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_4MONTHSAGO);
                        validationErrorList.addError("refundsvolume_4monthsago", new PZValidationException("refundsvolume_4monthsago",ErrorMessages.INVALID_REFUNDRATIO_4MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_4monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_4monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_4monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_4monthsago())) * 100;
                        bankProfileVO.setRefundratio_4monthsago(String.valueOf(cbkRatio));
                    }
                    break;

                case refundsvolume_5monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_5monthsago", bankProfileVO.getRefundsvolume_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_5monthsago", new ValidationException("refundsvolume_5monthsago", "Invalid refundsvolume_5monthsago:::" + bankProfileVO.getRefundsvolume_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_5MONTHSAGO);
                        validationErrorList.addError("refundsvolume_5monthsago", new PZValidationException("refundsvolume_5monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_5monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_5monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_5monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_5monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_5MONTHSAGO);
                        validationErrorList.addError("refundsvolume_5monthsago", new PZValidationException("refundsvolume_5monthsago",ErrorMessages.INVALID_REFUNDRATIO_5MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_5monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_5monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_5monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_5monthsago())) * 100;
                        bankProfileVO.setRefundratio_5monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_6monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_6monthsago", bankProfileVO.getRefundsvolume_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_6monthsago", new ValidationException("refundsvolume_6monthsago", "Invalid refundsvolume_6monthsago:::" + bankProfileVO.getRefundsvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_6MONTHSAGO);
                        validationErrorList.addError("refundsvolume_6monthsago", new PZValidationException("refundsvolume_6monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_6monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_6monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_6monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_6monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_6MONTHSAGO);
                        validationErrorList.addError("refundsvolume_6monthsago", new PZValidationException("refundsvolume_6monthsago",ErrorMessages.INVALID_REFUNDRATIO_6MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_6monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_6monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_6monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_6monthsago())) * 100;
                        bankProfileVO.setRefundratio_6monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case numberofrefunds_lastmonth:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_lastmonth", bankProfileVO.getNumberofrefunds_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_lastmonth", new ValidationException("numberofrefunds_lastmonth", "Invalid numberofrefunds_lastmonth:::" + bankProfileVO.getNumberofrefunds_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_LASTMONTH);
                        validationErrorList.addError("numberofrefunds_lastmonth", new PZValidationException("numberofrefunds_lastmonth",ErrorMessages.INVALID_NUMBEROFREFUNDS_LASTMONTH  + ":::" + bankProfileVO.getNumberofrefunds_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_lastmonth("");
                    }
                    break;
                case numberofrefunds_2monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_2monthsago", bankProfileVO.getNumberofrefunds_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_2monthsago", new ValidationException("numberofrefunds_2monthsago", "Invalid numberofrefunds_2monthsago:::" + bankProfileVO.getNumberofrefunds_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_2MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_2monthsago", new PZValidationException("numberofrefunds_2monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_2MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_2monthsago("");
                    }
                    break;
                case numberofrefunds_3monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_3monthsago", bankProfileVO.getNumberofrefunds_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_3monthsago", new ValidationException("numberofrefunds_3monthsago", "Invalid numberofrefunds_3monthsago:::" + bankProfileVO.getNumberofrefunds_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_3MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_3monthsago", new PZValidationException("numberofrefunds_3monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_3MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_3monthsago("");
                    }
                    break;
                case numberofrefunds_4monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_4monthsago", bankProfileVO.getNumberofrefunds_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_4monthsago", new ValidationException("numberofrefunds_4monthsago", "Invalid numberofrefunds_4monthsago:::" + bankProfileVO.getNumberofrefunds_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_4MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_4monthsago", new PZValidationException("numberofrefunds_4monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_4MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_4monthsago("");
                    }
                    break;
                case numberofrefunds_5monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_5monthsago", bankProfileVO.getNumberofrefunds_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_5monthsago", new ValidationException("numberofrefunds_5monthsago", "Invalid numberofrefunds_5monthsago:::" + bankProfileVO.getNumberofrefunds_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_5MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_5monthsago", new PZValidationException("numberofrefunds_5monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_5MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_5monthsago("");
                    }
                    break;
                case numberofrefunds_6monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_6monthsago", bankProfileVO.getNumberofrefunds_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_6monthsago", new ValidationException("numberofrefunds_6monthsago", "Invalid numberofrefunds_6monthsago:::" + bankProfileVO.getNumberofrefunds_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_6MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_6monthsago", new PZValidationException("numberofrefunds_6monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_6MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_6monthsago("");
                    }
                    break;
                case chargebackratio_lastmonth:
                    if (!ESAPI.validator().isValidInput("chargebackratio_lastmonth", bankProfileVO.getChargebackratio_lastmonth(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_lastmonth", new ValidationException("chargebackratio_lastmonth", "Invalid chargebackratio_lastmonth:::" + bankProfileVO.getChargebackratio_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_LASTMONTH);
                        validationErrorList.addError("chargebackratio_lastmonth", new PZValidationException("chargebackratio_lastmonth",ErrorMessages.INVALID_CHARGEBACKRATIO_LASTMONTH  + ":::" + bankProfileVO.getChargebackratio_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_lastmonth("");
                    }
                    break;
                case chargebackratio_2monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_2monthsago", bankProfileVO.getChargebackratio_2monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_2monthsago", new ValidationException("chargebackratio_2monthsago", "Invalid chargebackratio_2monthsago:::" + bankProfileVO.getChargebackratio_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_2MONTHSAGO);
                        validationErrorList.addError("chargebackratio_2monthsago", new PZValidationException("chargebackratio_2monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_2monthsago("");
                    }
                    break;
                case chargebackratio_3monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_3monthsago", bankProfileVO.getChargebackratio_3monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_3monthsago", new ValidationException("chargebackratio_3monthsago", "Invalid chargebackratio_3monthsago:::" + bankProfileVO.getChargebackratio_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_3MONTHSAGO);
                        validationErrorList.addError("chargebackratio_3monthsago", new PZValidationException("chargebackratio_3monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_3MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_3monthsago("");
                    }
                    break;
                case chargebackratio_4monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_4monthsago", bankProfileVO.getChargebackratio_4monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_4monthsago", new ValidationException("chargebackratio_4monthsago", "Invalid chargebackratio_4monthsago:::" + bankProfileVO.getChargebackratio_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_4MONTHSAGO);
                        validationErrorList.addError("chargebackratio_4monthsago", new PZValidationException("chargebackratio_4monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_4MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_4monthsago("");
                    }
                    break;
                case chargebackratio_5monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_5monthsago", bankProfileVO.getChargebackratio_5monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_5monthsago", new ValidationException("chargebackratio_5monthsago", "Invalid chargebackratio_5monthsago:::" + bankProfileVO.getChargebackratio_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_5MONTHSAGO);
                        validationErrorList.addError("chargebackratio_5monthsago", new PZValidationException("chargebackratio_5monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_5MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_5monthsago("");
                    }
                    break;
                case chargebackratio_6monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_6monthsago", bankProfileVO.getChargebackratio_6monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_6monthsago", new ValidationException("chargebackratio_6monthsago", "Invalid chargebackratio_6monthsago:::" + bankProfileVO.getChargebackratio_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_6MONTHSAGO);
                        validationErrorList.addError("chargebackratio_6monthsago", new PZValidationException("chargebackratio_6monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_6MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_6monthsago("");
                    }
                    break;
                case refundratio_lastmonth:
                    if (!ESAPI.validator().isValidInput("refundratio_lastmonth", bankProfileVO.getRefundratio_lastmonth(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_lastmonth", new ValidationException("refundratio_lastmonth", "Invalid refundratio_lastmonth:::" + bankProfileVO.getRefundratio_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_LASTMONTH);
                        validationErrorList.addError("refundratio_lastmonth", new PZValidationException("refundratio_lastmonth",ErrorMessages.INVALID_REFUNDRATIO_LASTMONTH  + ":::" + bankProfileVO.getRefundratio_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_lastmonth("");
                    }
                    break;
                case refundratio_2monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_2monthsago", bankProfileVO.getRefundratio_2monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_2monthsago", new ValidationException("refundratio_2monthsago", "Invalid refundratio_2monthsago:::" + bankProfileVO.getRefundratio_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_2MONTHSAGO);
                        validationErrorList.addError("refundratio_2monthsago", new PZValidationException("refundratio_2monthsago",ErrorMessages.INVALID_REFUNDRATIO_2MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_2monthsago("");
                    }
                    break;
                case refundratio_3monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_3monthsago", bankProfileVO.getRefundratio_3monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_3monthsago", new ValidationException("refundratio_3monthsago", "Invalid refundratio_3monthsago:::" + bankProfileVO.getRefundratio_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_3MONTHSAGO);
                        validationErrorList.addError("refundratio_3monthsago", new PZValidationException("refundratio_3monthsago",ErrorMessages.INVALID_REFUNDRATIO_3MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_3monthsago("");
                    }
                    break;
                case refundratio_4monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_4monthsago", bankProfileVO.getRefundratio_4monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_4monthsago", new ValidationException("refundratio_4monthsago", "Invalid refundratio_4monthsago:::" + bankProfileVO.getRefundratio_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_4MONTHSAGO);
                        validationErrorList.addError("refundratio_4monthsago", new PZValidationException("refundratio_4monthsago",ErrorMessages.INVALID_REFUNDRATIO_4MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_4monthsago("");
                    }
                    break;
                case refundratio_5monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_5monthsago", bankProfileVO.getRefundratio_5monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_5monthsago", new ValidationException("refundratio_5monthsago", "Invalid refundratio_5monthsago:::" + bankProfileVO.getRefundratio_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_5MONTHSAGO);
                        validationErrorList.addError("refundratio_5monthsago", new PZValidationException("refundratio_5monthsago",ErrorMessages.INVALID_REFUNDRATIO_5MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_5monthsago("");
                    }
                    break;
                case refundratio_6monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_6monthsago", bankProfileVO.getRefundratio_6monthsago(), "alphanum", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_6monthsago", new ValidationException("refundratio_6monthsago", "Invalid refundratio_6monthsago:::" + bankProfileVO.getRefundratio_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_6MONTHSAGO);
                        validationErrorList.addError("refundratio_6monthsago", new PZValidationException("refundratio_6monthsago",ErrorMessages.INVALID_REFUNDRATIO_6MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_6monthsago("");
                    }
                    break;
            }
        }

        if(bankInputNameList.size()>0)
        {
            InputValidations(bankProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);
        }
    }*/

    //Application_Manager BankProfile Validator
    public void InputValidations(BankProfileVO bankProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList, boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMapARGS)
    {
        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();

        //THIS is FOR CONVERSION OF REFERENCE TO VALUE type
        Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap=new HashMap<Boolean,Set<BankInputName>>();

        Set<BankInputName> bankInputNameSet = null;
        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        if(bankInputNameBooleanMapARGS==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        else
        {
            if(bankInputNameBooleanMapARGS.containsKey(false))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(false));
                bankInputNameBooleanMap.put(false,bankInputNameSet);
            }

            if(bankInputNameBooleanMapARGS.containsKey(true))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(true));
                bankInputNameBooleanMap.put(true,bankInputNameSet);
            }

        }

        bankInputNameBooleanMapARGS= new HashMap<Boolean,Set<BankInputName>>();
        //TILL HERE

        for (BankInputName input : inputList)
        {
            switch (input)
            {
                case bank_account_currencies:
                    if (!ESAPI.validator().isValidInput("bank_account_currencies", bankProfileVO.getBank_account_currencies(), "AppGateway", 3000, isOptional))
                    {
                        //validationErrorList.addError("currency_products_USD", new ValidationException("currency_products_USD", "Invalid currency_products_USD:::" + bankProfileVO.getCurrency_products_USD(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANK_ACCOUNT_CURRENCY);
                        validationErrorList.addError("bank_account_currencies", new PZValidationException("bank_account_currencies",ErrorMessages.INVALID_BANK_ACCOUNT_CURRENCIES  + ":::" + bankProfileVO.getBank_account_currencies(),"5", errorCodeVO));
                        bankProfileVO.setBank_account_currencies("");
                    }
                    break;
                case bankinfo_bic:
                    if (!ESAPI.validator().isValidInput("bankinfo_bic", bankProfileVO.getBankinfo_bic(), "alphanum", 100, isOptional))
                    {
                        //validationErrorList.addError("bankinfo_bic", new ValidationException("bankinfo_bic", "Invalid SWIFT/BIC:::" + bankProfileVO.getBankinfo_bic(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BIC);
                        validationErrorList.addError("bankinfo_bic", new PZValidationException("bankinfo_bic",ErrorMessages.INVALID_BANKINFO_BIC  + ":::" + bankProfileVO.getBankinfo_bic(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bic("");
                    }
                    break;
                case bankinfo_bank_name:

                    if (!ESAPI.validator().isValidInput("bankinfo_bank_name", bankProfileVO.getBankinfo_bank_name(), "alphanum", 100, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("bankinfo_bank_name", new ValidationException("bankinfo_bank_name", "Invalid Bank Name:::" + bankProfileVO.getBankinfo_bank_name(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANK_NAME);
                        validationErrorList.addError("bankinfo_bank_name", new PZValidationException("bankinfo_bank_name",ErrorMessages.INVALID_BANKINFO_BANK_NAME  + ":::" + bankProfileVO.getBankinfo_bank_name(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bank_name("");
                    }
                    break;
                case bankinfo_bankaddress:
                    if (!ESAPI.validator().isValidInput("bankinfo_bankaddress", bankProfileVO.getBankinfo_bankaddress(), "Description", 255, isOptional))// isOptional to isOptional
                    {
                        //validationErrorList.addError("bankinfo_bankaddress", new ValidationException("bankinfo_bankaddress", "Invalid Bank Address:::" + bankProfileVO.getBankinfo_bankaddress(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANKADDRESS);
                        validationErrorList.addError("bankinfo_bankaddress", new PZValidationException("bankinfo_bankaddress",ErrorMessages.INVALID_BANKINFO_BANKADDRESS  + ":::" + bankProfileVO.getBankinfo_bankaddress(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bankaddress("");
                    }
                    break;

                case bankinfo_bankphonenumber:
                    if (!ESAPI.validator().isValidInput("bankinfo_bankphonenumber", bankProfileVO.getBankinfo_bankphonenumber(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("bankinfo_bankphonenumber", new ValidationException("bankinfo_bankphonenumber", "Invalid Bank Phone Number:::" + bankProfileVO.getBankinfo_bankphonenumber(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANKPHONENUMBER);
                        validationErrorList.addError("bankinfo_bankphonenumber", new PZValidationException("bankinfo_bankphonenumber",ErrorMessages.INVALID_BANKINFO_BANKPHONENUMBER  + ":::" + bankProfileVO.getBankinfo_bankphonenumber(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_bankphonenumber("");
                    }
                    break;

                case bankinfo_aba_routingcode:
                    if (!ESAPI.validator().isValidInput("bankinfo_aba_routingcode", bankProfileVO.getBankinfo_aba_routingcode(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("bankinfo_aba_routingcode", new ValidationException("bankinfo_aba_routingcode", "Invalid ABA routing code (US):::" + bankProfileVO.getBankinfo_aba_routingcode(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ABA_ROUTINGCODE);
                        validationErrorList.addError("bankinfo_aba_routingcode", new PZValidationException("bankinfo_aba_routingcode",ErrorMessages.INVALID_BANKINFO_ABA_ROUTINGCODE  + ":::" + bankProfileVO.getBankinfo_aba_routingcode(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_aba_routingcode("");
                    }
                    break;

                case bankinfo_accountholder:
                    if (!ESAPI.validator().isValidInput("bankinfo_accountholder", bankProfileVO.getBankinfo_accountholder(), "alphanum", 100, isOptional))// isOptional to isOptional, StrictString to alphanum
                    {
                        //validationErrorList.addError("bankinfo_accountholder", new ValidationException("bankinfo_accountholder", "Invalid Account Holder:::" + bankProfileVO.getBankinfo_accountholder(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ACCOUNTHOLDER);
                        validationErrorList.addError("bankinfo_accountholder", new PZValidationException("bankinfo_accountholder",ErrorMessages.INVALID_BANKINFO_ACCOUNTHOLDER  + ":::" + bankProfileVO.getBankinfo_accountholder(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_accountholder("");
                    }
                    break;

                case bankinfo_accountnumber:
                    logger.debug("Account/IBAN number:::"+bankProfileVO.getBankinfo_accountnumber());
                    if (!ESAPI.validator().isValidInput("bankinfo_accountnumber", bankProfileVO.getBankinfo_accountnumber(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("bank_accountnumber_IBAN", new ValidationException("bank_accountnumber_IBAN", "Invalid Account number/IBAN Number :::" + bankProfileVO.getBank_accountnumber_IBAN(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ACCOUNTNUMBER);
                        validationErrorList.addError("bankinfo_accountnumber", new PZValidationException("bankinfo_accountnumber",ErrorMessages.INVALID_BANKINFO_ACCOUNTNUMBER  + ":::" + bankProfileVO.getBankinfo_accountnumber(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_accountnumber("");
                    }
                    break;

                case bankinfo_IBAN:
                    logger.debug("Account/IBAN number:::"+bankProfileVO.getBankinfo_IBAN());
                    if (!ESAPI.validator().isValidInput("bankinfo_IBAN", bankProfileVO.getBankinfo_IBAN(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("bank_accountnumber_IBAN", new ValidationException("bank_accountnumber_IBAN", "Invalid Account number/IBAN Number :::" + bankProfileVO.getBank_accountnumber_IBAN(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_IBAN);
                        validationErrorList.addError("bankinfo_IBAN", new PZValidationException("bankinfo_IBAN",ErrorMessages.INVALID_BANKINFO_IBAN  + ":::" + bankProfileVO.getBankinfo_IBAN(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_IBAN("");
                    }
                    break;

                case bankinfo_currency:
                    //logger.debug("Account/IBAN number:::"+bankProfileVO.getBankinfo_accountnumber());
                    if (!ESAPI.validator().isValidInput("bankinfo_currency", bankProfileVO.getBankinfo_currency(), "StrictString", 3, isOptional))
                    {
                        //validationErrorList.addError("bank_accountnumber_IBAN", new ValidationException("bank_accountnumber_IBAN", "Invalid Account number/IBAN Number :::" + bankProfileVO.getBank_accountnumber_IBAN(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_CURRENCY);
                        validationErrorList.addError("bankinfo_currency", new PZValidationException("bankinfo_currency",ErrorMessages.INVALID_BANKINFO_CURRENCY  + ":::" + bankProfileVO.getBankinfo_currency(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_currency("");
                    }
                    break;

                //add new
                case bankinfo_contactperson:
                    if (!ESAPI.validator().isValidInput("bankinfo_contactperson", bankProfileVO.getBankinfo_contactperson(), "StrictString", 50, isOptional))//new added
                    {
                        //validationErrorList.addError("bankcontactperson", new ValidationException("bankcontactperson", "Invalid bankcontactperson:::" + bankProfileVO.getBankcontactperson(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_CONTACTPERSON);
                        validationErrorList.addError("bankinfo_contactperson", new PZValidationException("bankinfo_contactperson",ErrorMessages.INVALID_BANKINFO_CONTACTPERSON  + ":::" + bankProfileVO.getBankinfo_contactperson(),"4", errorCodeVO));
                        bankProfileVO.setBankinfo_contactperson("");
                    }
                    break;
                case aquirer:
                    if (!ESAPI.validator().isValidInput("aquirer", bankProfileVO.getAquirer(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_AQUIRER);
                        validationErrorList.addError("aquirer", new PZValidationException("aquirer",ErrorMessages.INVALID_AQUIRER + ":::" + bankProfileVO.getAquirer(),"4", errorCodeVO));
                        bankProfileVO.setAquirer("");
                    }
                    break;
                case reason_aquirer:
                    if (!ESAPI.validator().isValidInput("reason_aquirer", bankProfileVO.getReasonaquirer(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("reason_aquirer", new ValidationException("reason_aquirer", "Invalid reason_aquirer :::" + bankProfileVO.getReasonaquirer(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REASON_AQUIRER);
                        validationErrorList.addError("reason_aquirer", new PZValidationException("reason_aquirer",ErrorMessages.INVALID_REASON_AQUIRER  + ":::" + bankProfileVO.getReasonaquirer(),"4", errorCodeVO));
                        bankProfileVO.setReasonaquirer("");
                    }
                    break;

                case customer_trans_data:
                    if (!ESAPI.validator().isValidInput("customer_trans_data", bankProfileVO.getCustomer_trans_data(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("customer_trans_data", new ValidationException("customer_trans_data", "Invalid customer_trans_data :::" + bankProfileVO.getCustomer_trans_data(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_CUSTOMER_TRANS_DATA);
                        validationErrorList.addError("customer_trans_data", new PZValidationException("customer_trans_data",ErrorMessages.INVALID_CUSTOMER_TRANS_DATA  + ":::" + bankProfileVO.getCustomer_trans_data(),"4", errorCodeVO));
                        bankProfileVO.setCustomer_trans_data("");
                    }
                    break;

                //Processing  History
                //USD
                case salesvolume_lastmonth:
                    if (!ESAPI.validator().isValidInput("salesvolume_lastmonth", bankProfileVO.getSalesvolume_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_lastmonth", new ValidationException("salesvolume_lastmonth", "Invalid salesvolume_lastmonth:::" + bankProfileVO.getSalesvolume_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_LASTMONTH);
                        validationErrorList.addError("salesvolume_lastmonth", new PZValidationException("salesvolume_lastmonth",ErrorMessages.INVALID_SALESVOLUME_LASTMONTH  + ":::" + bankProfileVO.getSalesvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_lastmonth("");
                    }
                    break;
                case salesvolume_2monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_2monthsago", bankProfileVO.getSalesvolume_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_2monthsago", new ValidationException("salesvolume_2monthsago", " Invalid salesvolume_2monthsago:::" + bankProfileVO.getSalesvolume_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_2MONTHSAGO);
                        validationErrorList.addError("salesvolume_2monthsago", new PZValidationException("salesvolume_2monthsago",ErrorMessages.INVALID_SALESVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_2monthsago("");
                    }
                    break;
                case salesvolume_3monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_3monthsago", bankProfileVO.getSalesvolume_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_3monthsago", new ValidationException("salesvolume_3monthsago", "Invalid salesvolume_3monthsago:::" + bankProfileVO.getSalesvolume_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_3MONTHSAGO);
                        validationErrorList.addError("salesvolume_3monthsago", new PZValidationException("salesvolume_3monthsago",ErrorMessages.INVALID_SALESVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_3monthsago("");
                    }
                    break;
                case salesvolume_4monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_4monthsago", bankProfileVO.getSalesvolume_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_4monthsago", new ValidationException("salesvolume_4monthsago", "Invalid salesvolume_4monthsago:::" + bankProfileVO.getSalesvolume_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_4MONTHSAGO);
                        validationErrorList.addError("salesvolume_4monthsago", new PZValidationException("salesvolume_4monthsago",ErrorMessages.INVALID_SALESVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_4monthsago("");
                    }
                    break;
                case salesvolume_5monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_5monthsago", bankProfileVO.getSalesvolume_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_5monthsago", new ValidationException("salesvolume_5monthsago", "Invalid salesvolume_5monthsago:::" + bankProfileVO.getSalesvolume_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_5MONTHSAGO);
                        validationErrorList.addError("salesvolume_5monthsago", new PZValidationException("salesvolume_5monthsago",ErrorMessages.INVALID_SALESVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_5monthsago("");
                    }
                    break;
                case salesvolume_6monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_6monthsago", bankProfileVO.getSalesvolume_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_6monthsago", new ValidationException("salesvolume_6monthsago", "Invalid salesvolume_6monthsago:::" + bankProfileVO.getSalesvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_6MONTHSAGO);
                        validationErrorList.addError("salesvolume_6monthsago", new PZValidationException("salesvolume_6monthsago",ErrorMessages.INVALID_SALESVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_6monthsago("");
                    }
                    break;
                case salesvolume_12monthsago:
                    if (!ESAPI.validator().isValidInput("salesvolume_12monthsago", bankProfileVO.getSalesvolume_12monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_6monthsago", new ValidationException("salesvolume_6monthsago", "Invalid salesvolume_6monthsago:::" + bankProfileVO.getSalesvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_12MONTHSAGO);
                        validationErrorList.addError("salesvolume_12monthsago", new PZValidationException("salesvolume_12monthsago",ErrorMessages.INVALID_SALESVOLUME_12MONTHSAGO  + ":::" + bankProfileVO.getSalesvolume_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_12monthsago("");
                    }
                    break;
                case salesvolume_year2:
                    if (!ESAPI.validator().isValidInput("salesvolume_year2", bankProfileVO.getSalesvolume_year2(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_6monthsago", new ValidationException("salesvolume_6monthsago", "Invalid salesvolume_6monthsago:::" + bankProfileVO.getSalesvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_YEAR2);
                        validationErrorList.addError("salesvolume_year2", new PZValidationException("salesvolume_year2",ErrorMessages.INVALID_SALESVOLUME_YEAR2  + ":::" + bankProfileVO.getSalesvolume_year2(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_year2("");
                    }
                    break;
                case salesvolume_year3:
                    if (!ESAPI.validator().isValidInput("salesvolume_year3", bankProfileVO.getSalesvolume_year3(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("salesvolume_6monthsago", new ValidationException("salesvolume_6monthsago", "Invalid salesvolume_6monthsago:::" + bankProfileVO.getSalesvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SALESVOLUME_YEAR3);
                        validationErrorList.addError("salesvolume_year3", new PZValidationException("salesvolume_year3",ErrorMessages.INVALID_SALESVOLUME_YEAR3  + ":::" + bankProfileVO.getSalesvolume_year3(),"4", errorCodeVO));
                        bankProfileVO.setSalesvolume_year3("");
                    }
                    break;
                case numberoftransactions_lastmonth:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_lastmonth", bankProfileVO.getNumberoftransactions_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_lastmonth", new ValidationException("numberoftransactions_lastmonth", "Invalid numberoftransactions_lastmonth:::" + bankProfileVO.getNumberoftransactions_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_LASTMONTH);
                        validationErrorList.addError("numberoftransactions_lastmonth", new PZValidationException("numberoftransactions_lastmonth",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_LASTMONTH  + ":::" + bankProfileVO.getNumberoftransactions_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_lastmonth("");
                    }
                    break;
                case numberoftransactions_2monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_2monthsago", bankProfileVO.getNumberoftransactions_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_2monthsago", new ValidationException("numberoftransactions_2monthsago", "Invalid numberoftransactions_2monthsago:::" + bankProfileVO.getNumberoftransactions_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_2MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_2monthsago", new PZValidationException("numberoftransactions_2monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_2MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_2monthsago("");
                    }
                    break;
                case numberoftransactions_3monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_3monthsago", bankProfileVO.getNumberoftransactions_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_3monthsago", new ValidationException("numberoftransactions_3monthsago", "Invalid numberoftransactions_3monthsago:::" + bankProfileVO.getNumberoftransactions_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_3MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_3monthsago", new PZValidationException("numberoftransactions_3monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_3MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_3monthsago("");
                    }
                    break;
                case numberoftransactions_4monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_4monthsago", bankProfileVO.getNumberoftransactions_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_4monthsago", new ValidationException("numberoftransactions_4monthsago", "Invalid numberoftransactions_4monthsago:::" + bankProfileVO.getNumberoftransactions_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_4MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_4monthsago", new PZValidationException("numberoftransactions_4monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_4MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_4monthsago("");
                    }
                    break;
                case numberoftransactions_5monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_5monthsago", bankProfileVO.getNumberoftransactions_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_5monthsago", new ValidationException("numberoftransactions_5monthsago", "Invalid numberoftransactions_5monthsago:::" + bankProfileVO.getNumberoftransactions_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_5MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_5monthsago", new PZValidationException("numberoftransactions_5monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_5MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_5monthsago("");
                    }
                    break;
                case numberoftransactions_6monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_6monthsago", bankProfileVO.getNumberoftransactions_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_6monthsago", new ValidationException("numberoftransactions_6monthsago", "Invalid numberoftransactions_6monthsago:::" + bankProfileVO.getNumberoftransactions_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_6MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_6monthsago", new PZValidationException("numberoftransactions_6monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_6MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_6monthsago("");
                    }
                    break;
                case numberoftransactions_12monthsago:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_12monthsago", bankProfileVO.getNumberoftransactions_12monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_6monthsago", new ValidationException("numberoftransactions_6monthsago", "Invalid numberoftransactions_6monthsago:::" + bankProfileVO.getNumberoftransactions_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_12MONTHSAGO);
                        validationErrorList.addError("numberoftransactions_12monthsago", new PZValidationException("numberoftransactions_12monthsago",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_12MONTHSAGO  + ":::" + bankProfileVO.getNumberoftransactions_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_12monthsago("");
                    }
                    break;
                case numberoftransactions_year2:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_year2", bankProfileVO.getNumberoftransactions_year2(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_6monthsago", new ValidationException("numberoftransactions_6monthsago", "Invalid numberoftransactions_6monthsago:::" + bankProfileVO.getNumberoftransactions_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_YEAR2);
                        validationErrorList.addError("numberoftransactions_year2", new PZValidationException("numberoftransactions_year2",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_YEAR2  + ":::" + bankProfileVO.getNumberoftransactions_year2(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_year2("");
                    }
                    break;
                case numberoftransactions_year3:
                    if (!ESAPI.validator().isValidInput("numberoftransactions_year3", bankProfileVO.getNumberoftransactions_year3(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberoftransactions_6monthsago", new ValidationException("numberoftransactions_6monthsago", "Invalid numberoftransactions_6monthsago:::" + bankProfileVO.getNumberoftransactions_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFTRANSACTIONS_YEAR3);
                        validationErrorList.addError("numberoftransactions_year3", new PZValidationException("numberoftransactions_year3",ErrorMessages.INVALID_NUMBEROFTRANSACTIONS_YEAR3  + ":::" + bankProfileVO.getNumberoftransactions_year3(),"4", errorCodeVO));
                        bankProfileVO.setNumberoftransactions_year3("");
                    }
                    break;
                case chargebackvolume_lastmonth:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_lastmonth", bankProfileVO.getChargebackvolume_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_lastmonth", new ValidationException("chargebackvolume_lastmonth", "Invalid chargebackvolume_lastmonth:::" + bankProfileVO.getChargebackvolume_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_LASTMONTH);
                        validationErrorList.addError("chargebackvolume_lastmonth", new PZValidationException("chargebackvolume_lastmonth",ErrorMessages.INVALID_CHARGEBACKVOLUME_LASTMONTH  + ":::" + bankProfileVO.getChargebackvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_lastmonth("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getChargebackvolume_lastmonth()) && (Integer.parseInt(bankProfileVO.getSalesvolume_lastmonth()) < Integer.parseInt(bankProfileVO.getChargebackvolume_lastmonth())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_LASTMONTH);
                        validationErrorList.addError("chargebackvolume_lastmonth", new PZValidationException("chargebackvolume_lastmonth",ErrorMessages.INVALID_CHARGEBACKVOLUME_LASTMONTH  + ":::" + bankProfileVO.getChargebackvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_lastmonth("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getChargebackvolume_lastmonth()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_lastmonth()) / Float.valueOf(bankProfileVO.getSalesvolume_lastmonth()))*100;
                        bankProfileVO.setChargebackratio_lastmonth(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_2monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_2monthsago", bankProfileVO.getChargebackvolume_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_2MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_2monthsago", new PZValidationException("chargebackvolume_2monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_2monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_2monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_2monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_2MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_2monthsago", new PZValidationException("chargebackvolume_2monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_2monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_2monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_2monthsago()))*100;
                        bankProfileVO.setChargebackratio_2monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_3monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_3monthsago", bankProfileVO.getChargebackvolume_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_3monthsago", new ValidationException("chargebackvolume_3monthsago", "Invalid chargebackvolume_3monthsago:::" + bankProfileVO.getChargebackvolume_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_3MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_3monthsago", new PZValidationException("chargebackvolume_3monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_3monthsago("");

                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_3monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_3monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_3monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_3MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_3monthsago", new PZValidationException("chargebackvolume_3monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_3monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_3monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_3monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_3monthsago()))*100;
                        bankProfileVO.setChargebackratio_3monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_4monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_4monthsago", bankProfileVO.getChargebackvolume_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_4monthsago", new ValidationException("chargebackvolume_4monthsago", "Invalid chargebackvolume_4monthsago:::" + bankProfileVO.getChargebackvolume_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_4MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_4monthsago", new PZValidationException("chargebackvolume_4monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_4monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_4monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_4monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_4monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_4MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_4monthsago", new PZValidationException("chargebackvolume_4monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_4monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_4monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_4monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_4monthsago()))*100;
                        bankProfileVO.setChargebackratio_4monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_5monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_5monthsago", bankProfileVO.getChargebackvolume_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_5monthsago", new ValidationException("chargebackvolume_5monthsago", "Invalid chargebackvolume_5monthsago:::" + bankProfileVO.getChargebackvolume_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_5MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_5monthsago", new PZValidationException("chargebackvolume_5monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_5monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_5monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_5monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_5monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_5MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_5monthsago", new PZValidationException("chargebackvolume_5monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_5monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_5monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_5monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_5monthsago()))*100;
                        bankProfileVO.setChargebackratio_5monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_6monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_6monthsago", bankProfileVO.getChargebackvolume_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_6monthsago", new ValidationException("chargebackvolume_6monthsago", "Invalid chargebackvolume_6monthsago:::" + bankProfileVO.getChargebackvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_6MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_6monthsago", new PZValidationException("chargebackvolume_6monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_6monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_6monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_6monthsago()) < Integer.parseInt(bankProfileVO.getChargebackvolume_6monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_6MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_6monthsago", new PZValidationException("chargebackvolume_6monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_6monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_6monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_6monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_6monthsago()))*100;
                        bankProfileVO.setChargebackratio_6monthsago(String.valueOf(cbkRatio));
                    }
                    break;

                case chargebackvolume_12monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_12monthsago", bankProfileVO.getChargebackvolume_12monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_12monthsago", new ValidationException("chargebackvolume_12monthsago", "Invalid chargebackvolume_12monthsago:::" + bankProfileVO.getChargebackvolume_12monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_12MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_12monthsago", new PZValidationException("chargebackvolume_12monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_12MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_12monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_12monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_12monthsago()) && (Double.parseDouble(bankProfileVO.getSalesvolume_12monthsago()) < Double.parseDouble(bankProfileVO.getChargebackvolume_12monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_12MONTHSAGO);
                        validationErrorList.addError("chargebackvolume_12monthsago", new PZValidationException("chargebackvolume_12monthsago",ErrorMessages.INVALID_CHARGEBACKVOLUME_12MONTHSAGO  + ":::" + bankProfileVO.getChargebackvolume_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_12monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_12monthsago()) && functions.isValueNull(bankProfileVO.getChargebackvolume_12monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_12monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_12monthsago()))*100;
                        bankProfileVO.setChargebackratio_12monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_year2:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_year2", bankProfileVO.getChargebackvolume_year2(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_year2", new ValidationException("chargebackvolume_year2", "Invalid chargebackvolume_year2:::" + bankProfileVO.getChargebackvolume_year2(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_YEAR2);
                        validationErrorList.addError("chargebackvolume_year2", new PZValidationException("chargebackvolume_year2",ErrorMessages.INVALID_CHARGEBACKVOLUME_YEAR2  + ":::" + bankProfileVO.getChargebackvolume_year2(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_year2("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_year2()) && functions.isValueNull(bankProfileVO.getChargebackvolume_year2()) && (Integer.parseInt(bankProfileVO.getSalesvolume_year2()) < Integer.parseInt(bankProfileVO.getChargebackvolume_year2())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_YEAR2);
                        validationErrorList.addError("chargebackvolume_year2", new PZValidationException("chargebackvolume_year2",ErrorMessages.INVALID_CHARGEBACKVOLUME_YEAR2  + ":::" + bankProfileVO.getChargebackvolume_year2(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_year2("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_year2()) && functions.isValueNull(bankProfileVO.getChargebackvolume_year2()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_year2()) / Float.valueOf(bankProfileVO.getSalesvolume_year2()))*100;
                        bankProfileVO.setChargebackratio_year2(String.valueOf(cbkRatio));
                    }
                    break;
                case chargebackvolume_year3:
                    if (!ESAPI.validator().isValidInput("chargebackvolume_year3", bankProfileVO.getChargebackvolume_year3(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackvolume_year3", new ValidationException("chargebackvolume_year3", "Invalid chargebackvolume_year3:::" + bankProfileVO.getChargebackvolume_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKVOLUME_YEAR3);
                        validationErrorList.addError("chargebackvolume_year3", new PZValidationException("chargebackvolume_year3",ErrorMessages.INVALID_CHARGEBACKVOLUME_YEAR3  + ":::" + bankProfileVO.getChargebackvolume_year3(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_year3("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_year3()) && functions.isValueNull(bankProfileVO.getChargebackvolume_year3()) && (Integer.parseInt(bankProfileVO.getSalesvolume_year3()) < Integer.parseInt(bankProfileVO.getChargebackvolume_year3())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_YEAR3);
                        validationErrorList.addError("chargebackvolume_year3", new PZValidationException("chargebackvolume_year3",ErrorMessages.INVALID_CHARGEBACKVOLUME_YEAR3  + ":::" + bankProfileVO.getChargebackvolume_year3(),"4", errorCodeVO));
                        bankProfileVO.setChargebackvolume_year3("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_year3()) && functions.isValueNull(bankProfileVO.getChargebackvolume_year3()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getChargebackvolume_year3()) / Float.valueOf(bankProfileVO.getSalesvolume_year3()))*100;
                        bankProfileVO.setChargebackratio_year3(String.valueOf(cbkRatio));
                    }
                    break;
                case numberofchargebacks_lastmonth:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_lastmonth", bankProfileVO.getNumberofchargebacks_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_lastmonth", new ValidationException("numberofchargebacks_lastmonth", "Invalid numberofchargebacks_lastmonth:::" + bankProfileVO.getNumberofchargebacks_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_LASTMONTH);
                        validationErrorList.addError("numberofchargebacks_lastmonth", new PZValidationException("numberofchargebacks_lastmonth",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_LASTMONTH  + ":::" + bankProfileVO.getNumberofchargebacks_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_lastmonth("");
                    }
                    break;
                case numberofchargebacks_2monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_2monthsago", bankProfileVO.getNumberofchargebacks_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_2monthsago", new ValidationException("numberofchargebacks_2monthsago", "Invalid numberofchargebacks_2monthsago:::" + bankProfileVO.getNumberofchargebacks_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_2MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_2monthsago", new PZValidationException("numberofchargebacks_2monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_2MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_2monthsago("");
                    }
                    break;
                case numberofchargebacks_3monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_3monthsago", bankProfileVO.getNumberofchargebacks_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_3monthsago", new ValidationException("numberofchargebacks_3monthsago", "Invalid numberofchargebacks_3monthsago:::" + bankProfileVO.getNumberofchargebacks_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_3MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_3monthsago", new PZValidationException("numberofchargebacks_3monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_3MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_3monthsago("");
                    }
                    break;
                case numberofchargebacks_4monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_4monthsago", bankProfileVO.getNumberofchargebacks_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_4monthsago", new ValidationException("numberofchargebacks_4monthsago", "Invalid numberofchargebacks_4monthsago:::" + bankProfileVO.getNumberofchargebacks_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_4MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_4monthsago", new PZValidationException("numberofchargebacks_4monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_4MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_4monthsago("");
                    }
                    break;
                case numberofchargebacks_5monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_5monthsago", bankProfileVO.getNumberofchargebacks_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_5monthsago", new ValidationException("numberofchargebacks_5monthsago", "Invalid numberofchargebacks_5monthsago:::" + bankProfileVO.getNumberofchargebacks_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_5MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_5monthsago", new PZValidationException("numberofchargebacks_5monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_5MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_5monthsago("");
                    }
                    break;
                case numberofchargebacks_6monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_6monthsago", bankProfileVO.getNumberofchargebacks_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_6monthsago", new ValidationException("numberofchargebacks_6monthsago", "Invalid numberofchargebacks_6monthsago:::" + bankProfileVO.getNumberofchargebacks_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_6MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_6monthsago", new PZValidationException("numberofchargebacks_6monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_6MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_6monthsago("");
                    }
                    break;
                case numberofchargebacks_12monthsago:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_12monthsago", bankProfileVO.getNumberofchargebacks_12monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_12monthsago", new ValidationException("numberofchargebacks_12monthsago", "Invalid numberofchargebacks_12monthsago:::" + bankProfileVO.getNumberofchargebacks_12monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_12MONTHSAGO);
                        validationErrorList.addError("numberofchargebacks_12monthsago", new PZValidationException("numberofchargebacks_12monthsago",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_12MONTHSAGO  + ":::" + bankProfileVO.getNumberofchargebacks_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_12monthsago("");
                    }
                    break;
                case numberofchargebacks_year2:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_year2", bankProfileVO.getNumberofchargebacks_year2(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_year2", new ValidationException("numberofchargebacks_year2", "Invalid numberofchargebacks_12monthsago:::" + bankProfileVO.getNumberofchargebacks_year2(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_YEAR2);
                        validationErrorList.addError("numberofchargebacks_year2", new PZValidationException("numberofchargebacks_year2",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_YEAR2  + ":::" + bankProfileVO.getNumberofchargebacks_year2(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_year2("");
                    }
                    break;
                case numberofchargebacks_year3:
                    if (!ESAPI.validator().isValidInput("numberofchargebacks_year3", bankProfileVO.getNumberofchargebacks_year3(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofchargebacks_year3", new ValidationException("numberofchargebacks_year3", "Invalid numberofchargebacks_year3:::" + bankProfileVO.getNumberofchargebacks_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFCHARGEBACKS_YEAR3);
                        validationErrorList.addError("numberofchargebacks_year3", new PZValidationException("numberofchargebacks_year3",ErrorMessages.INVALID_NUMBEROFCHARGEBACKS_YEAR3  + ":::" + bankProfileVO.getNumberofchargebacks_year3(),"4", errorCodeVO));
                        bankProfileVO.setNumberofchargebacks_year3("");
                    }
                    break;
                case refundsvolume_lastmonth:
                    if (!ESAPI.validator().isValidInput("refundsvolume_lastmonth", bankProfileVO.getRefundsvolume_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_lastmonth", new ValidationException("refundsvolume_lastmonth", "Invalid refundsvolume_lastmonth:::" + bankProfileVO.getRefundsvolume_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_LASTMONTH);
                        validationErrorList.addError("refundsvolume_lastmonth", new PZValidationException("refundsvolume_lastmonth",ErrorMessages.INVALID_REFUNDSVOLUME_LASTMONTH  + ":::" + bankProfileVO.getRefundsvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_lastmonth("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getRefundsvolume_lastmonth()) && (Integer.parseInt(bankProfileVO.getSalesvolume_lastmonth()) < Integer.parseInt(bankProfileVO.getRefundsvolume_lastmonth())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_LASTMONTH);
                        validationErrorList.addError("refundsvolume_lastmonth", new PZValidationException("refundsvolume_lastmonth",ErrorMessages.INVALID_REFUNDRATIO_LASTMONTH  + ":::" + bankProfileVO.getRefundsvolume_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_lastmonth("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_lastmonth()) && functions.isValueNull(bankProfileVO.getRefundsvolume_lastmonth()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_lastmonth()) / Float.valueOf(bankProfileVO.getSalesvolume_lastmonth())) * 100;
                        bankProfileVO.setRefundratio_lastmonth(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_2monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_2monthsago", bankProfileVO.getRefundsvolume_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_2monthsago", new ValidationException("refundsvolume_2monthsago", "Invalid refundsvolume_2monthsago:::" + bankProfileVO.getRefundsvolume_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_2MONTHSAGO);
                        validationErrorList.addError("refundsvolume_2monthsago", new PZValidationException("refundsvolume_2monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_2MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_2monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_2monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_2monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_2MONTHSAGO);
                        validationErrorList.addError("refundsvolume_2monthsago", new PZValidationException("refundsvolume_2monthsago",ErrorMessages.INVALID_REFUNDRATIO_2MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_2monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_2monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_2monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_2monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_2monthsago())) * 100;
                        bankProfileVO.setRefundratio_2monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_3monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_3monthsago", bankProfileVO.getRefundsvolume_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_3monthsago", new ValidationException("refundsvolume_3monthsago", "Invalid refundsvolume_3monthsago:::" + bankProfileVO.getRefundsvolume_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_3MONTHSAGO);
                        validationErrorList.addError("refundsvolume_3monthsago", new PZValidationException("refundsvolume_3monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_3MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_3monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_3monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_3monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_3monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_3MONTHSAGO);
                        validationErrorList.addError("refundsvolume_3monthsago", new PZValidationException("refundsvolume_3monthsago",ErrorMessages.INVALID_REFUNDRATIO_3MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_3monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_3monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_3monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_3monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_3monthsago())) * 100;
                        bankProfileVO.setRefundratio_3monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_4monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_4monthsago", bankProfileVO.getRefundsvolume_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_4monthsago", new ValidationException("refundsvolume_4monthsago", "Invalid refundsvolume_4monthsago:::" + bankProfileVO.getRefundsvolume_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_4MONTHSAGO);
                        validationErrorList.addError("refundsvolume_4monthsago", new PZValidationException("refundsvolume_4monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_4MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_4monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_4monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_4monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_4monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_4MONTHSAGO);
                        validationErrorList.addError("refundsvolume_4monthsago", new PZValidationException("refundsvolume_4monthsago",ErrorMessages.INVALID_REFUNDRATIO_4MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_4monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_4monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_4monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_4monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_4monthsago())) * 100;
                        bankProfileVO.setRefundratio_4monthsago(String.valueOf(cbkRatio));
                    }
                    break;

                case refundsvolume_5monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_5monthsago", bankProfileVO.getRefundsvolume_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_5monthsago", new ValidationException("refundsvolume_5monthsago", "Invalid refundsvolume_5monthsago:::" + bankProfileVO.getRefundsvolume_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_5MONTHSAGO);
                        validationErrorList.addError("refundsvolume_5monthsago", new PZValidationException("refundsvolume_5monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_5MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_5monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_5monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_5monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_5monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_5MONTHSAGO);
                        validationErrorList.addError("refundsvolume_5monthsago", new PZValidationException("refundsvolume_5monthsago",ErrorMessages.INVALID_REFUNDRATIO_5MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_5monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_5monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_5monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_5monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_5monthsago())) * 100;
                        bankProfileVO.setRefundratio_5monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_6monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_6monthsago", bankProfileVO.getRefundsvolume_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_6monthsago", new ValidationException("refundsvolume_6monthsago", "Invalid refundsvolume_6monthsago:::" + bankProfileVO.getRefundsvolume_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_6MONTHSAGO);
                        validationErrorList.addError("refundsvolume_6monthsago", new PZValidationException("refundsvolume_6monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_6MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_6monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_6monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_6monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_6monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_6MONTHSAGO);
                        validationErrorList.addError("refundsvolume_6monthsago", new PZValidationException("refundsvolume_6monthsago",ErrorMessages.INVALID_REFUNDRATIO_6MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_6monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_6monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_6monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_6monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_6monthsago())) * 100;
                        bankProfileVO.setRefundratio_6monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_12monthsago:
                    if (!ESAPI.validator().isValidInput("refundsvolume_12monthsago", bankProfileVO.getRefundsvolume_12monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_12monthsago", new ValidationException("refundsvolume_12monthsago", "Invalid refundsvolume_12monthsago:::" + bankProfileVO.getRefundsvolume_12monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_12MONTHSAGO);
                        validationErrorList.addError("refundsvolume_12monthsago", new PZValidationException("refundsvolume_12monthsago",ErrorMessages.INVALID_REFUNDSVOLUME_12MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_12monthsago("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_12monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_12monthsago()) && (Integer.parseInt(bankProfileVO.getSalesvolume_12monthsago()) < Integer.parseInt(bankProfileVO.getRefundsvolume_12monthsago())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_12MONTHSAGO);
                        validationErrorList.addError("refundsvolume_12monthsago", new PZValidationException("refundsvolume_12monthsago",ErrorMessages.INVALID_REFUNDRATIO_12MONTHSAGO  + ":::" + bankProfileVO.getRefundsvolume_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_12monthsago("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_12monthsago()) && functions.isValueNull(bankProfileVO.getRefundsvolume_12monthsago()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_12monthsago()) / Float.valueOf(bankProfileVO.getSalesvolume_12monthsago())) * 100;
                        bankProfileVO.setRefundratio_12monthsago(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_year2:
                    if (!ESAPI.validator().isValidInput("refundsvolume_year2", bankProfileVO.getRefundsvolume_year2(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_year2", new ValidationException("refundsvolume_year2", "Invalid refundsvolume_year2:::" + bankProfileVO.getRefundsvolume_year2(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_YEAR2);
                        validationErrorList.addError("refundsvolume_year2", new PZValidationException("refundsvolume_year2",ErrorMessages.INVALID_REFUNDSVOLUME_YEAR2  + ":::" + bankProfileVO.getRefundsvolume_year2(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_year2("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_year2()) && functions.isValueNull(bankProfileVO.getRefundsvolume_year2()) && (Integer.parseInt(bankProfileVO.getSalesvolume_year2()) < Integer.parseInt(bankProfileVO.getRefundsvolume_year2())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_YEAR2);
                        validationErrorList.addError("refundsvolume_year2", new PZValidationException("refundsvolume_year2",ErrorMessages.INVALID_REFUNDRATIO_YEAR2  + ":::" + bankProfileVO.getRefundsvolume_year2(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_year2("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_year2()) && functions.isValueNull(bankProfileVO.getRefundsvolume_year2()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_year2()) / Float.valueOf(bankProfileVO.getSalesvolume_year2())) * 100;
                        bankProfileVO.setRefundratio_year2(String.valueOf(cbkRatio));
                    }
                    break;
                case refundsvolume_year3:
                    if (!ESAPI.validator().isValidInput("refundsvolume_year3", bankProfileVO.getRefundsvolume_year3(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundsvolume_year3", new ValidationException("refundsvolume_year3", "Invalid refundsvolume_year3:::" + bankProfileVO.getRefundsvolume_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDSVOLUME_YEAR3);
                        validationErrorList.addError("refundsvolume_year3", new PZValidationException("refundsvolume_year3",ErrorMessages.INVALID_REFUNDSVOLUME_YEAR3  + ":::" + bankProfileVO.getRefundsvolume_year3(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_year3("");
                    }
                    else if(functions.isValueNull(bankProfileVO.getSalesvolume_year3()) && functions.isValueNull(bankProfileVO.getRefundsvolume_year3()) && (Integer.parseInt(bankProfileVO.getSalesvolume_year3()) < Integer.parseInt(bankProfileVO.getRefundsvolume_year3())) )
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_YEAR3);
                        validationErrorList.addError("refundsvolume_year3", new PZValidationException("refundsvolume_year3",ErrorMessages.INVALID_REFUNDRATIO_YEAR3  + ":::" + bankProfileVO.getRefundsvolume_year3(),"4", errorCodeVO));
                        bankProfileVO.setRefundsvolume_year3("");
                    }
                    else if (functions.isValueNull(bankProfileVO.getSalesvolume_year3()) && functions.isValueNull(bankProfileVO.getRefundsvolume_year3()))
                    {
                        float cbkRatio = 0;
                        cbkRatio = (Float.valueOf(bankProfileVO.getRefundsvolume_year3()) / Float.valueOf(bankProfileVO.getSalesvolume_year3())) * 100;
                        bankProfileVO.setRefundratio_year3(String.valueOf(cbkRatio));
                    }
                    break;
                case numberofrefunds_lastmonth:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_lastmonth", bankProfileVO.getNumberofrefunds_lastmonth(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_lastmonth", new ValidationException("numberofrefunds_lastmonth", "Invalid numberofrefunds_lastmonth:::" + bankProfileVO.getNumberofrefunds_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_LASTMONTH);
                        validationErrorList.addError("numberofrefunds_lastmonth", new PZValidationException("numberofrefunds_lastmonth",ErrorMessages.INVALID_NUMBEROFREFUNDS_LASTMONTH  + ":::" + bankProfileVO.getNumberofrefunds_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_lastmonth("");
                    }
                    break;
                case numberofrefunds_2monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_2monthsago", bankProfileVO.getNumberofrefunds_2monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_2monthsago", new ValidationException("numberofrefunds_2monthsago", "Invalid numberofrefunds_2monthsago:::" + bankProfileVO.getNumberofrefunds_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_2MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_2monthsago", new PZValidationException("numberofrefunds_2monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_2MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_2monthsago("");
                    }
                    break;
                case numberofrefunds_3monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_3monthsago", bankProfileVO.getNumberofrefunds_3monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_3monthsago", new ValidationException("numberofrefunds_3monthsago", "Invalid numberofrefunds_3monthsago:::" + bankProfileVO.getNumberofrefunds_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_3MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_3monthsago", new PZValidationException("numberofrefunds_3monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_3MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_3monthsago("");
                    }
                    break;
                case numberofrefunds_4monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_4monthsago", bankProfileVO.getNumberofrefunds_4monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_4monthsago", new ValidationException("numberofrefunds_4monthsago", "Invalid numberofrefunds_4monthsago:::" + bankProfileVO.getNumberofrefunds_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_4MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_4monthsago", new PZValidationException("numberofrefunds_4monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_4MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_4monthsago("");
                    }
                    break;
                case numberofrefunds_5monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_5monthsago", bankProfileVO.getNumberofrefunds_5monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_5monthsago", new ValidationException("numberofrefunds_5monthsago", "Invalid numberofrefunds_5monthsago:::" + bankProfileVO.getNumberofrefunds_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_5MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_5monthsago", new PZValidationException("numberofrefunds_5monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_5MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_5monthsago("");
                    }
                    break;
                case numberofrefunds_6monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_6monthsago", bankProfileVO.getNumberofrefunds_6monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_6monthsago", new ValidationException("numberofrefunds_6monthsago", "Invalid numberofrefunds_6monthsago:::" + bankProfileVO.getNumberofrefunds_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_6MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_6monthsago", new PZValidationException("numberofrefunds_6monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_6MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_6monthsago("");
                    }
                    break;
                case numberofrefunds_12monthsago:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_12monthsago", bankProfileVO.getNumberofrefunds_12monthsago(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_12monthsago", new ValidationException("numberofrefunds_12monthsago", "Invalid numberofrefunds_12monthsago:::" + bankProfileVO.getNumberofrefunds_12monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_12MONTHSAGO);
                        validationErrorList.addError("numberofrefunds_12monthsago", new PZValidationException("numberofrefunds_12monthsago",ErrorMessages.INVALID_NUMBEROFREFUNDS_12MONTHSAGO  + ":::" + bankProfileVO.getNumberofrefunds_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_12monthsago("");
                    }
                    break;
                case numberofrefunds_year2:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_year2", bankProfileVO.getNumberofrefunds_year2(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_year2", new ValidationException("numberofrefunds_year2", "Invalid numberofrefunds_year2:::" + bankProfileVO.getNumberofrefunds_year2(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_YEAR2);
                        validationErrorList.addError("numberofrefunds_year2", new PZValidationException("numberofrefunds_year2",ErrorMessages.INVALID_NUMBEROFREFUNDS_YEAR2  + ":::" + bankProfileVO.getNumberofrefunds_year2(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_year2("");
                    }
                    break;
                case numberofrefunds_year3:
                    if (!ESAPI.validator().isValidInput("numberofrefunds_year3", bankProfileVO.getNumberofrefunds_year3(), "OnlyNumber", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("numberofrefunds_year3", new ValidationException("numberofrefunds_year3", "Invalid numberofrefunds_year3:::" + bankProfileVO.getNumberofrefunds_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_NUMBEROFREFUNDS_YEAR3);
                        validationErrorList.addError("numberofrefunds_year3", new PZValidationException("numberofrefunds_year3",ErrorMessages.INVALID_NUMBEROFREFUNDS_YEAR3  + ":::" + bankProfileVO.getNumberofrefunds_year3(),"4", errorCodeVO));
                        bankProfileVO.setNumberofrefunds_year3("");
                    }
                    break;
                case chargebackratio_lastmonth:
                    if (!ESAPI.validator().isValidInput("chargebackratio_lastmonth", bankProfileVO.getChargebackratio_lastmonth(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_lastmonth", new ValidationException("chargebackratio_lastmonth", "Invalid chargebackratio_lastmonth:::" + bankProfileVO.getChargebackratio_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_LASTMONTH);
                        validationErrorList.addError("chargebackratio_lastmonth", new PZValidationException("chargebackratio_lastmonth",ErrorMessages.INVALID_CHARGEBACKRATIO_LASTMONTH  + ":::" + bankProfileVO.getChargebackratio_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_lastmonth("");
                    }
                    break;
                case chargebackratio_2monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_2monthsago", bankProfileVO.getChargebackratio_2monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_2monthsago", new ValidationException("chargebackratio_2monthsago", "Invalid chargebackratio_2monthsago:::" + bankProfileVO.getChargebackratio_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_2MONTHSAGO);
                        validationErrorList.addError("chargebackratio_2monthsago", new PZValidationException("chargebackratio_2monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_2MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_2monthsago("");
                    }
                    break;
                case chargebackratio_3monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_3monthsago", bankProfileVO.getChargebackratio_3monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_3monthsago", new ValidationException("chargebackratio_3monthsago", "Invalid chargebackratio_3monthsago:::" + bankProfileVO.getChargebackratio_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_3MONTHSAGO);
                        validationErrorList.addError("chargebackratio_3monthsago", new PZValidationException("chargebackratio_3monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_3MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_3monthsago("");
                    }
                    break;
                case chargebackratio_4monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_4monthsago", bankProfileVO.getChargebackratio_4monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_4monthsago", new ValidationException("chargebackratio_4monthsago", "Invalid chargebackratio_4monthsago:::" + bankProfileVO.getChargebackratio_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_4MONTHSAGO);
                        validationErrorList.addError("chargebackratio_4monthsago", new PZValidationException("chargebackratio_4monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_4MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_4monthsago("");
                    }
                    break;
                case chargebackratio_5monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_5monthsago", bankProfileVO.getChargebackratio_5monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_5monthsago", new ValidationException("chargebackratio_5monthsago", "Invalid chargebackratio_5monthsago:::" + bankProfileVO.getChargebackratio_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_5MONTHSAGO);
                        validationErrorList.addError("chargebackratio_5monthsago", new PZValidationException("chargebackratio_5monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_5MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_5monthsago("");
                    }
                    break;
                case chargebackratio_6monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_6monthsago", bankProfileVO.getChargebackratio_6monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_6monthsago", new ValidationException("chargebackratio_6monthsago", "Invalid chargebackratio_6monthsago:::" + bankProfileVO.getChargebackratio_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_6MONTHSAGO);
                        validationErrorList.addError("chargebackratio_6monthsago", new PZValidationException("chargebackratio_6monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_6MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_6monthsago("");
                    }
                    break;
                case chargebackratio_12monthsago:
                    if (!ESAPI.validator().isValidInput("chargebackratio_12monthsago", bankProfileVO.getChargebackratio_12monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_12monthsago", new ValidationException("chargebackratio_12monthsago", "Invalid chargebackratio_12monthsago:::" + bankProfileVO.getChargebackratio_12monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_12MONTHSAGO);
                        validationErrorList.addError("chargebackratio_12monthsago", new PZValidationException("chargebackratio_12monthsago",ErrorMessages.INVALID_CHARGEBACKRATIO_12MONTHSAGO  + ":::" + bankProfileVO.getChargebackratio_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_12monthsago("");
                    }
                    break;
                case chargebackratio_year2:
                    if (!ESAPI.validator().isValidInput("chargebackratio_year2", bankProfileVO.getChargebackratio_year2(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_year2", new ValidationException("chargebackratio_year2", "Invalid chargebackratio_year2:::" + bankProfileVO.getChargebackratio_year2(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_YEAR2);
                        validationErrorList.addError("chargebackratio_year2", new PZValidationException("chargebackratio_year2",ErrorMessages.INVALID_CHARGEBACKRATIO_YEAR2  + ":::" + bankProfileVO.getChargebackratio_year2(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_year2("");
                    }
                    break;
                case chargebackratio_year3:
                    if (!ESAPI.validator().isValidInput("chargebackratio_year3", bankProfileVO.getChargebackratio_year3(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("chargebackratio_year3", new ValidationException("chargebackratio_year3", "Invalid chargebackratio_year3:::" + bankProfileVO.getChargebackratio_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CHARGEBACKRATIO_YEAR3);
                        validationErrorList.addError("chargebackratio_year3", new PZValidationException("chargebackratio_year3",ErrorMessages.INVALID_CHARGEBACKRATIO_YEAR3  + ":::" + bankProfileVO.getChargebackratio_year3(),"4", errorCodeVO));
                        bankProfileVO.setChargebackratio_year3("");
                    }
                    break;
                case refundratio_lastmonth:
                    if (!ESAPI.validator().isValidInput("refundratio_lastmonth", bankProfileVO.getRefundratio_lastmonth(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_lastmonth", new ValidationException("refundratio_lastmonth", "Invalid refundratio_lastmonth:::" + bankProfileVO.getRefundratio_lastmonth(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_LASTMONTH);
                        validationErrorList.addError("refundratio_lastmonth", new PZValidationException("refundratio_lastmonth",ErrorMessages.INVALID_REFUNDRATIO_LASTMONTH  + ":::" + bankProfileVO.getRefundratio_lastmonth(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_lastmonth("");
                    }
                    break;
                case refundratio_2monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_2monthsago", bankProfileVO.getRefundratio_2monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_2monthsago", new ValidationException("refundratio_2monthsago", "Invalid refundratio_2monthsago:::" + bankProfileVO.getRefundratio_2monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_2MONTHSAGO);
                        validationErrorList.addError("refundratio_2monthsago", new PZValidationException("refundratio_2monthsago",ErrorMessages.INVALID_REFUNDRATIO_2MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_2monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_2monthsago("");
                    }
                    break;
                case refundratio_3monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_3monthsago", bankProfileVO.getRefundratio_3monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_3monthsago", new ValidationException("refundratio_3monthsago", "Invalid refundratio_3monthsago:::" + bankProfileVO.getRefundratio_3monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_3MONTHSAGO);
                        validationErrorList.addError("refundratio_3monthsago", new PZValidationException("refundratio_3monthsago",ErrorMessages.INVALID_REFUNDRATIO_3MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_3monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_3monthsago("");
                    }
                    break;
                case refundratio_4monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_4monthsago", bankProfileVO.getRefundratio_4monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_4monthsago", new ValidationException("refundratio_4monthsago", "Invalid refundratio_4monthsago:::" + bankProfileVO.getRefundratio_4monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_4MONTHSAGO);
                        validationErrorList.addError("refundratio_4monthsago", new PZValidationException("refundratio_4monthsago",ErrorMessages.INVALID_REFUNDRATIO_4MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_4monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_4monthsago("");
                    }
                    break;
                case refundratio_5monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_5monthsago", bankProfileVO.getRefundratio_5monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_5monthsago", new ValidationException("refundratio_5monthsago", "Invalid refundratio_5monthsago:::" + bankProfileVO.getRefundratio_5monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_5MONTHSAGO);
                        validationErrorList.addError("refundratio_5monthsago", new PZValidationException("refundratio_5monthsago",ErrorMessages.INVALID_REFUNDRATIO_5MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_5monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_5monthsago("");
                    }
                    break;
                case refundratio_6monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_6monthsago", bankProfileVO.getRefundratio_6monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_6monthsago", new ValidationException("refundratio_6monthsago", "Invalid refundratio_6monthsago:::" + bankProfileVO.getRefundratio_6monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_6MONTHSAGO);
                        validationErrorList.addError("refundratio_6monthsago", new PZValidationException("refundratio_6monthsago",ErrorMessages.INVALID_REFUNDRATIO_6MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_6monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_6monthsago("");
                    }
                    break;
                case refundratio_12monthsago:
                    if (!ESAPI.validator().isValidInput("refundratio_12monthsago", bankProfileVO.getRefundratio_12monthsago(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_12monthsago", new ValidationException("refundratio_12monthsago", "Invalid refundratio_12monthsago:::" + bankProfileVO.getRefundratio_12monthsago(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_12MONTHSAGO);
                        validationErrorList.addError("refundratio_12monthsago", new PZValidationException("refundratio_12monthsago",ErrorMessages.INVALID_REFUNDRATIO_12MONTHSAGO  + ":::" + bankProfileVO.getRefundratio_12monthsago(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_12monthsago("");
                    }
                    break;
                case refundratio_year2:
                    if (!ESAPI.validator().isValidInput("refundratio_year2", bankProfileVO.getRefundratio_year2(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_year2", new ValidationException("refundratio_year2", "Invalid refundratio_year2:::" + bankProfileVO.getRefundratio_year2(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_YEAR2);
                        validationErrorList.addError("refundratio_year2", new PZValidationException("refundratio_year2",ErrorMessages.INVALID_REFUNDRATIO_YEAR2  + ":::" + bankProfileVO.getRefundratio_year2(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_year2("");
                    }
                    break;
                case refundratio_year3:
                    if (!ESAPI.validator().isValidInput("refundratio_year3", bankProfileVO.getRefundratio_year3(), "Numbers", 30, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_year3", new ValidationException("refundratio_year3", "Invalid refundratio_year3:::" + bankProfileVO.getRefundratio_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_REFUNDRATIO_YEAR3);
                        validationErrorList.addError("refundratio_year3", new PZValidationException("refundratio_year3",ErrorMessages.INVALID_REFUNDRATIO_YEAR3  + ":::" + bankProfileVO.getRefundratio_year3(),"4", errorCodeVO));
                        bankProfileVO.setRefundratio_year3("");
                    }
                    break;
                case currency:
                    if (!ESAPI.validator().isValidInput("currency", bankProfileVO.getCurrency(), "StrictString", 3, isOptional))//new added
                    {
                        //validationErrorList.addError("refundratio_year3", new ValidationException("refundratio_year3", "Invalid refundratio_year3:::" + bankProfileVO.getRefundratio_year3(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CURRENCY);
                        validationErrorList.addError("currency", new PZValidationException("currency",ErrorMessages.INVALID_CURRENCY  + ":::" + bankProfileVO.getCurrency(),"4", errorCodeVO));
                        bankProfileVO.setCurrency("");
                    }
                    break;


            }
        }

        if(bankInputNameList.size()>0)
        {
            InputValidations(bankProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);
        }
    }

    public void InputValidations(CardholderProfileVO cardholderProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList, boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMapARGS)
    {
        Calendar calendar=Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate=calendar.getTime();

        boolean condsiteinspectionmerchant = true;
        boolean condcompaniesorgateways = true;
        boolean condComplianceelectronically = true;
        boolean condCompliancedatacompromise = true;
        boolean condComplianceswapp = true;
        boolean condiscispstep5 = true;

        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();

        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();


        //THIS is FOR CONVERSION OF REFERENCE TO VALUE type
        Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap=new HashMap<Boolean,Set<BankInputName>>();

        Set<BankInputName> bankInputNameSet = null;



        if(bankInputNameBooleanMapARGS==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        else
        {
            if(bankInputNameBooleanMapARGS.containsKey(false))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(false));
                bankInputNameBooleanMap.put(false,bankInputNameSet);
            }

            if(bankInputNameBooleanMapARGS.containsKey(true))
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.addAll(bankInputNameBooleanMapARGS.get(true));
                bankInputNameBooleanMap.put(true,bankInputNameSet);
            }

        }

        bankInputNameBooleanMapARGS= new HashMap<Boolean,Set<BankInputName>>();
        //TILL HERE

        for (BankInputName input : inputList)
        {
            switch (input)
            {
                //Application_Manager CardholderProfile Validator
                case compliance_swapp:
                    if (!ESAPI.validator().isValidInput("compliance_swapp", cardholderProfileVO.getCompliance_swapp(), "isYN", 50, isOptional))// isOptional to isOptional
                    {
                        //validationErrorList.addError("compliance_swapp", new ValidationException("compliance_swapp", "Invalid software or gateway application:::" + cardholderProfileVO.getCompliance_swapp(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_SWAPP);
                        validationErrorList.addError("compliance_swapp", new PZValidationException("compliance_swapp",ErrorMessages.INVALID_COMPLIANCE_SWAPP  + ":::" + cardholderProfileVO.getCompliance_swapp(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_swapp("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_swapp()))
                    {
                        if ("N".equals(cardholderProfileVO.getCompliance_swapp()))
                        {
                            condComplianceswapp = true;
                        }
                        else
                        {
                            condComplianceswapp = conditionalValidation;
                        }

                        bankInputNameList.add(BankInputName.compliance_thirdpartyappform);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_thirdpartyappform, condComplianceswapp || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_thirdpartyappform))?false:true));

                        bankInputNameList.add(BankInputName.compliance_thirdpartysoft);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_thirdpartysoft, condComplianceswapp || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_thirdpartysoft))?false:true));

                        bankInputNameList.add(BankInputName.compliance_version);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_version, condComplianceswapp || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_version))?false:true));

                        bankInputNameList.add(BankInputName.compliance_companiesorgateways);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_companiesorgateways, condComplianceswapp || ((bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_companiesorgateways))?false:true));

                        //logger.debug("FINALL::::"+bankInputNameBooleanMap);

                    }
                    break;

                case compliance_thirdpartyappform:
                    if (!ESAPI.validator().isValidInput("compliance_thirdpartyappform", cardholderProfileVO.getCompliance_thirdpartyappform(), "alphanum", 30,bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("compliance_thirdpartyappform", new ValidationException("compliance_thirdpartyappform", "Invalid Application from:::" + cardholderProfileVO.getCompliance_thirdpartyappform(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_THIRDPARTYAPPFORM);
                        validationErrorList.addError("compliance_thirdpartyappform", new PZValidationException("compliance_thirdpartyappform",ErrorMessages.INVALID_COMPLIANCE_THIRDPARTYAPPFORM  + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_thirdpartyappform()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_swapp()) || "N".equals(cardholderProfileVO.getCompliance_swapp())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_SWAPP_SELECTION_THIRDPARTYAPPFORM);
                        validationErrorList.addError("compliance_thirdpartyappform", new PZValidationException("compliance_thirdpartyappform",ErrorMessages.INVALID_COMPLIANCE_SWAPP_SELECTION_THIRDPARTYAPPFORM  + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    break;
                case compliance_thirdpartysoft:
                    if (!ESAPI.validator().isValidInput("compliance_thirdpartysoft", cardholderProfileVO.getCompliance_thirdpartysoft(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("compliance_thirdpartysoft", new ValidationException("compliance_thirdpartysoft", "Invalid SWIFT/BIC:::" + cardholderProfileVO.getCompliance_thirdpartysoft(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_THIRDPARTYSOFT);
                        validationErrorList.addError("compliance_thirdpartysoft", new PZValidationException("compliance_thirdpartysoft",ErrorMessages.INVALID_COMPLIANCE_THIRDPARTYSOFT  + ":::" + cardholderProfileVO.getCompliance_thirdpartysoft(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartysoft("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_thirdpartysoft()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_swapp()) || "N".equals(cardholderProfileVO.getCompliance_swapp())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_SWAPP_SELECTION_THIRDPARTYSOFT);
                        validationErrorList.addError("compliance_thirdpartysoft", new PZValidationException("compliance_thirdpartysoft", ErrorMessages.INVALID_COMPLIANCE_SWAPP_SELECTION_THIRDPARTYSOFT + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(), "5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    break;
                case compliance_version:
                    if (!ESAPI.validator().isValidInput("compliance_version", cardholderProfileVO.getCompliance_version(), "Version", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("compliance_version", new ValidationException("compliance_version", "Invalid Version:::" + cardholderProfileVO.getCompliance_version(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_VERSION);
                        validationErrorList.addError("compliance_version", new PZValidationException("compliance_version",ErrorMessages.INVALID_COMPLIANCE_VERSION  + ":::" + cardholderProfileVO.getCompliance_version(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_version("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_version()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_swapp()) || "N".equals(cardholderProfileVO.getCompliance_swapp())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_SWAPP_SELECTION_COMPLIANCE_VERSION);
                        validationErrorList.addError("compliance_version", new PZValidationException("compliance_version",ErrorMessages.INVALID_COMPLIANCE_SWAPP_SELECTION_COMPLIANCE_VERSION  + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    break;
                case compliance_companiesorgateways:
                    if (!ESAPI.validator().isValidInput("compliance_companiesorgateways", cardholderProfileVO.getCompliance_companiesorgateways(), "isYN", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("compliance_companiesorgateways", new ValidationException("compliance_companiesorgateways", "Invalid hosting companies or gateways:::" + cardholderProfileVO.getCompliance_companiesorgateways(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_COMPANIESORGATEWAYS);
                        validationErrorList.addError("compliance_companiesorgateways", new PZValidationException("compliance_companiesorgateways", ErrorMessages.INVALID_COMPLIANCE_COMPANIESORGATEWAYS + ":::" + cardholderProfileVO.getCompliance_companiesorgateways(), "5", errorCodeVO));
                        cardholderProfileVO.setCompliance_companiesorgateways("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_companiesorgateways()) && "Y".equals(cardholderProfileVO.getCompliance_companiesorgateways()) && "N".equals(cardholderProfileVO.getCompliance_swapp()))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_SWAPP_SELECTION_COMPANIESORGATEWAYS);
                        validationErrorList.addError("compliance_companiesorgateways", new PZValidationException("compliance_companiesorgateways",ErrorMessages.INVALID_COMPLIANCE_SWAPP_SELECTION_COMPANIESORGATEWAYS  + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_companiesorgateways()) && functions.isValueNull(cardholderProfileVO.getCompliance_swapp()) && "Y".equals(cardholderProfileVO.getCompliance_swapp()))
                    {
                        if ("N".equals(cardholderProfileVO.getCompliance_companiesorgateways()))
                        {
                            condcompaniesorgateways = true;                 //condcompaniesorgateways
                        }
                        else
                        {
                            condcompaniesorgateways = conditionalValidation;            //condcompaniesorgateways
                        }
                        bankInputNameList.add(BankInputName.compliance_companiesorgateways_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_companiesorgateways_yes, condcompaniesorgateways || (bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_companiesorgateways_yes)?false:true));
                    }
                    break;

                case compliance_companiesorgateways_yes:
                    if (!ESAPI.validator().isValidInput("compliance_companiesorgateways_yes", cardholderProfileVO.getCompliance_companiesorgateways_yes(), "AppGateway", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))//alphanum to alphanum
                    {
                        //validationErrorList.addError("compliance_companiesorgateways_yes", new ValidationException("compliance_companiesorgateways_yes", "Invalid COMPANIESORGATEWAYS_YES :::" + cardholderProfileVO.getCompliance_companiesorgateways_yes(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_COMPANIESORGATEWAYS_YES);
                        validationErrorList.addError("compliance_companiesorgateways_yes", new PZValidationException("compliance_companiesorgateways_yes",ErrorMessages.INVALID_COMPLIANCE_COMPANIESORGATEWAYS_YES  + ":::" + cardholderProfileVO.getCompliance_companiesorgateways_yes(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_companiesorgateways_yes("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_companiesorgateways_yes()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_swapp()) || "N".equals(cardholderProfileVO.getCompliance_swapp())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_SWAPP_SELECTION_COMPANIESORGATEWAYS_YES);
                        validationErrorList.addError("compliance_companiesorgateways_yes", new PZValidationException("compliance_companiesorgateways_yes",ErrorMessages.INVALID_COMPLIANCE_SWAPP_SELECTION_COMPANIESORGATEWAYS_YES  + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_companiesorgateways_yes()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_companiesorgateways()) || "N".equals(cardholderProfileVO.getCompliance_companiesorgateways())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_COMPANIESORGATEWAYS_SELECTION);
                        validationErrorList.addError("compliance_companiesorgateways_yes", new PZValidationException("compliance_companiesorgateways_yes",ErrorMessages.INVALID_COMPLIANCE_COMPANIESORGATEWAYS_SELECTION  + ":::" + cardholderProfileVO.getCompliance_thirdpartyappform(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_thirdpartyappform("");
                    }
                    break;
                case compliance_electronically:

                    if (!ESAPI.validator().isValidInput("compliance_electronically", cardholderProfileVO.getCompliance_electronically(), "isYN", 30, isOptional))
                    {
                        //validationErrorList.addError("compliance_electronically", new ValidationException("compliance_electronically", "Invalid electronically:::" + cardholderProfileVO.getCompliance_electronically(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_ELECTRONICALLY);
                        validationErrorList.addError("compliance_electronically", new PZValidationException("compliance_electronically",ErrorMessages.INVALID_COMPLIANCE_ELECTRONICALLY  + ":::" + cardholderProfileVO.getCompliance_electronically(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_electronically("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_electronically()))
                    {
                        if ("N".equals(cardholderProfileVO.getCompliance_electronically()))
                        {
                            condComplianceelectronically = true;
                        }
                        else
                        {
                            condComplianceelectronically = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.compliance_carddatastored);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_carddatastored, condComplianceelectronically || (bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_carddatastored)?false:true));
                    }
                    break;
                case compliance_carddatastored:

                    if (!ESAPI.validator().isValidInput("compliance_carddatastored", cardholderProfileVO.getCompliance_carddatastored(), "isCardDataStored", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("compliance_carddatastored", new ValidationException("compliance_carddatastored", "Invalid compliance_carddatastored:::" + cardholderProfileVO.getCompliance_carddatastored(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_CARDDATASTORED);
                        validationErrorList.addError("compliance_carddatastored", new PZValidationException("compliance_carddatastored",ErrorMessages.INVALID_COMPLIANCE_CARDDATASTORED  + ":::" + cardholderProfileVO.getCompliance_carddatastored(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_carddatastored("");
                    }
                    break;

                case compliance_cispcompliant:
                    if (!ESAPI.validator().isValidInput("compliance_cispcompliant", cardholderProfileVO.getCompliance_cispcompliant(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_CISPCOMPLIANT);
                        validationErrorList.addError("compliance_cispcompliant", new PZValidationException("compliance_cispcompliant",ErrorMessages.INVALID_COMPLIANCE_CISPCOMPLIANT + ":::" + cardholderProfileVO.getCompliance_cispcompliant(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_cispcompliant("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_cispcompliant()))
                    {
                        if ("N".equals(cardholderProfileVO.getCompliance_cispcompliant()))
                        {
                            condiscispstep5 = true;
                        }
                        else
                        {
                            condiscispstep5 = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.compliance_cispcompliant_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.compliance_cispcompliant_yes,condiscispstep5);
                    }
                    break;

                case compliance_cispcompliant_yes:
                    if (!ESAPI.validator().isValidInput("compliance_cispcompliant_yes", cardholderProfileVO.getCompliance_cispcompliant_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_CISPCOMPLIANT_YES);
                        validationErrorList.addError("compliance_cispcompliant_yes", new PZValidationException("compliance_cispcompliant_yes",ErrorMessages.INVALID_COMPLIANCE_CISPCOMPLIANT_YES + ":::" + cardholderProfileVO.getCompliance_cispcompliant_yes(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_cispcompliant_yes("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_cispcompliant_yes()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_cispcompliant()) || "N".equals(cardholderProfileVO.getCompliance_cispcompliant())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_CISPCOMPLIANT_SELECTION);
                        validationErrorList.addError("compliance_cispcompliant_yes", new PZValidationException("compliance_cispcompliant_yes", ErrorMessages.INVALID_COMPLIANCE_CISPCOMPLIANT_SELECTION + ":::" + cardholderProfileVO.getCompliance_cispcompliant_yes(), "5", errorCodeVO));
                        cardholderProfileVO.setCompliance_cispcompliant_yes("");
                    }
                    break;

                case compliance_pcidsscompliant:
                    if (!ESAPI.validator().isValidInput("compliance_pcidsscompliant", cardholderProfileVO.getCompliance_pcidsscompliant(), "isYN", 50, isOptional)) //isOptional to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PCIDSSCOMPLIANT);
                        validationErrorList.addError("compliance_pcidsscompliant", new PZValidationException("compliance_pcidsscompliant",ErrorMessages.INVALID_COMPLIANCE_PCIDSSCOMPLIANT + ":::" + cardholderProfileVO.getCompliance_pcidsscompliant(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_pcidsscompliant("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_pcidsscompliant()))
                    {
                        if ("N".equals(cardholderProfileVO.getCompliance_pcidsscompliant()))
                        {
                            condiscispstep5 = true;
                        }
                        else
                        {
                            condiscispstep5 = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.compliance_pcidsscompliant_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.compliance_pcidsscompliant_yes,condiscispstep5);
                    }
                    break;

                case compliance_pcidsscompliant_yes:
                    if (!ESAPI.validator().isValidInput("compliance_pcidsscompliant_yes", cardholderProfileVO.getCompliance_pcidsscompliant_yes(), "alphanum", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PCIDSSCOMPLIANT_YES);
                        validationErrorList.addError("compliance_pcidsscompliant_yes", new PZValidationException("compliance_pcidsscompliant_yes",ErrorMessages.INVALID_COMPLIANCE_PCIDSSCOMPLIANT_YES + ":::" + cardholderProfileVO.getCompliance_pcidsscompliant_yes(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_pcidsscompliant_yes("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_pcidsscompliant_yes()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_pcidsscompliant()) || "N".equals(cardholderProfileVO.getCompliance_pcidsscompliant())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PCIDSSCOMPLIANT_SELECTION);
                        validationErrorList.addError("compliance_pcidsscompliant_yes", new PZValidationException("compliance_pcidsscompliant_yes", ErrorMessages.INVALID_COMPLIANCE_PCIDSSCOMPLIANT_SELECTION + ":::" + cardholderProfileVO.getCompliance_pcidsscompliant_yes(), "5", errorCodeVO));
                        cardholderProfileVO.setCompliance_pcidsscompliant_yes("");
                    }
                    break;
                /*case compliance_pcidsscompliant:
                    boolean condPciCompliant = true;
                    if (!ESAPI.validator().isValidInput("compliance_pcidsscompliant", cardholderProfileVO.getCompliance_pcidsscompliant(), "isYN", 10, isOptional))// isOptonal to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PCIDSSCOMPLIANT);
                        validationErrorList.addError("compliance_pcidsscompliant", new PZValidationException("compliance_pcidsscompliant",ErrorMessages.INVALID_COMPLIANCE_PCIDSSCOMPLIANT  + ":::" + cardholderProfileVO.getCompliance_pcidsscompliant(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_pcidsscompliant("");
                    }
                    else if(functions.isValueNull(cardholderProfileVO.getCompliance_pcidsscompliant()) && "Y".equals(cardholderProfileVO.getCompliance_pcidsscompliant()))
                    {
                        bankInputNameList.add(BankInputName.compliance_pcidsscompliant_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_pcidsscompliant_yes, conditionalValidation);
                    }
                    break;

                case compliance_pcidsscompliant_yes:
                    if (!ESAPI.validator().isValidInput("compliance_pcidsscompliant_yes", cardholderProfileVO.getCompliance_pcidsscompliant_yes(), "alphanum", 255, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true) || (functions.isValueNull(cardholderProfileVO.getCompliance_pcidsscompliant_yes())))// isOptonal to isOptional
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PCIDSSCOMPLIANT_YES);
                        validationErrorList.addError("compliance_pcidsscompliant_yes", new PZValidationException("compliance_pcidsscompliant_yes","Invalid Data"  + ":::" + cardholderProfileVO.getCompliance_pcidsscompliant_yes(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_pcidsscompliant_yes("");
                    }
                    break;*/

                case compliance_qualifiedsecurityassessor:
                    if (!ESAPI.validator().isValidInput("compliance_qualifiedsecurityassessor", cardholderProfileVO.getCompliance_qualifiedsecurityassessor(), "alphanum", 30, isOptional))// isOptonal to isOptional
                    {
                        //validationErrorList.addError("compliance_qualifiedsecurityassessor", new ValidationException("compliance_qualifiedsecurityassessor", "Invalid QUALIFIEDSECURITYASSESSOR:::" + cardholderProfileVO.getCompliance_qualifiedsecurityassessor(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_QUALIFIEDSECURITYASSESSOR);
                        validationErrorList.addError("compliance_qualifiedsecurityassessor", new PZValidationException("compliance_qualifiedsecurityassessor",ErrorMessages.INVALID_COMPLIANCE_QUALIFIEDSECURITYASSESSOR  + ":::" + cardholderProfileVO.getCompliance_qualifiedsecurityassessor(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_qualifiedsecurityassessor("");
                    }
                    break;
                case compliance_dateofcompliance:

                    if (!ESAPI.validator().isValidInput("compliance_dateofcompliance", cardholderProfileVO.getCompliance_dateofcompliance(), "fromDate", 50, isOptional) || (functions.isValueNull(cardholderProfileVO.getCompliance_dateofcompliance()) && (functions.isRandomDate(cardholderProfileVO.getCompliance_dateofcompliance(), "dd/MM/yyyy") || functions.isFutureDate(cardholderProfileVO.getCompliance_dateofcompliance(), "dd/MM/yyyy")) ))// isOptonal to isOptional
                    {
                        //validationErrorList.addError("compliance_dateofcompliance", new ValidationException("compliance_dateofcompliance", "Invalid DATEOFCOMPLIANCE:::" + cardholderProfileVO.getCompliance_dateofcompliance(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_DATEOFCOMPLIANCE);
                        validationErrorList.addError("compliance_dateofcompliance", new PZValidationException("compliance_dateofcompliance",ErrorMessages.INVALID_COMPLIANCE_DATEOFCOMPLIANCE  + ":::" + cardholderProfileVO.getCompliance_dateofcompliance(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_dateofcompliance("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_dateofcompliance()))
                    {
                        cardholderProfileVO.setCompliance_dateofcompliance(commonFunctionUtil.convertDatepickerToTimestamp(cardholderProfileVO.getCompliance_dateofcompliance(), "00:00:00"));
                    }
                    break;
                case compliance_dateoflastscan:
                    if (!ESAPI.validator().isValidInput("compliance_dateoflastscan", cardholderProfileVO.getCompliance_dateoflastscan(), "fromDate", 30, isOptional) || (functions.isValueNull(cardholderProfileVO.getCompliance_dateoflastscan()) && (functions.isRandomDate(cardholderProfileVO.getCompliance_dateoflastscan(), "dd/MM/yyyy") || functions.isFutureDate(cardholderProfileVO.getCompliance_dateoflastscan(), "dd/MM/yyyy")) ))// isOptonal to isOptional
                    {
                        //validationErrorList.addError("compliance_dateoflastscan", new ValidationException("compliance_dateoflastscan", "Invalid DATEOFLASTSCAN:::" + cardholderProfileVO.getCompliance_dateoflastscan(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_DATEOFLASTSCAN);
                        validationErrorList.addError("compliance_dateoflastscan", new PZValidationException("compliance_dateoflastscan",ErrorMessages.INVALID_COMPLIANCE_DATEOFLASTSCAN  + ":::" + cardholderProfileVO.getCompliance_dateoflastscan(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_dateoflastscan("");
                    }
                   /* else if (functions.isValueNull(cardholderProfileVO.getCompliance_dateoflastscan()))
                    {
                        boolean isvalidCompliance_dateoflastscan = true;
                        Date passedDate = null;
                        try
                        {
                            passedDate = sdf.parse(cardholderProfileVO.getCompliance_dateoflastscan());
                        }
                        catch (ParseException e)
                        {
                            isvalidCompliance_dateoflastscan = false;
                        }

                        if (passedDate != null && passedDate.after(currentDate))
                        {
                            isvalidCompliance_dateoflastscan = false;
                        }

                        if (!isvalidCompliance_dateoflastscan)
                        {
                            //validationErrorList.addError("compliance_dateoflastscan", new ValidationException("compliance_dateoflastscan", "Invalid  Compliance Date of last scan:::" + cardholderProfileVO.getCompliance_dateoflastscan(), "5"));
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_DATEFLASTSCAN);
                            validationErrorList.addError("compliance_datacompromise", new PZValidationException("compliance_dateoflastscan",ErrorMessages.INVALID_COMPLIANCE_DATEFLASTSCAN  + ":::" + cardholderProfileVO.getCompliance_dateoflastscan(),"5", errorCodeVO));
                            cardholderProfileVO.setCompliance_dateoflastscan("");
                        }

                        else
                        {
                            cardholderProfileVO.setCompliance_dateoflastscan(commonFunctionUtil.convertDatepickerToTimestamp(cardholderProfileVO.getCompliance_dateoflastscan(), "00:00:00"));
                        }
                    }*/
                    else
                    {
                        cardholderProfileVO.setCompliance_dateoflastscan(commonFunctionUtil.convertDatepickerToTimestamp(cardholderProfileVO.getCompliance_dateoflastscan(), "00:00:00"));
                    }
                    break;

                case compliance_datacompromise:
                    if (!ESAPI.validator().isValidInput("compliance_datacompromise", cardholderProfileVO.getCompliance_datacompromise(), "isYN", 100, isOptional)) // isOptonal to isOptional
                    {
                        //validationErrorList.addError("compliance_datacompromise", new ValidationException("compliance_datacompromise", "Invalid DATACOMPROMISE:::" + cardholderProfileVO.getCompliance_datacompromise(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_DATACOMPROMISE);
                        validationErrorList.addError("compliance_datacompromise", new PZValidationException("compliance_datacompromise",ErrorMessages.INVALID_COMPLIANCE_DATACOMPROMISE  + ":::" + cardholderProfileVO.getCompliance_datacompromise(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_datacompromise("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_datacompromise()))
                    {
                        if ("N".equals(cardholderProfileVO.getCompliance_datacompromise()))
                        {
                            condCompliancedatacompromise = true;
                        }
                        else
                        {
                            condCompliancedatacompromise = conditionalValidation;
                        }
                        bankInputNameList.add(BankInputName.compliance_datacompromise_yes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_datacompromise_yes, condCompliancedatacompromise || (bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.compliance_datacompromise_yes)?false:true));
                    }
                    break;

                case compliance_datacompromise_yes:
                    if (!ESAPI.validator().isValidInput("compliance_datacompromise_yes", cardholderProfileVO.getCompliance_datacompromise_yes(), "fromDate", 100, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true) || (functions.isValueNull(cardholderProfileVO.getCompliance_datacompromise_yes()) && (functions.isRandomDate(cardholderProfileVO.getCompliance_datacompromise_yes(), "dd/MM/yyyy") || functions.isFutureDate(cardholderProfileVO.getCompliance_datacompromise_yes(), "dd/MM/yyyy")) ))
                    {
                        //validationErrorList.addError("compliance_datacompromise_yes", new ValidationException("compliance_datacompromise_yes", "Invalid DATACOMPROMISE_YES:::" + cardholderProfileVO.getCompliance_datacompromise_yes(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_DATACOMPROMISE_YES);
                        validationErrorList.addError("compliance_datacompromise_yes", new PZValidationException("compliance_datacompromise_yes",ErrorMessages.INVALID_COMPLIANCE_DATACOMPROMISE_YES  + ":::" + cardholderProfileVO.getCompliance_datacompromise_yes(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_datacompromise_yes("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getCompliance_datacompromise_yes()) && (!functions.isValueNull(cardholderProfileVO.getCompliance_datacompromise()) || "N".equals(cardholderProfileVO.getCompliance_datacompromise())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_DATACOMPROMISE_SELECTION);
                        validationErrorList.addError("compliance_datacompromise_yes", new PZValidationException("compliance_datacompromise_yes",ErrorMessages.INVALID_COMPLIANCE_DATACOMPROMISE_SELECTION  + ":::" + cardholderProfileVO.getCompliance_datacompromise_yes(),"5", errorCodeVO));
                        cardholderProfileVO.setCompliance_datacompromise_yes("");
                    }
                    else
                    {
                        cardholderProfileVO.setCompliance_datacompromise_yes(commonFunctionUtil.convertDatepickerToTimestamp(cardholderProfileVO.getCompliance_datacompromise_yes(), "00:00:00"));
                    }
                    break;

                case siteinspection_merchant:
                    if (!ESAPI.validator().isValidInput("siteinspection_merchant", cardholderProfileVO.getSiteinspection_merchant(), "isYN", 255, isOptional)) // isOptonal to true
                    {
                        //validationErrorList.addError("siteinspection_merchant", new ValidationException("siteinspection_merchant", "Invalid SITEINSPECTION_MERCHANT:::" + cardholderProfileVO.getSiteinspection_merchant(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_MERCHANT);
                        validationErrorList.addError("siteinspection_merchant", new PZValidationException("siteinspection_merchant",ErrorMessages.INVALID_SITEINSPECTION_MERCHANT  + ":::" + cardholderProfileVO.getSiteinspection_merchant(),"5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_merchant("");
                    }

                    else if (functions.isValueNull(cardholderProfileVO.getSiteinspection_merchant()))
                    {
                        if ("N".equals(cardholderProfileVO.getSiteinspection_merchant()))
                        {
                            condsiteinspectionmerchant = true;
                        }
                        else
                        {
                            condsiteinspectionmerchant = isOptional;
                        }
                        bankInputNameList.add(BankInputName.siteinspection_landlord);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.siteinspection_landlord, condsiteinspectionmerchant || (bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(BankInputName.siteinspection_landlord)?false:true));
                    }
                    break;


                case siteinspection_landlord:
                    if (!ESAPI.validator().isValidInput("siteinspection_landlord", cardholderProfileVO.getSiteinspection_landlord(), "alphanum", 50, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("siteinspection_landlord", new ValidationException("siteinspection_landlord", "Invalid SITEINSPECTION_LANDLORD:::" + cardholderProfileVO.getSiteinspection_landlord(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_LANDLORD);
                        validationErrorList.addError("siteinspection_landlord", new PZValidationException("siteinspection_landlord",ErrorMessages.INVALID_SITEINSPECTION_LANDLORD  + ":::" + cardholderProfileVO.getSiteinspection_landlord(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_landlord("");
                    }
                    break;
                case siteinspection_buildingtype:

                    if (!ESAPI.validator().isValidInput("siteinspection_buildingtype", cardholderProfileVO.getSiteinspection_buildingtype(), "isBuildingType", 100, isOptional)) // isOptonal to isOptional
                    {
                        //validationErrorList.addError("siteinspection_buildingtype", new ValidationException("siteinspection_buildingtype", "Invalid SITEINSPECTION_BUILDINGTYPE:::" + cardholderProfileVO.getSiteinspection_buildingtype(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_BUILDINGTYPE);
                        validationErrorList.addError("siteinspection_buildingtype", new PZValidationException("siteinspection_buildingtype",ErrorMessages.INVALID_SITEINSPECTION_BUILDINGTYPE  + ":::" + cardholderProfileVO.getSiteinspection_buildingtype(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_buildingtype("");
                    }
                    break;
                case siteinspection_areazoned:

                    if (!ESAPI.validator().isValidInput("siteinspection_areazoned", cardholderProfileVO.getSiteinspection_areazoned(), "isAreaZoned", 100, isOptional)) // isOptonal to isOptional
                    {
                        //validationErrorList.addError("siteinspection_areazoned", new ValidationException("siteinspection_areazoned", "Invalid SITEINSPECTION_AREAZONED:::" + cardholderProfileVO.getSiteinspection_areazoned(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_AREAZONED);
                        validationErrorList.addError("siteinspection_areazoned", new PZValidationException("siteinspection_areazoned",ErrorMessages.INVALID_SITEINSPECTION_AREAZONED  + ":::" + cardholderProfileVO.getSiteinspection_areazoned(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_areazoned("");
                    }
                    break;
                case siteinspection_squarefootage:

                    if (!ESAPI.validator().isValidInput("siteinspection_squarefootage", cardholderProfileVO.getSiteinspection_squarefootage(), "isSquareFootage", 10, isOptional))// isOptonal to isOptional
                    {
                        //validationErrorList.addError("siteinspection_squarefootage", new ValidationException("siteinspection_squarefootage", "Invalid SITEINSPECTION_SQUAREFOOTAGE:::" + cardholderProfileVO.getSiteinspection_squarefootage(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_SQUAREFOOTAGE);
                        validationErrorList.addError("siteinspection_squarefootage", new PZValidationException("siteinspection_squarefootage",ErrorMessages.INVALID_SITEINSPECTION_SQUAREFOOTAGE  + ":::" + cardholderProfileVO.getSiteinspection_squarefootage(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_squarefootage("");
                    }
                    break;
                case siteinspection_operatebusiness:

                    if (!ESAPI.validator().isValidInput("siteinspection_operatebusiness", cardholderProfileVO.getSiteinspection_operatebusiness(), "isYN", 30, isOptional)) // isOptonal to isOptional
                    {
                        //validationErrorList.addError("siteinspection_operatebusiness", new ValidationException("siteinspection_operatebusiness", "Invalid SITEINSPECTION_OPERATEBUSINESS:::" + cardholderProfileVO.getSiteinspection_operatebusiness(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_OPERATEBUSINESS);
                        validationErrorList.addError("siteinspection_operatebusiness", new PZValidationException("siteinspection_operatebusiness",ErrorMessages.INVALID_SITEINSPECTION_OPERATEBUSINESS  + ":::" + cardholderProfileVO.getSiteinspection_squarefootage(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_operatebusiness("");
                    }
                    break;
                case siteinspection_principal1:

                    if (!ESAPI.validator().isValidInput("siteinspection_principal1", cardholderProfileVO.getSiteinspection_principal1(), "alphanum", 100, isOptional)) // isOptonal to isOptional
                    {
                        //validationErrorList.addError("siteinspection_principal1", new ValidationException("siteinspection_principal1", "Invalid Principal#1:::" + cardholderProfileVO.getSiteinspection_principal1(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_PRINCIPAL1);
                        validationErrorList.addError("siteinspection_principal1", new PZValidationException("siteinspection_principal1",ErrorMessages.INVALID_SITEINSPECTION_PRINCIPAL1  + ":::" + cardholderProfileVO.getSiteinspection_principal1(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_principal1("");
                    }
                    break;
                case siteinspection_principal1_date:

                    if (!ESAPI.validator().isValidInput("siteinspection_principal1_date", cardholderProfileVO.getSiteinspection_principal1_date(), "fromDate", 100, isOptional) || (functions.isValueNull(cardholderProfileVO.getSiteinspection_principal1_date()) && (functions.isRandomDate(cardholderProfileVO.getSiteinspection_principal1_date(), "dd/MM/yyyy") || functions.isFutureDate(cardholderProfileVO.getSiteinspection_principal1_date(), "dd/MM/yyyy")) ))// isOptonal to isOptional))
                    {
                        //validationErrorList.addError("siteinspection_principal1_date", new ValidationException("siteinspection_principal1_date", "Invalid PRINCIPAL1_DATE:::" + cardholderProfileVO.getSiteinspection_principal1_date(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_PRINCIPAL1_DATE);
                        validationErrorList.addError("siteinspection_principal1_date", new PZValidationException("siteinspection_principal1_date",ErrorMessages.INVALID_SITEINSPECTION_PRINCIPAL1_DATE  + ":::" + cardholderProfileVO.getSiteinspection_principal1_date(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_principal1_date("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getSiteinspection_principal1_date()))
                    {
                        cardholderProfileVO.setSiteinspection_principal1_date(commonFunctionUtil.convertDatepickerToTimestamp(cardholderProfileVO.getSiteinspection_principal1_date(), "00:00:00"));
                    }
                    break;
                case siteinspection_principal2:
                    if (!ESAPI.validator().isValidInput("siteinspection_principal2", cardholderProfileVO.getSiteinspection_principal2(), "alphanum", 100, isOptional))
                    {
                        //validationErrorList.addError("siteinspection_principal2", new ValidationException("siteinspection_principal2", "Invalid PRINCIPAL2:::" + cardholderProfileVO.getSiteinspection_principal2(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_PRINCIPAL2);
                        validationErrorList.addError("siteinspection_principal2", new PZValidationException("siteinspection_principal2",ErrorMessages.INVALID_SITEINSPECTION_PRINCIPAL2  + ":::" + cardholderProfileVO.getSiteinspection_principal2(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_principal2("");
                    }
                    break;
                case siteinspection_principal2_date:
                    if (!ESAPI.validator().isValidInput("siteinspection_principal2_date", cardholderProfileVO.getSiteinspection_principal2_date(), "fromDate", 30, isOptional) || (functions.isValueNull(cardholderProfileVO.getSiteinspection_principal2_date()) && (functions.isRandomDate(cardholderProfileVO.getSiteinspection_principal2_date(), "dd/MM/yyyy") || functions.isFutureDate(cardholderProfileVO.getSiteinspection_principal2_date(), "dd/MM/yyyy")) ))
                    {
                        //validationErrorList.addError("siteinspection_principal2_date", new ValidationException("siteinspection_principal2_date", "Invalid PRINCIPAL2_DATE:::" + cardholderProfileVO.getSiteinspection_principal2_date(), "5"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SITEINSPECTION_PRINCIPAL2_DATE);
                        validationErrorList.addError("siteinspection_principal2_date", new PZValidationException("siteinspection_principal2_date",ErrorMessages.INVALID_SITEINSPECTION_PRINCIPAL2_DATE  + ":::" + cardholderProfileVO.getSiteinspection_principal2_date(), "5", errorCodeVO));
                        cardholderProfileVO.setSiteinspection_principal2_date("");
                    }
                    else if (functions.isValueNull(cardholderProfileVO.getSiteinspection_principal2_date()))
                    {
                        cardholderProfileVO.setSiteinspection_principal2_date(commonFunctionUtil.convertDatepickerToTimestamp(cardholderProfileVO.getSiteinspection_principal2_date(), "00:00:00"));
                    }
                    break;
            }
        }
        if(bankInputNameList.size()>0)
        {
            InputValidations(cardholderProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);
        }
    }

    //newly added
    public void InputValidations(ExtraDetailsProfileVO extraDetailsProfileVO, Set<BankInputName> inputList, ValidationErrorList validationErrorList, boolean isOptional,boolean conditionalValidation,Map<Boolean,Set<BankInputName>> bankInputNameBooleanMap)
    {
        Calendar calendar=Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate=calendar.getTime();

        boolean condCompany_FinancialReportYes = false;
        boolean condFinancialReport_AvailableYes = false;
        boolean condCompliance_PunitiveSanctionYes = false;
        boolean condFulfillment_ProductEmailYes = false;
        boolean condBlacklistedAccountClosedYes = false;
        boolean condDeedOfAgreementYes = false;

        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        Set<BankInputName> bankInputNameList=new HashSet<BankInputName>();

        if(bankInputNameBooleanMap==null)
        {
            bankInputNameBooleanMap = new HashMap<Boolean,Set<BankInputName>>();
        }
        for (BankInputName input : inputList)
        {
            switch (input)
            {
                case ownersince:
                    if (!ESAPI.validator().isValidInput("ownersince", extraDetailsProfileVO.getOwnerSince(), "fromDate", 50, isOptional) || (functions.isValueNull(extraDetailsProfileVO.getOwnerSince()) && (functions.isRandomDate(extraDetailsProfileVO.getOwnerSince(), "dd/MM/yyyy") || functions.isFutureDate(extraDetailsProfileVO.getOwnerSince(), "dd/MM/yyyy")) ))
                    {
                        //validationErrorList.addError("ownersince", new ValidationException("ownersince", "Invalid owner since" + extraDetailsProfileVO.getOwnerSince(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_OWNERSINCE);
                        validationErrorList.addError("ownersince", new PZValidationException("ownersince",ErrorMessages.INVALID_OWNERSINCE  + ":::" + extraDetailsProfileVO.getOwnerSince(), "6", errorCodeVO));
                        extraDetailsProfileVO.setOwnerSince("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getOwnerSince()))
                    {
                        boolean isvalidOwnersince = true;
                        Date passedDate = null;
                        try
                        {
                            passedDate = sdf.parse(extraDetailsProfileVO.getOwnerSince());
                        }
                        catch (ParseException e)
                        {
                            isvalidOwnersince = false;
                        }

                        if (passedDate != null && passedDate.after(currentDate))
                        {
                            isvalidOwnersince = false;
                        }

                        if (!isvalidOwnersince)
                        {
                            //validationErrorList.addError("ownersince", new ValidationException("ownersince", "Invalid  Owner since:::" + extraDetailsProfileVO.getOwnerSince(), "6"));
                            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_OWNERSINCE);
                            validationErrorList.addError("ownersince", new PZValidationException("socialsecurity",ErrorMessages.INVALID_OWNERSINCE  + ":::" + extraDetailsProfileVO.getOwnerSince(), "6", errorCodeVO));
                            extraDetailsProfileVO.setOwnerSince("");
                        }

                        else
                        {
                            extraDetailsProfileVO.setOwnerSince(commonFunctionUtil.convertDatepickerToTimestamp(extraDetailsProfileVO.getOwnerSince(), "00:00:00"));
                        }
                    }
                    break;
                case socialsecurity:
                    if (!ESAPI.validator().isValidInput("socialsecurity", extraDetailsProfileVO.getSocialSecurity(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("socialsecurity", new ValidationException("socialsecurity", "Invalid social security:::" + extraDetailsProfileVO.getSocialSecurity(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SOCIALSECURITY);
                        validationErrorList.addError("socialsecurity", new PZValidationException("socialsecurity",ErrorMessages.INVALID_SOCIALSECURITY  + ":::" + extraDetailsProfileVO.getSocialSecurity(), "6", errorCodeVO));
                        extraDetailsProfileVO.setSocialSecurity("");
                    }
                    break;
                case company_formparticipation:
                    if (!ESAPI.validator().isValidInput("company_formparticipation", extraDetailsProfileVO.getCompany_formParticipation(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("company_formparticipation", new ValidationException("company_formparticipation", "Invalid company form participation:::" + extraDetailsProfileVO.getCompany_formParticipation(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FORMPARTICIPATION);
                        validationErrorList.addError("company_formparticipation", new PZValidationException("company_formparticipation",ErrorMessages.INVALID_FORMPARTICIPATION  + ":::" + extraDetailsProfileVO.getCompany_formParticipation(), "6", errorCodeVO));
                        extraDetailsProfileVO.setCompany_formParticipation("");
                    }
                    break;
                case financialobligation:
                    if (!ESAPI.validator().isValidInput("financialobligation", extraDetailsProfileVO.getFinancialObligation(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("financialobligation", new ValidationException("financialobligation", "Invalid financial obligation:::" + extraDetailsProfileVO.getFinancialObligation(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FINANCIALOBLIGATION);
                        validationErrorList.addError("financialobligation", new PZValidationException("financialobligation",ErrorMessages.INVALID_FINANCIALOBLIGATION  + ":::" + extraDetailsProfileVO.getFinancialObligation(), "6", errorCodeVO));
                        extraDetailsProfileVO.setFinancialObligation("");
                    }
                    break;
                case workingexperience:
                    if (!ESAPI.validator().isValidInput("workingexperience", extraDetailsProfileVO.getWorkingExperience(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("workingexperience", new ValidationException("workingexperience", "Invalid working experience:::" + extraDetailsProfileVO.getWorkingExperience(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_WORKINGEXPERIENCE);
                        validationErrorList.addError("workingexperience", new PZValidationException("workingexperience",ErrorMessages.INVALID_WORKINGEXPERIENCE  + ":::" + extraDetailsProfileVO.getWorkingExperience(), "6", errorCodeVO));
                        extraDetailsProfileVO.setWorkingExperience("");
                    }
                    break;
                case company_financialreport:


                    if (!ESAPI.validator().isValidInput("company_financialreport", extraDetailsProfileVO.getCompany_financialReport(), "isYN", 3, isOptional))// isOptional to isOptional
                    {
                        //validationErrorList.addError("company_financialreport", new ValidationException("company_financialreport", "Invalid company financial report:::" + extraDetailsProfileVO.getCompany_financialReport(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORT);
                        validationErrorList.addError("company_financialreport", new PZValidationException("company_financialreport",ErrorMessages.INVALID_COMPANY_FINANCIALREPORT  + ":::" + extraDetailsProfileVO.getCompany_financialReport(), "6", errorCodeVO));
                        extraDetailsProfileVO.setCompany_financialReport("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getCompany_financialReport()))
                    {
                        if ("N".equals(extraDetailsProfileVO.getCompany_financialReport()))
                        {
                            condCompany_FinancialReportYes = true;
                        }
                        else
                        {
                            condCompany_FinancialReportYes = isOptional;
                        }
                        bankInputNameList.add(BankInputName.company_financialreportyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap,BankInputName.company_financialreportyes,condCompany_FinancialReportYes);
                    }
                    break;
                case company_financialreportyes:

                    if (!ESAPI.validator().isValidInput("company_financialreportyes", extraDetailsProfileVO.getCompany_financialReportYes(), "alphanum", 200, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("company_financialreportyes", new ValidationException("company_financialreportyes", "Invalid company financial report yes:::" + extraDetailsProfileVO.getCompany_financialReportYes(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORTYES);
                        validationErrorList.addError("company_financialreportyes", new PZValidationException("company_financialreportyes",ErrorMessages.INVALID_COMPANY_FINANCIALREPORTYES  + ":::" + extraDetailsProfileVO.getCompany_financialReportYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setCompany_financialReportYes("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getCompany_financialReportYes()) && (!functions.isValueNull(extraDetailsProfileVO.getCompany_financialReport()) || "N".equals(extraDetailsProfileVO.getCompany_financialReport())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORTYES_SELECTION);
                        validationErrorList.addError("company_financialreportyes", new PZValidationException("company_financialreportyes",ErrorMessages.INVALID_COMPANY_FINANCIALREPORTYES_SELECTION + ":::" + extraDetailsProfileVO.getCompany_financialReportYes(),"6", errorCodeVO));
                        extraDetailsProfileVO.setCompany_financialReportYes("");
                    }
                    break;
                case financialreport_institution:
                    if (!ESAPI.validator().isValidInput("financialreport_institution", extraDetailsProfileVO.getFinancialReport_institution(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("financialreport_institution", new ValidationException("financialreport_institution", "Invalid financialreport_institution:::" + extraDetailsProfileVO.getFinancialReport_institution(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORT_INSTITUTION);
                        validationErrorList.addError("financialreport_institution", new PZValidationException("financialreport_institution",ErrorMessages.INVALID_COMPANY_FINANCIALREPORT_INSTITUTION  + ":::" + extraDetailsProfileVO.getFinancialReport_institution(), "6", errorCodeVO));
                        extraDetailsProfileVO.setFinancialReport_institution("");
                    }
                    break;
                case financialreport_available:
                    if (!ESAPI.validator().isValidInput("financialreport_available", extraDetailsProfileVO.getFinancialReport_available(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("financialreport_available", new ValidationException("financialreport_available", "Invalid financial report available:::" + extraDetailsProfileVO.getFinancialReport_available(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORT_AVAILABLE);
                        validationErrorList.addError("financialreport_available", new PZValidationException("financialreport_available",ErrorMessages.INVALID_COMPANY_FINANCIALREPORT_AVAILABLE  + ":::" + extraDetailsProfileVO.getFinancialReport_available(), "6", errorCodeVO));
                        extraDetailsProfileVO.setFinancialReport_available("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getFinancialReport_available()))
                    {
                        if ("N".equals(extraDetailsProfileVO.getFinancialReport_available()))
                        {
                            condFinancialReport_AvailableYes = true;
                        }
                        else
                        {
                            condFinancialReport_AvailableYes = isOptional;
                        }

                        bankInputNameList.add(BankInputName.financialreport_availableyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.financialreport_availableyes, condFinancialReport_AvailableYes);
                    }
                    break;
                case financialreport_availableyes:

                    if (!ESAPI.validator().isValidInput("financialreport_availableyes", extraDetailsProfileVO.getFinancialReport_availableYes(), "alphanum", 200,  bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("financialreport_availableyes", new ValidationException("financialreport_availableyes", "Invalid financial report available yes:::" + extraDetailsProfileVO.getFinancialReport_availableYes(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORT_AVAILABLEYES);
                        validationErrorList.addError("financialreport_availableyes", new PZValidationException("financialreport_availableyes",ErrorMessages.INVALID_COMPANY_FINANCIALREPORT_AVAILABLEYES  + ":::" + extraDetailsProfileVO.getFinancialReport_availableYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setFinancialReport_availableYes("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getFinancialReport_availableYes()) && (!functions.isValueNull(extraDetailsProfileVO.getFinancialReport_available()) || "N".equals(extraDetailsProfileVO.getFinancialReport_available())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_FINANCIALREPORT_AVAILABLEYES_SELECTION);
                        validationErrorList.addError("financialreport_availableyes", new PZValidationException("financialreport_availableyes",ErrorMessages.INVALID_COMPANY_FINANCIALREPORT_AVAILABLEYES_SELECTION + ":::" + extraDetailsProfileVO.getFinancialReport_availableYes(),"6", errorCodeVO));
                        extraDetailsProfileVO.setFinancialReport_availableYes("");
                    }
                    break;


                case compliance_punitivesanction:
                    if (!ESAPI.validator().isValidInput("compliance_punitivesanction", extraDetailsProfileVO.getCompliance_punitiveSanction(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("compliance_punitivesanction", new ValidationException("compliance_punitivesanction", "Invalid compliance punitive sanction:::" + extraDetailsProfileVO.getCompliance_punitiveSanction(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PUNITIVESANCTION);
                        validationErrorList.addError("compliance_punitivesanction", new PZValidationException("compliance_punitivesanction",ErrorMessages.INVALID_COMPLIANCE_PUNITIVESANCTION  + ":::" + extraDetailsProfileVO.getCompliance_punitiveSanction(), "6", errorCodeVO));
                        extraDetailsProfileVO.setCompliance_punitiveSanction("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getCompliance_punitiveSanction()))
                    {
                        if ("N".equals(extraDetailsProfileVO.getCompliance_punitiveSanction()))
                        {
                            condCompliance_PunitiveSanctionYes = true;
                        }
                        else
                        {
                            condCompliance_PunitiveSanctionYes = isOptional;
                        }

                        bankInputNameList.add(BankInputName.compliance_punitivesanctionyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.compliance_punitivesanctionyes, condCompliance_PunitiveSanctionYes);
                    }
                    break;
                case compliance_punitivesanctionyes:

                    if (!ESAPI.validator().isValidInput("compliance_punitivesanctionyes", extraDetailsProfileVO.getCompliance_punitiveSanctionYes(), "alphanum", 200, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("compliance_punitivesanctionyes", new ValidationException("compliance_punitivesanctionyes", "Invalid compliance punitive sanction yes:::" + extraDetailsProfileVO.getCompliance_punitiveSanctionYes(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PUNITIVESANCTIONYES);
                        validationErrorList.addError("compliance_punitivesanctionyes", new PZValidationException("compliance_punitivesanctionyes",ErrorMessages.INVALID_COMPLIANCE_PUNITIVESANCTIONYES  + ":::" + extraDetailsProfileVO.getCompliance_punitiveSanctionYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setCompliance_punitiveSanctionYes("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getCompliance_punitiveSanctionYes()) && (!functions.isValueNull(extraDetailsProfileVO.getCompliance_punitiveSanction()) || "N".equals(extraDetailsProfileVO.getCompliance_punitiveSanction())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPLIANCE_PUNITIVESANCTIONYES_SELECTION);
                        validationErrorList.addError("compliance_punitivesanctionyes", new PZValidationException("compliance_punitivesanctionyes", ErrorMessages.INVALID_COMPLIANCE_PUNITIVESANCTIONYES_SELECTION + ":::" + extraDetailsProfileVO.getCompliance_punitiveSanctionYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setCompliance_punitiveSanctionYes("");
                    }
                    break;

                case deedofagreement:

                    if (!ESAPI.validator().isValidInput("deedofagreement", extraDetailsProfileVO.getDeedOfAgreement(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("deedofagreement", new ValidationException("deedofagreement", "Invalid deed of agreement:::" + extraDetailsProfileVO.getDeedOfAgreement(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DEEDOFAGREEMENT);
                        validationErrorList.addError("deedofagreement", new PZValidationException("deedofagreement",ErrorMessages.INVALID_DEEDOFAGREEMENT  + ":::" + extraDetailsProfileVO.getDeedOfAgreement(), "6", errorCodeVO));
                        extraDetailsProfileVO.setDeedOfAgreement("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getDeedOfAgreement()))
                    {
                        if ("N".equals(extraDetailsProfileVO.getDeedOfAgreement()))
                        {
                            condDeedOfAgreementYes = true;
                        }
                        else
                        {
                            condDeedOfAgreementYes = isOptional;
                        }

                        bankInputNameList.add(BankInputName.deedofagreementyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.deedofagreementyes, condDeedOfAgreementYes);
                    }
                    break;
                case deedofagreementyes:

                    if (!ESAPI.validator().isValidInput("deedofagreementyes", extraDetailsProfileVO.getDeedOfAgreementYes(), "alphanum", 200, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("deedofagreementyes", new ValidationException("deedofagreementyes", "Invalid deed of agreement yes:::" + extraDetailsProfileVO.getDeedOfAgreementYes(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DEEDOFAGREEMENTYES);
                        validationErrorList.addError("deedofagreementyes", new PZValidationException("deedofagreementyes", ErrorMessages.INVALID_DEEDOFAGREEMENTYES  + ":::" + extraDetailsProfileVO.getDeedOfAgreementYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setDeedOfAgreementYes("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getDeedOfAgreementYes()) && (!functions.isValueNull(extraDetailsProfileVO.getDeedOfAgreement()) || "N".equals(extraDetailsProfileVO.getDeedOfAgreement())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_DEEDOFAGREEMENTYES_SELECTION);
                        validationErrorList.addError("deedofagreementyes", new PZValidationException("deedofagreementyes",ErrorMessages.INVALID_DEEDOFAGREEMENTYES_SELECTION + ":::" + extraDetailsProfileVO.getDeedOfAgreementYes(),"6", errorCodeVO));
                        extraDetailsProfileVO.setDeedOfAgreementYes("");
                    }
                    break;
                case goodsinsuranceoffered:
                    if (!ESAPI.validator().isValidInput("goodsinsuranceoffered", extraDetailsProfileVO.getGoodsInsuranceOffered(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("goodsinsuranceoffered", new ValidationException("goodsinsuranceoffered", "Invalid goods insurance offered:::" + extraDetailsProfileVO.getGoodsInsuranceOffered(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_GOODSINSURANCEOFFERED);
                        validationErrorList.addError("goodsinsuranceoffered", new PZValidationException("goodsinsuranceoffered",ErrorMessages.INVALID_GOODSINSURANCEOFFERED  + ":::" + extraDetailsProfileVO.getGoodsInsuranceOffered(), "6", errorCodeVO));
                        extraDetailsProfileVO.setGoodsInsuranceOffered("");
                    }
                    break;
                case fulfillment_productemail:
                    if (!ESAPI.validator().isValidInput("fulfillment_productemail", extraDetailsProfileVO.getFulfillment_productEmail(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("fulfillment_productemail", new ValidationException("fulfillment_productemail", "Invalid fulfillment product email:::" + extraDetailsProfileVO.getFulfillment_productEmail(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FULFILLMENT_PRODUCTEMAIL);
                        validationErrorList.addError("fulfillment_productemail", new PZValidationException("fulfillment_productemail",ErrorMessages.INVALID_FULFILLMENT_PRODUCTEMAIL  + ":::" + extraDetailsProfileVO.getFulfillment_productEmail(), "6", errorCodeVO));
                        extraDetailsProfileVO.setFulfillment_productEmail("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getFulfillment_productEmail()))
                    {
                        if ("N".equals(extraDetailsProfileVO.getFulfillment_productEmail()))
                        {
                            condFulfillment_ProductEmailYes = true;
                        }
                        else
                        {
                            condFulfillment_ProductEmailYes = isOptional;
                        }

                        bankInputNameList.add(BankInputName.fulfillment_productemailyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.fulfillment_productemailyes, condFulfillment_ProductEmailYes);
                    }
                    break;
                case fulfillment_productemailyes:

                    if (!ESAPI.validator().isValidInput("fulfillment_productemailyes", extraDetailsProfileVO.getFulfillment_productEmailYes(), "alphanum", 200, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("fulfillment_productemailyes", new ValidationException("fulfillment_productemailyes", "Invalid fulfillment product email yes:::" + extraDetailsProfileVO.getFulfillment_productEmailYes(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FULFILLMENT_PRODUCTEMAILYES);
                        validationErrorList.addError("fulfillment_productemailyes", new PZValidationException("fulfillment_productemailyes", ErrorMessages.INVALID_FULFILLMENT_PRODUCTEMAILYES  + ":::" + extraDetailsProfileVO.getFulfillment_productEmailYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setFulfillment_productEmailYes("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getFulfillment_productEmailYes()) && (!functions.isValueNull(extraDetailsProfileVO.getFulfillment_productEmail()) || "N".equals(extraDetailsProfileVO.getFulfillment_productEmail())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FULFILLMENT_PRODUCTEMAILYES_SELECTION);
                        validationErrorList.addError("fulfillment_productemailyes", new PZValidationException("fulfillment_productemailyes",ErrorMessages.INVALID_FULFILLMENT_PRODUCTEMAILYES_SELECTION + ":::" + extraDetailsProfileVO.getFulfillment_productEmailYes(),"6", errorCodeVO));
                        extraDetailsProfileVO.setFulfillment_productEmailYes("");
                    }
                    break;
                case blacklistedaccountclosed:
                    if (!ESAPI.validator().isValidInput("blacklistedaccountclosed", extraDetailsProfileVO.getBlacklistedAccountClosed(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("blacklistedaccountclosed", new ValidationException("blacklistedaccountclosed", "Invalid blacklisted account closed:::" + extraDetailsProfileVO.getBlacklistedAccountClosed(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BLACKLISTEDACCOUNTCLOSED);
                        validationErrorList.addError("blacklistedaccountclosed", new PZValidationException("blacklistedaccountclosed",ErrorMessages.INVALID_BLACKLISTEDACCOUNTCLOSED  + ":::" + extraDetailsProfileVO.getBlacklistedAccountClosed(), "6", errorCodeVO));
                        extraDetailsProfileVO.setBlacklistedAccountClosed("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getBlacklistedAccountClosed()))
                    {
                        if ("N".equals(extraDetailsProfileVO.getBlacklistedAccountClosed()))
                        {
                            condBlacklistedAccountClosedYes = true;
                        }
                        else
                        {
                            condBlacklistedAccountClosedYes = isOptional;
                        }

                        bankInputNameList.add(BankInputName.blacklistedaccountclosedyes);
                        setDependencyBankInputValidation(bankInputNameBooleanMap, BankInputName.blacklistedaccountclosedyes, condBlacklistedAccountClosedYes);
                    }
                    break;
                case blacklistedaccountclosedyes:

                    if (!ESAPI.validator().isValidInput("blacklistedaccountclosedyes", extraDetailsProfileVO.getBlacklistedAccountClosedYes(), "alphanum", 200, bankInputNameBooleanMap.containsKey(false) && bankInputNameBooleanMap.get(false).contains(input)?false:true))
                    {
                        //validationErrorList.addError("blacklistedaccountclosedyes", new ValidationException("blacklistedaccountclosedyes", "Invalid blacklisted account closed yes:::" + extraDetailsProfileVO.getBlacklistedAccountClosedYes(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BLACKLISTEDACCOUNTCLOSEDYES);
                        validationErrorList.addError("blacklistedaccountclosedyes", new PZValidationException("blacklistedaccountclosedyes",ErrorMessages.INVALID_BLACKLISTEDACCOUNTCLOSEDYES  + ":::" + extraDetailsProfileVO.getBlacklistedAccountClosedYes(), "6", errorCodeVO));
                        extraDetailsProfileVO.setBlacklistedAccountClosed("");
                    }
                    else if (functions.isValueNull(extraDetailsProfileVO.getBlacklistedAccountClosedYes()) && (!functions.isValueNull(extraDetailsProfileVO.getBlacklistedAccountClosed()) || "N".equals(extraDetailsProfileVO.getBlacklistedAccountClosed())))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BLACKLISTEDACCOUNTCLOSEDYES_SELECTION);
                        validationErrorList.addError("blacklistedaccountclosedyes", new PZValidationException("blacklistedaccountclosedyes",ErrorMessages.INVALID_BLACKLISTEDACCOUNTCLOSEDYES_SELECTION + ":::" + extraDetailsProfileVO.getBlacklistedAccountClosedYes(),"6", errorCodeVO));
                        extraDetailsProfileVO.setBlacklistedAccountClosedYes("");
                    }
                    break;
                case shiping_deliverymethod:

                    if (!ESAPI.validator().isValidInput("shiping_deliverymethod", extraDetailsProfileVO.getShiping_deliveryMethod(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("shiping_deliverymethod", new ValidationException("shiping_deliverymethod", "Invalid shiping delivery method:::" + extraDetailsProfileVO.getShiping_deliveryMethod(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SHIPING_DELIVERYMETHOD);
                        validationErrorList.addError("shiping_deliverymethod", new PZValidationException("shiping_deliverymethod",ErrorMessages.INVALID_SHIPING_DELIVERYMETHOD  + ":::" + extraDetailsProfileVO.getShiping_deliveryMethod(), "6", errorCodeVO));
                        extraDetailsProfileVO.setShiping_deliveryMethod("");
                    }
                    break;
                case transactionmonitoringprocess:
                    if (!ESAPI.validator().isValidInput("transactionmonitoringprocess", extraDetailsProfileVO.getTransactionMonitoringProcess(), "alphanum", 50, isOptional))
                    {
                        //validationErrorList.addError("transactionmonitoringprocess", new ValidationException("transactionmonitoringprocess", "Invalid transaction monitoring processe:::" + extraDetailsProfileVO.getTransactionMonitoringProcess(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_TRANSACTIONMONITORINGPROCESS);
                        validationErrorList.addError("transactionmonitoringprocess", new PZValidationException("transactionmonitoringprocess",ErrorMessages.INVALID_TRANSACTIONMONITORINGPROCESS  + ":::" + extraDetailsProfileVO.getTransactionMonitoringProcess(), "6", errorCodeVO));
                        extraDetailsProfileVO.setTransactionMonitoringProcess("");
                    }
                    break;
                case operationallicense:

                    if (!ESAPI.validator().isValidInput("operationallicense", extraDetailsProfileVO.getOperationalLicense(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("operationallicense", new ValidationException("operationallicense", "Invalid operational license:::" + extraDetailsProfileVO.getOperationalLicense(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_OPERATIONALLICENSE);
                        validationErrorList.addError("operationallicense", new PZValidationException("operationallicense",ErrorMessages.INVALID_OPERATIONALLICENSE  + ":::" + extraDetailsProfileVO.getOperationalLicense(), "6", errorCodeVO));
                        extraDetailsProfileVO.setOperationalLicense("");
                    }
                    break;
                case supervisorregularcontrole:
                    if (!ESAPI.validator().isValidInput("supervisorregularcontrole", extraDetailsProfileVO.getSupervisorregularcontrole(), "isYN", 3, isOptional))
                    {
                        //validationErrorList.addError("supervisorregularcontrole", new ValidationException("supervisorregularcontrole", "Invalid supervisor regular controle:::" + extraDetailsProfileVO.getSupervisorregularcontrole(), "6"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_SUPERVISORREGULARCONTROLE);
                        validationErrorList.addError("supervisorregularcontrole", new PZValidationException("supervisorregularcontrole",ErrorMessages.INVALID_SUPERVISORREGULARCONTROLE  + ":::" + extraDetailsProfileVO.getSupervisorregularcontrole(), "6", errorCodeVO));
                        extraDetailsProfileVO.setSupervisorregularcontrole("");
                    }
                    break;


            }

        }

        if(bankInputNameList.size()>0)
        {
            InputValidations(extraDetailsProfileVO,bankInputNameList,validationErrorList,isOptional,conditionalValidation,bankInputNameBooleanMap);
        }

    }

/*    public void InputValidations(ApplicationManagerVO applicationManagerVO,Set<BankInputName> inputList,ValidationErrorList validationErrorList,boolean isOptional)
    {
        Calendar calendar=Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate=calendar.getTime();

        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        for (BankInputName input : inputList)
        {
            switch (input)
            {
                case merchantname:
                    if (!ESAPI.validator().isValidInput("merchantname", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(), "alphanum", 100, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("merchantname", new ValidationException("merchantname", "Invalid Merchant Name :::" + applicationManagerVO.getCompanyProfileVO().getMerchantName()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTNAME);
                        validationErrorList.addError("merchantname", new PZValidationException("merchantname",ErrorMessages.INVALID_MERCHANTNAME  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(),  errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCompany_name("");
                    }
                    break;
                case corporatename:
                    if (!ESAPI.validator().isValidInput("corporatename", applicationManagerVO.getCompanyProfileVO().getCorporateName(), "alphanum", 255, isOptional))//alphanum to StrictString
                    {
                        //validationErrorList.addError("corporatename", new ValidationException("corporatename", "Invalid Corporate Name:::" + applicationManagerVO.getCompanyProfileVO().getCorporateName()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CORPORATENAME);
                        validationErrorList.addError("corporatename", new PZValidationException("corporatename",ErrorMessages.INVALID_CORPORATENAME  + ":::" + applicationManagerVO.getCompanyProfileVO().getCorporateName(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setCorporateName("");
                    }
                    break;
                case contactname:
                    if (!ESAPI.validator().isValidInput("contactname", applicationManagerVO.getCompanyProfileVO().getContactName(), "alphanum", 255, true))
                    {
                        //validationErrorList.addError("contactname", new ValidationException("contactname", "Invalid Contact Name:::" + applicationManagerVO.getCompanyProfileVO().getContactName()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CONTACTNAME);
                        validationErrorList.addError("contactname", new PZValidationException("contactname",ErrorMessages.INVALID_CONTACTNAME  + ":::" + applicationManagerVO.getCompanyProfileVO().getContactName(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setContactName("");
                    }
                    break;
                case companyregistrationnumber:
                    if (!ESAPI.validator().isValidInput("companyregistrationnumber", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getRegistration_number(), "alphanum", 15, isOptional))
                    {
                        //validationErrorList.addError("companyregistrationnumber", new ValidationException("companyregistrationnumber", "Invalid Company Registration Number :::" + applicationManagerVO.getCompanyProfileVO().getCompanyRegistrationNumber()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYREGISTRATIONNUMBER);
                        validationErrorList.addError("companyregistrationnumber", new PZValidationException("companyregistrationnumber",ErrorMessages.INVALID_COMPANYREGISTRATIONNUMBER  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyRegistrationNumber(),  errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setRegistration_number("");
                    }
                    break;

                case Company_Date_Registration:
                    if (!ESAPI.validator().isValidInput("Company_Date_Registration", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "fromDate", 50, isOptional) || (applicationManagerVO.getCompanyProfileVO().getCompany_Date_Registration()!=null && (functions.isFutureDate(applicationManagerVO.getCompanyProfileVO().getCompany_Date_Registration(), "dd/MM/yyyy") || functions.isRandomDate(applicationManagerVO.getCompanyProfileVO().getCompany_Date_Registration(), "dd/MM/yyyy"))))
                    {
                        //validationErrorList.addError("Company_Date_Registration", new ValidationException("Company_Date_Registration", "Invalid CompanyDate of Registration:::" + applicationManagerVO.getCompanyProfileVO().getCompany_Date_Registration()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_DATE_REGISTRATION);
                        validationErrorList.addError("Company_Date_Registration", new PZValidationException("Company_Date_Registration",ErrorMessages.INVALID_COMPANY_DATE_REGISTRATION  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(),  errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setDate_of_registration("");
                    }
                    break;

                case locationaddress:
                    if (!ESAPI.validator().isValidInput("locationaddress", applicationManagerVO.getCompanyProfileVO().getLocationAddress(), "AppAddress", 255, isOptional))
                    {
                        //validationErrorList.addError("locationaddress", new ValidationException("locationaddress", "Invalid location Address:::" + applicationManagerVO.getCompanyProfileVO().getLocationAddress()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LOCATIONADDRESS);
                        validationErrorList.addError("locationaddress", new PZValidationException("locationaddress",ErrorMessages.INVALID_LOCATIONADDRESS  + ":::" + applicationManagerVO.getCompanyProfileVO().getLocationAddress(),  errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setLocationAddress("");
                    }
                    break;
                case vatidentification:
                    if (!ESAPI.validator().isValidInput("vatidentification", applicationManagerVO.getCompanyProfileVO().getVatIdentification(), "alphanum", 15, true))
                    {
                        //validationErrorList.addError("vatidentification", new ValidationException("vatidentification", "Invalid VAT Identification:::" + applicationManagerVO.getCompanyProfileVO().getVatIdentification()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_VATIDENTIFICATION);
                        validationErrorList.addError("vatidentification", new PZValidationException("vatidentification",ErrorMessages.INVALID_VATIDENTIFICATION  + ":::" + applicationManagerVO.getCompanyProfileVO().getVatIdentification(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setVatIdentification("");
                    }
                    break;
                case merchantzipcode:
                    if (!ESAPI.validator().isValidInput("merchantzipcode", applicationManagerVO.getCompanyProfileVO().getMerchantZipCode(), "Zip", 30, true))
                    {
                        //validationErrorList.addError("merchantzipcode", new ValidationException("merchantzipcode", "Invalid Merchant Zip:::" + applicationManagerVO.getCompanyProfileVO().getMerchantZipCode()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTZIPCODE);
                        validationErrorList.addError("merchantzipcode", new PZValidationException("merchantzipcode",ErrorMessages.INVALID_MERCHANTZIPCODE  + ":::" + applicationManagerVO.getCompanyProfileVO().getMerchantZipCode(),  errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setMerchantZipCode("");
                    }
                    break;
                case merchantcountry:
                    if (!ESAPI.validator().isValidInput("merchantcountry", applicationManagerVO.getCompanyProfileVO().getMerchantCountry(), "AppCountry", 100, isOptional))
                    {
                        //validationErrorList.addError("merchantcountry", new ValidationException("merchantcountry", "Invalid Merchant Country :::" + applicationManagerVO.getCompanyProfileVO().getMerchantCountry()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTCOUNTRY);
                        validationErrorList.addError("merchantcountry", new PZValidationException("merchantcountry",ErrorMessages.INVALID_MERCHANTCOUNTRY  + ":::" + applicationManagerVO.getCompanyProfileVO().getMerchantCountry(),  errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setMerchantCountry("");
                    }
                    else if(functions.isValueNull(applicationManagerVO.getCompanyProfileVO().getMerchantCountry()))
                    {
                        String merchantCountry[] = applicationManagerVO.getCompanyProfileVO().getMerchantCountry().split("\\|");
                        applicationManagerVO.getCompanyProfileVO().setMerchantCountry(merchantCountry[0].toString());
                    }
                    break;
                case Companyphonecc1:
                    if (!ESAPI.validator().isValidInput("Companyphonecc1", applicationManagerVO.getCompanyProfileVO().getCompanyphonecc1(), "OnlyNumber", 3, isOptional))
                    {
                        //validationErrorList.addError("Companyphonecc1", new ValidationException("Companyphonecc1", "Invalid Companyphonecc1:::" + applicationManagerVO.getCompanyProfileVO().getCompanyphonecc1()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYPHONECC1);
                        validationErrorList.addError("Companyphonecc1", new PZValidationException("Companyphonecc1",ErrorMessages.INVALID_COMPANYPHONECC1  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyphonecc1(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setCompanyphonecc1("");
                    }
                    break;
                case CompanyTelephoneNO:
                    if (!ESAPI.validator().isValidInput("CompanyTelephoneNO", applicationManagerVO.getCompanyProfileVO().getCompanyTelephoneNO(), "Phone", 15, isOptional))
                    {
                        //validationErrorList.addError("CompanyTelephoneNO", new ValidationException("CompanyTelephoneNO", "Invalid CompanyTelephoneNO:::" + applicationManagerVO.getCompanyProfileVO().getCompanyTelephoneNO()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYTELEPHONENO);
                        validationErrorList.addError("CompanyTelephoneNO", new PZValidationException("CompanyTelephoneNO",ErrorMessages.INVALID_COMPANYTELEPHONENO  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyTelephoneNO(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setCompanyTelephoneNO("");
                    }
                    break;
                case CompanyEmailAddress:
                    if (!ESAPI.validator().isValidInput("CompanyEmailAddress", applicationManagerVO.getCompanyProfileVO().getCompanyEmailAddress(), "Email", 255, isOptional))
                    {
                        //validationErrorList.addError("CompanyEmailAddress", new ValidationException("CompanyEmailAddress", "Invalid CompanyEmailAddress:::" + applicationManagerVO.getCompanyProfileVO().getCompanyEmailAddress()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYEMAILADDRESS);
                        validationErrorList.addError("CompanyEmailAddress", new PZValidationException("CompanyEmailAddress",ErrorMessages.INVALID_COMPANYEMAILADDRESS  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyEmailAddress(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setCompanyEmailAddress("");
                    }
                    break;
                case urls:
                    if (!ESAPI.validator().isValidInput("urls", applicationManagerVO.getBusinessProfileVO().getUrls(), "CSEURL", 30, isOptional))
                    {
                        //validationErrorList.addError("urls", new ValidationException("urls", "Invalid URL(S):::" + applicationManagerVO.getBusinessProfileVO().getUrls()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_URLS);
                        validationErrorList.addError("urls", new PZValidationException("urls",ErrorMessages.INVALID_URLS  + ":::" + applicationManagerVO.getBusinessProfileVO().getUrls(), errorCodeVO));
                        applicationManagerVO.getBusinessProfileVO().setUrls("");
                    }
                    break;
                case FederalTaxID:
                    if (!ESAPI.validator().isValidInput("FederalTaxID", applicationManagerVO.getCompanyProfileVO().getFedraltaxid(), "alphanum", 15, isOptional))
                    {
                        //validationErrorList.addError("FederalTaxID", new ValidationException("FederalTaxID", "Invalid FederalTaxID:::" + applicationManagerVO.getCompanyProfileVO().getFedraltaxid()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FERDERALTAXID);
                        validationErrorList.addError("FederalTaxID", new PZValidationException("FederalTaxID",ErrorMessages.INVALID_FERDERALTAXID  + ":::" + applicationManagerVO.getCompanyProfileVO().getFedraltaxid(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setFedraltaxid("");
                    }
                    break;
                case merchant_addressproof:
                    if (!ESAPI.validator().isValidInput("merchant_addressproof", applicationManagerVO.getCompanyProfileVO().getMerchant_addressproof(), "addressProofSelect", 20, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MERCHANT_ADDRESS_PROOF);
                        validationErrorList.addError("merchant_addressproof", new PZValidationException("merchant_addressproof", "Invalid Address Proof" + ":::" + applicationManagerVO.getCompanyProfileVO().getMerchant_addressproof(), "1", errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setMerchant_addressproof("");
                    }
                    break;
                case merchant_addressId:
                    if (!ESAPI.validator().isValidInput("merchant_addressId", applicationManagerVO.getCompanyProfileVO().getMerchant_addressId(), "alphanum", 150, isOptional))
                    {
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_MERCHANT_ADDRESS_ID);
                        validationErrorList.addError("merchant_addressId", new PZValidationException("merchant_addressId", "Invalid Address ID" + ":::" + applicationManagerVO.getCompanyProfileVO().getMerchant_addressId(), "1", errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setMerchant_addressId("");
                    }
                    break;
                case company_typeofbusiness:
                    if (!ESAPI.validator().isValidInput("company_typeofbusiness", applicationManagerVO.getCompanyProfileVO().getCompanyTypeOfBusiness(), "company_typeofbusiness", 30, isOptional))
                    {
                        //validationErrorList.addError("company_typeofbusiness", new ValidationException("company_typeofbusiness", "Invalid company_typeofbusiness:::" + applicationManagerVO.getCompanyProfileVO().getCompanyTypeOfBusiness()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_TYPE_OF_BUSINESS);
                        validationErrorList.addError("company_typeofbusiness", new PZValidationException("company_typeofbusiness",ErrorMessages.INVALID_COMPANY_TYPE_OF_BUSINESS  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyTypeOfBusiness(), errorCodeVO));
                        applicationManagerVO.getCompanyProfileVO().setCompanyTypeOfBusiness("");
                    }
                    break;
                case bankinfo_bank_name:

                    if (!ESAPI.validator().isValidInput("bankinfo_bank_name", applicationManagerVO.getBankProfileVO().getBankinfo_bank_name(), "alphanum", 100, isOptional))// isOptional to true
                    {
                        //validationErrorList.addError("bankinfo_bank_name", new ValidationException("bankinfo_bank_name", "Invalid Bank Name:::" + applicationManagerVO.getBankProfileVO().getBankinfo_bank_name()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANK_NAME);
                        validationErrorList.addError("bankinfo_bank_name", new PZValidationException("bankinfo_bank_name",ErrorMessages.INVALID_BANKINFO_BANK_NAME  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_bank_name(), errorCodeVO));
                        applicationManagerVO.getBankProfileVO().setBankinfo_bank_name("");
                    }
                    break;

                *//*case bank_accountnumber_IBAN:
                    logger.debug("Account/IBAN number:::"+applicationManagerVO.getBankProfileVO().getBank_accountnumber_IBAN());
                    if (!ESAPI.validator().isValidInput("bank_accountnumber_IBAN", applicationManagerVO.getBankProfileVO().getBank_accountnumber_IBAN(), "alphanum", 30, isOptional))
                    {
                        //validationErrorList.addError("bank_accountnumber_IBAN", new ValidationException("bank_accountnumber_IBAN", "Invalid Account number/IBAN Number :::" + applicationManagerVO.getBankProfileVO().getBank_accountnumber_IBAN()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANK_ACCOUNTNUMBER_IBAN);
                        validationErrorList.addError("bank_accountnumber_IBAN", new PZValidationException("bank_accountnumber_IBAN",ErrorMessages.INVALID_BANK_ACCOUNTNUMBER_IBAN  + ":::" + applicationManagerVO.getBankProfileVO().getBank_accountnumber_IBAN(), errorCodeVO));
                        applicationManagerVO.getBankProfileVO().setBank_accountnumber_IBAN("");
                    }
                    break;*//*
                case bankinfo_bic:
                    if (!ESAPI.validator().isValidInput("bankinfo_bic", applicationManagerVO.getBankProfileVO().getBankinfo_bic(), "alphanum", 100, true))
                    {
                        //validationErrorList.addError("bankinfo_bic", new ValidationException("bankinfo_bic", "Invalid SWIFT/BIC:::" + applicationManagerVO.getBankProfileVO().getBankinfo_bic(), "4"));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BIC);
                        validationErrorList.addError("bankinfo_bic", new PZValidationException("bankinfo_bic",ErrorMessages.INVALID_BANKINFO_BIC  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_bic(), errorCodeVO));
                        applicationManagerVO.getBankProfileVO().setBankinfo_bic("");
                    }
                    break;
                case bankinfo_accountholder:
                    if (!ESAPI.validator().isValidInput("bankinfo_accountholder", applicationManagerVO.getBankProfileVO().getBankinfo_accountholder(), "alphanum", 30, true))// isOptional to true, StrictString to alphanum
                    {
                        //validationErrorList.addError("bankinfo_accountholder", new ValidationException("bankinfo_accountholder", "Invalid Account Holder:::" + applicationManagerVO.getBankProfileVO().getBankinfo_accountholder()));
                        errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ACCOUNTHOLDER);
                        validationErrorList.addError("bankinfo_accountholder", new PZValidationException("bankinfo_accountholder",ErrorMessages.INVALID_BANKINFO_ACCOUNTHOLDER  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_accountholder(), errorCodeVO));
                        applicationManagerVO.getBankProfileVO().setBankinfo_accountholder("");
                    }
                    break;


            }

        }

    }*/
    /**
     * ReSetting the dependency validation
     * @param bankInputBooleanSetMap
     * @param bankInputName
     * @param inputBoolean
     * @return
     */
    private boolean setDependencyBankInputValidation(Map<Boolean,Set<BankInputName>> bankInputBooleanSetMap,BankInputName bankInputName,boolean inputBoolean)
    {
        boolean isOptional=true;
        Set<BankInputName> bankInputNameSet=new HashSet<BankInputName>();
        if(bankInputName!=null)
        {
            //logger.debug("SET DEPENDENCY BANK INPUT VALIDATION:::"+(bankInputBooleanSetMap.containsKey(false) && bankInputBooleanSetMap.get(false).contains(bankInputName)));
            //logger.debug("BANK INPUT VALIDATION:::"+bankInputBooleanSetMap);
            if(bankInputBooleanSetMap.containsKey(false) && bankInputBooleanSetMap.get(false).contains(bankInputName))
            {
                bankInputNameSet=bankInputBooleanSetMap.get(false);
                isOptional=inputBoolean;

                if(isOptional)
                {
                    bankInputNameSet.remove(bankInputName);
                }

                bankInputBooleanSetMap.put(false,bankInputNameSet);
            }
            else
            {
                bankInputNameSet=bankInputBooleanSetMap.get(true);
                isOptional=inputBoolean;

                if(!isOptional)
                {
                    bankInputNameSet.remove(bankInputName);
                }

                bankInputBooleanSetMap.put(true,bankInputNameSet);
            }
            Set<BankInputName> bankInputNames=null;

            if(bankInputBooleanSetMap.containsKey(isOptional))
            {
                bankInputNames=bankInputBooleanSetMap.get(isOptional);
                bankInputNames.add(bankInputName);
            }
            else
            {
                bankInputNames=new HashSet<BankInputName>();
                bankInputNames.add(bankInputName);
            }

            bankInputBooleanSetMap.put(isOptional,bankInputNames);
        }
        return isOptional;
    }

    public void InputValidations(ApplicationManagerVO applicationManagerVO, ValidationErrorList validationErrorList, boolean isOptional)
    {
        ErrorCodeVO errorCodeVO = new ErrorCodeVO();
        ErrorCodeUtils errorCodeUtils = new ErrorCodeUtils();

        if (!ESAPI.validator().isValidInput("merchantname", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(), "alphanum", 100, isOptional))//alphanum to StrictString
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTNAME);
            validationErrorList.addError("merchantname", new PZValidationException("merchantname",ErrorMessages.INVALID_MERCHANTNAME  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCompany_name(),  errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCompany_name("");
        }
        if (!ESAPI.validator().isValidInput("corporatename", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCompany_name(), "alphanum", 255, isOptional))//alphanum to StrictString
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CORPORATENAME);
            validationErrorList.addError("corporatename", new PZValidationException("corporatename",ErrorMessages.INVALID_CORPORATENAME  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).getCompany_name(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.BUSINESS).setCompany_name("");
        }
        if (!ESAPI.validator().isValidInput("contactname", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getName(), "alphanum", 255, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_CONTACTNAME);
            validationErrorList.addError("contactname", new PZValidationException("contactname",ErrorMessages.INVALID_CONTACTNAME  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).getName(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_contactInfoVOMap().get(ApplicationManagerTypes.MAIN).setName("");
        }
        if (!ESAPI.validator().isValidInput("companyregistrationnumber", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getRegistration_number(), "SafeString", 15, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYREGISTRATIONNUMBER);
            validationErrorList.addError("companyregistrationnumber", new PZValidationException("companyregistrationnumber",ErrorMessages.INVALID_COMPANYREGISTRATIONNUMBER  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getRegistration_number(),  errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setRegistration_number("");
        }
        if (!ESAPI.validator().isValidInput("Company_Date_Registration", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "fromDate", 50, isOptional) || (functions.isValueNull(applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration()) && (functions.isRandomDate(applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "dd/MM/yyyy") || functions.isFutureDate(applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "dd/MM/yyyy")) ))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANY_DATE_REGISTRATION);
            validationErrorList.addError("Company_Date_Registration", new PZValidationException("Company_Date_Registration",ErrorMessages.INVALID_COMPANY_DATE_REGISTRATION + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setDate_of_registration("");
        }
        else if (functions.isValueNull(applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration()))
        {
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setDate_of_registration(commonFunctionUtil.convertDatepickerToTimestamp(applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getDate_of_registration(), "00:00:00"));
        }
        if (!ESAPI.validator().isValidInput("locationaddress", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddress(), "Description", 255, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_LOCATIONADDRESS);
            validationErrorList.addError("locationaddress", new PZValidationException("locationaddress",ErrorMessages.INVALID_LOCATIONADDRESS  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getAddress(),  errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setAddress("");
        }
        if (!ESAPI.validator().isValidInput("vatidentification", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getVatidentification(), "alphanum", 15, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_VATIDENTIFICATION);
            validationErrorList.addError("vatidentification", new PZValidationException("vatidentification",ErrorMessages.INVALID_VATIDENTIFICATION  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getVatidentification(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setVatidentification("");
        }
        if (!ESAPI.validator().isValidInput("merchantzipcode", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getZipcode(), "alphanum", 30, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTZIPCODE);
            validationErrorList.addError("merchantzipcode", new PZValidationException("merchantzipcode",ErrorMessages.INVALID_MERCHANTZIPCODE  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getZipcode(),  errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setZipcode("");
        }
        if (!ESAPI.validator().isValidInput("merchantcountry", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry(), "Description", 100, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_MERCHANTCOUNTRY);
            validationErrorList.addError("merchantcountry", new PZValidationException("merchantcountry",ErrorMessages.INVALID_MERCHANTCOUNTRY  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry(),  errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCountry("");
        }
        else if(functions.isValueNull(applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry()))
        {
            String merchantCountry[] = applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getCountry().split("\\|");
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setCountry(merchantCountry[0].toString());
        }
        if (!ESAPI.validator().isValidInput("Companyphonecc1", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_cc(), "OnlyNumber", 3, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYPHONECC1);
            validationErrorList.addError("Companyphonecc1", new PZValidationException("Companyphonecc1",ErrorMessages.INVALID_COMPANYPHONECC1  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_cc(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setPhone_cc("");
        }
        if (!ESAPI.validator().isValidInput("CompanyTelephoneNO", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_number(), "Phone", 15, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYTELEPHONENO);
            validationErrorList.addError("CompanyTelephoneNO", new PZValidationException("CompanyTelephoneNO",ErrorMessages.INVALID_COMPANYTELEPHONENO  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getPhone_number(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setPhone_number("");
        }
        if (!ESAPI.validator().isValidInput("CompanyEmailAddress", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getEmail_id(), "Email", 255, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_COMPANYEMAILADDRESS);
            validationErrorList.addError("CompanyEmailAddress", new PZValidationException("CompanyEmailAddress",ErrorMessages.INVALID_COMPANYEMAILADDRESS  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getEmail_id(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setEmail_id("");
        }
        if (!ESAPI.validator().isValidInput("urls", applicationManagerVO.getBusinessProfileVO().getUrls(), "CSEURL", 255, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_URLS);
            validationErrorList.addError("urls", new PZValidationException("urls",ErrorMessages.INVALID_URLS  + ":::" + applicationManagerVO.getBusinessProfileVO().getUrls(), errorCodeVO));
            applicationManagerVO.getBusinessProfileVO().setUrls("");
        }
        if (!ESAPI.validator().isValidInput("FederalTaxID", applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getFederalTaxId(), "alphanum", 15, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_FERDERALTAXID);
            validationErrorList.addError("FederalTaxID", new PZValidationException("FederalTaxID",ErrorMessages.INVALID_FERDERALTAXID  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).getFederalTaxId(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().getCompanyProfile_addressVOMap().get(ApplicationManagerTypes.COMPANY).setFederalTaxId("");
        }
        if (!ESAPI.validator().isValidInput("company_typeofbusiness", applicationManagerVO.getCompanyProfileVO().getCompanyTypeOfBusiness(), "company_typeofbusiness", 30, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_COMPANY_TYPE_OF_BUSINESS);
            validationErrorList.addError("company_typeofbusiness", new PZValidationException("company_typeofbusiness",ErrorMessages.INVALID_COMPANY_TYPE_OF_BUSINESS  + ":::" + applicationManagerVO.getCompanyProfileVO().getCompanyTypeOfBusiness(), errorCodeVO));
            applicationManagerVO.getCompanyProfileVO().setCompanyTypeOfBusiness("");
        }
        if (!ESAPI.validator().isValidInput("bankinfo_bank_name", applicationManagerVO.getBankProfileVO().getBankinfo_bank_name(), "alphanum", 100, true))// isOptional to true
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BANK_NAME);
            validationErrorList.addError("bankinfo_bank_name", new PZValidationException("bankinfo_bank_name",ErrorMessages.INVALID_BANKINFO_BANK_NAME  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_bank_name(), errorCodeVO));
            applicationManagerVO.getBankProfileVO().setBankinfo_bank_name("");
        }
        if (!ESAPI.validator().isValidInput("bankinfo_bic", applicationManagerVO.getBankProfileVO().getBankinfo_bic(), "alphanum", 100, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_BIC);
            validationErrorList.addError("bankinfo_bic", new PZValidationException("bankinfo_bic",ErrorMessages.INVALID_BANKINFO_BIC  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_bic(), errorCodeVO));
            applicationManagerVO.getBankProfileVO().setBankinfo_bic("");
        }
        if (!ESAPI.validator().isValidInput("bankinfo_accountholder", applicationManagerVO.getBankProfileVO().getBankinfo_accountholder(), "alphanum", 100, true))// isOptional to true, StrictString to alphanum
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ACCOUNTHOLDER);
            validationErrorList.addError("bankinfo_accountholder", new PZValidationException("bankinfo_accountholder",ErrorMessages.INVALID_BANKINFO_ACCOUNTHOLDER  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_accountholder(), errorCodeVO));
            applicationManagerVO.getBankProfileVO().setBankinfo_accountholder("");
        }
        if (!ESAPI.validator().isValidInput("product_sold_currencies", applicationManagerVO.getBusinessProfileVO().getProduct_sold_currencies(), "AppGateway", 3000, isOptional))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_PRODUCT_SOLD_CURRENCIES);
            validationErrorList.addError("product_sold_currencies", new PZValidationException("product_sold_currencies",ErrorMessages.INVALID_PRODUCT_SOLD_CURRENCIES  + ":::" + applicationManagerVO.getBusinessProfileVO().getProduct_sold_currencies(),"3", errorCodeVO));
            applicationManagerVO.getBusinessProfileVO().setProduct_sold_currencies("");
        }
        if (!ESAPI.validator().isValidInput("bankinfo_IBAN", applicationManagerVO.getBankProfileVO().getBankinfo_IBAN(), "alphanum", 200, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_IBAN);
            validationErrorList.addError("bankinfo_IBAN", new PZValidationException("bankinfo_IBAN",ErrorMessages.IBAN_NOTVALID  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_IBAN(),"3", errorCodeVO));
            applicationManagerVO.getBankProfileVO().setBankinfo_IBAN("");
        }
        if (!ESAPI.validator().isValidInput("bankinfo_accountnumber", applicationManagerVO.getBankProfileVO().getBankinfo_accountnumber(), "alphanum", 50, true))
        {
            errorCodeVO = errorCodeUtils.getMafErrorCode(ErrorName.MAF_VALIDATION_NAME_BANKINFO_ACCOUNTNUMBER);
            validationErrorList.addError("bankinfo_accountnumber", new PZValidationException("bankinfo_accountnumber",ErrorMessages.INVALID_ACCOUNT_NUMBER  + ":::" + applicationManagerVO.getBankProfileVO().getBankinfo_accountnumber(),"3", errorCodeVO));
            applicationManagerVO.getBankProfileVO().setBankinfo_accountnumber("");
        }
    }

    //Dependency for direct adding
    private boolean setDirectDependencyBankInputValidation(Map<Boolean,Set<BankInputName>> bankInputBooleanSetMap,BankInputName bankInputName,boolean inputBoolean)
    {
        boolean isOptional=true;
        Set<BankInputName> bankInputNameSet=new HashSet<BankInputName>();
        if(bankInputName!=null)
        {
            isOptional=inputBoolean;

            if(bankInputBooleanSetMap.containsKey(isOptional))
            {
                bankInputNameSet=bankInputBooleanSetMap.get(isOptional);
                bankInputNameSet.add(bankInputName);
            }
            else
            {
                bankInputNameSet=new HashSet<BankInputName>();
                bankInputNameSet.add(bankInputName);
            }

            bankInputBooleanSetMap.put(isOptional,bankInputNameSet);
        }
        return isOptional;
    }
}