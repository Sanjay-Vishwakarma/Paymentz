# The ESAPI validator does many security checks on input, such as canonicalization
# and whitelist validation. Note that all of these validation rules are applied *after*
# canonicalization. Double-encoded characters (even with different encodings involved,
# are never allowed.
#
# To use:
#
# First set up a pattern below. You can choose any name you want, prefixed by the word
# "Validation." For example:
#   Validation.Email=^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[a-zA-Z]{2,4}$
# 
# Then you can validate in your code against the pattern like this:
#     ESAPI.validator().isValidInput("User Email", input, "Email", maxLength, allowNull);
# Where maxLength and allowNull are set for you needs, respectively.
#
# But note, when you use boolean variants of validation functions, you lose critical 
# canonicalization. It is preferable to use the "get" methods (which throw exceptions) and 
# and use the returned user input which is in canonical form. Consider the following:
#  
# try {
#    someObject.setEmail(ESAPI.validator().getValidInput("User Email", input, "Email", maxLength, allowNull));
#
Validator.SafeString=^\\S[.\\p{Alnum}\\ \\p{L}\\P{M}\\p{M}]{0,1024}$
#Validator.SafeString=^[.\\p{Alnum}\\p{Space}\\-\\p{L}\\P{M}\\p{M}]{0,1024}$
#Validator.SafeString=^[a-zA-Z0-9]+$
Validator.Email=^[A-Za-z0-9._%'-]+@[A-Za-z0-9.-]+\\.[a-zA-Z]{2,8}$
Validator.IPAddress=^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
#Validator.URL=^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/\\\\\\+=&amp;%\\$#_]*)?$|^[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/\\\\\\+=&amp;%\\$#_]*)?$
#Validator.URL=^([htpfs]{3,5}\\:?\\/\\/[\\w\\.\\:\\/]*\\??[a-zA-Z0-9\\&\=]*)$
#Validator.URL=^([htpfs]{3,5}\\:?\\/\\/[\\w\\.\\:\\/]*\\??[a-zA-Z0-9\\&!@()-_%#\=\\?]*)$|^([a-zA-Z0-9\\&!@()-_%#\=\\?]*)$|^([a-zA-Z0-9\\&!@()-_%#\=\\?]*)$|^([a-zA-Z0-9\\&!@()-_%#\=\\?]*)$
#Validator.URL=^([htpfs]{3,5}\\:?\\/\\/[\\w\\.\\:\\/]*\\??[a-zA-Z0-9\\&\=\\_\\-%!@#]*)$
Validator.URL=^([htpfs]{3,5}\\:?\\/\\/[\\w\.\\:\\/\\-]*\\??[a-zA-Z0-9\\&\\=\\_\\-%!@#]*)$
#Validator.URL=^[htpfs]{3,5}:?\\/\\/(www.)([a-zA-Z0-9].)([a-zA-Z0-9]).*([a-z]){3}\\/?[a-zA-Z0-9\\&\=\\_\\-%!@#]*$
Validator.CreditCard=^(\\d{4}[- ]?){3}\\d{4}$
Validator.SSN=^(?!000)([0-6]\\d{2}|7([0-6]\\d|7[012]))([ -]?)(?!00)\\d\\d\\3(?!0000)\\d{4}$
#Added to validate phone number
Validator.SignupPhone=^[-+.#0-9]{1,24}$
Validator.Phone=^[+]?([0-9]*[\\.\\s\\-\\(\\)]|[0-9]+){1,24}$
#Password should be at least eight (4) characters in length where the system can support it.
#Passwords must include characters from at least two (2) of these groupings: alpha, numeric, and special characters.
#currently supporting only alphabets and only numeric password also
#Validator.Password=^.*(?=.{4,20})(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%]*$|(?=.{4,20})(?=.*\\d)[a-zA-Z0-9!@#$%]*$
Validator.Password=^\\S[.*(?=.{4,20})(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%]*$|(?=.{4,20})(?=.*\\d)[a-zA-Z0-9!@#$%]]*$
Validator.LoginId=^([a-zA-Z0-9@_-]*)$
#Password should be at least eight (8) characters in length where the system can support it.
#Passwords must include characters from : alpha, numeric, and special characters.
Validator.NewPassword=^.*(?=.{8,20})(?=.*\\d)(?=.*[a-zA-Z])(?=.*[!@#$%])[a-zA-Z0-9!@#$%]*$
Validator.OrganizationType=^(Propritory|Partnership|Private|Public)$
#Validates a U.S. ZIP Code. The code must consist of 5 or 9 numeric characters.
#Numeric Value from 1 to 10 are valid
#Validator.Zip=^(\\d{5}-\\d{4}|\\d{5}|\\d{9})$|^([a-zA-Z]\\d[a-zA-Z]\\d[a-zA-Z]\\d)$|^.{1,10}\\d$
Validator.Zip = ^[a-zA-Z\\d\\-\\s]{4,9}$
Validator.Days=^(([1-9])|(0[1-9])|(1[0-9])|(2[0-9])|(3[0-1]))$
Validator.Months=^(([0-9])|(0[1-9])|(1[0-2]))$
#Validator.Years=^((200[0-9])|(201[0-9])|(202[0-9]))$
Validator.Years=^((200[0-9])|(201[0-9])|(202[0-9])|(203[0-9]))$
Validator.Numbers=^.*\\d$
Validator.Status=^(begun|authstarted|proofrequired|authsuccessfull|authfailed|capturestarted|capturesuccess|capturefailed|podsent|settled|markedforreversal|reversed|chargeback|failed|cancelled|authcancelled)$
Validator.Archive=^(true|false)$
Validator.Mailtype=^(0|1)$
#Validator.CC=^((4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14}))$
#Validator.CC=^((4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11}))$
Validator.date=^([a-zA-Z0-9\\-\\.\\/\\p{Space}]*)$
Validator.Statues=^(Y|N|T)$
Validator.Acctype=^(CD|SB|OD)$
Validator.color=^(#?([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})? || \\p{Alnum})$
Validator.Amount=^(\\d*\\.?\\d*[0-9]+\\d*$)|^([0-9]+\\d*\\.\\d*)$
#Added to allow special characters in Address
Validator.Address=^[\\p{L}\\P{M}\\p{M}\\n\\ra-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()_+\\-=,*.~'` ]{0,1000}$
Validator.AppAddress=^\\S[.\\p{Alnum}\\ \\p{L}\\P{M}\\p{M}]{0,1000}$
Validator.CountryCode = ^([0-9]{2,3}|[a-zA-Z]{2,3})$
Validator.CVV=^[\\d]{3,4}$
Validator.AmountStr=^([0-9]+\\d*\\.\\d{2})$
#Validator.alphanum=^[a-zA-Z0-9]+$
#Validator.alphanum=^[a-zA-Z0-9\\p{Space}\\,]+$
Validator.alphanum=^\\S[a-zA-Z0-9\\ \\,]+$
#Validator.StrictString=^[a-zA-Z]+$
Validator.StrictString=^\\S[(a-zA-Z )]+$
Validator.Description=^\\S[.\\p{Alnum}\\ \\-_]{0,1024}$
Validator.Datasource=^(all|common|ecore|qwipi|all_details|common_details|ecore_details|qwipi_details)$
Validator.ShipStatus=^(\\bProcesed\\S*|\\bDispatched\\S*|\\bShipped\\S*|\\bLocal\\S*)$
Validator.AmountMinus=^(\\-[0-9]+\\d*\\.\\d{2}|[0-9]+\\d*\\.\\d{2})$
Validator.FirstSixcc=^(\\d{6})$
Validator.LastFourcc=^(\\d{4})$
Validator.CSEURL=^([a-zA-Z]{3,5}((\\.){1}|(\\W){1}\/\/)[a-zA-Z\\S]{0,4}[a-zA-Z\\S]*(\\.)[a-zA-Z]{2,5}(\\.?)[A-Za-z]{0,3})$
Validator.isPaid=^(all|paid|unpaid)
Validator.fromDate=^(([0123][0-9])\/([01][0-9])\/([0-9]{2,4}))$
Validator.toDate=^(([0123][0-9])\/([01][0-9])\/([0-9]{2,4}))$
#Validator.CommaSeprateNum=^[0-9]+(,[0-9]+)*$
Validator.CommaSeprateNum=^[0-9]+([\\,\\s]+[0-9]+)*$
Validator.fileName=^([a-zA-Z0-9\\w]*+\\.(pdf|xls))$
Validator.Action=^([a-zA-Z0-9]*+\\_(View|Edit|Update|Add|Delete))$
Validator.isYN=^(Y|N)$
#Validator.City=^[\\p{L}\\P{M}\\p{M}\\n\\ra-zA-Z0-9:/\\\\#&\\p{Space}\\-;.,' ]{0,1000}$
Validator.State=^[\\ra-zA-Z0-9\\\\!@#$*%^&©{}\\[\\]()_+\\p{L}\\p{M}\\-=,.~'` ]{0,1000}$
Validator.City=^[a-zA-Z0-9\\\\#&©\\p{Space}\\p{L}\\p{M}\\-;.,~` ]{0,1000}$
Validator.reportFile=^([a-zA-Z0-9\\w]*+\\.(pdf))$
Validator.transactionFile=^([a-zA-Z0-9\\w]*+\\.(xls))$
#Validator.time=^((([0-1]{1}[0-9]{1})|([2]{1}[0-4]{1}))\:(([0-5]{1}[0-9]{1})|([6]{1}[0]{1}))\:(([0-5]{1}[0-9]{1})|([6]{1}[0]{1})))$
Validator.time=^(2[0-3]|1[0-9]|0[0-9]|[^0-9][0-9]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])$
#Validator.OnlyNumber=^\\d*$
Validator.OnlyNumber=^\\S(\\d)*$
Validator.Percentage=^((([0]{1}[0-9]{1}[1-9]{1})|([1]{1}[0]{1}[0]{1})|([0]{1}[1-9]{1}[0-9]{1}))|(([0]{1}[1-9]{1})|([1-9]{1}[0-9]{1}))|([1-9]{1}))$
Validator.recurring=^((Y|y)\\|(day|month|year)\\|((1[0-9])|(2[0-9])|(3[0-1])|([1-9]))\\|((1[0-9])|(2[0-8])|([1-9])))$
Validator.isCardDataStored=^(Merchant|ThirdParty|Both)$
Validator.isBuildingType=^(ShoppingCtr|OfficeBldg|IndustrialBldg|Residence)$
Validator.isAreaZoned=^(Commercial|Industrial|Residential)$
Validator.isSquareFootage=^(0-500|501-2500|2501-5000|5001-10000+)$
Validator.toIdStatus=^([0-9]*+\\|(SAVED|SUBMIT|DENIED|APPROVED))$
Validator.birthdate=^(0[1-9]|1[0-9]|2[0-9]|3[0-1])(0[1-9]|1[0-2])([0-9]{4})$
Validator.payMitco=^((cc|CC|pc|PC|PS|ps)\\|\\d*\\|\\d*{9})$
Validator.USPSAddress=^([a-z\\p{Space}A-Z\\p{Space}\\.0-9]*)$
Validator.USPSZip=^([\\d*]{5}|[\\d*]{5}-[\\d*]{4})$
Validator.UserName=^([a-zA-Z0-9_-]*)$
#Validator.HostURL=^([a-zA-Z]*(\\.)[a-zA-Z]*(\\.?)[A-Za-z]{0,3})$
Validator.HostURL=^([a-zA-Z]*(\\.)[a-zA-Z]*(\\.?)[A-Za-z]{0,3})*(\\.?)$
#REST validators
Validator.alphaNumPhone = ^([a-zA-Z0-9\+-.]{6,25})$
Validator.tenDigitAmount = ^([0-9]{1,10}\.[0-9]{2})$
Validator.recurringType = ^((REPEATED|repeated|INITIAL|initial))$
Validator.createRegistration = ^((TRUE|true|FALSE|false))$
Validator.bic = ^[a-zA-Z0-9]{8}|[a-zA-Z0-9]{11}$
Validator.iban = ^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{11,27}$
Validator.Language=^(ENG|CHN|RUS)$
Validator.onlyAlphanum = ^[a-zA-Z0-9]{2,1000}$
Validator.StrictString2=^[a-zA-Z\\p{Space}\\,]+$
#Application Manager API
Validator.company_typeofbusiness=^(Corporation|LimitedLiabilityCompany|SoleProprietor|Partnership|NotforProfit)$
Validator.currency_unit=^(USD|EUR|GBP|JPY|PEN|CAD|AUD|INR|BGN)$
Validator.timeframe=^(daily|weekly|monthly|quaterly|yearly)$
Validator.billing=^(recurring|one_time)$
Validator.identificationtypeselect =^(Passport|DriverLicense|NationalID)$
Validator.Title = ^(MR|MRS|MS|MISS|MASTER|DR)$
Validator.actionType = ^((GET|get|DELETE|delete|set|SET))$
#For PCI
Validator.Login=^[.\\p{Alnum}\\p{Space}\\-\\p{L}\\P{M}\\p{M}]{0,1024}$
Validator.contactName=^([a-zA-Z0-9\\.\\-\\_\\p{Space}]*)$
Validator.companyName=^([a-zA-Z0-9\\.\\&\\,\\/\\-\\p{Space}]*)$
Validator.organizationName=^([a-zA-Z0-9\\.\\&\\,\\/\\-]*)$
Validator.merchantid=^([a-zA-Z0-9\\.@_-]*)$
Validator.smtphost=^([a-zA-Z0-9\\.]*)$
Validator.smtpuser=^([a-zA-Z0-9\\.\\@]*)$
Validator.wspasswd=^([a-zA-Z0-9\\=\\:\\;]*)$
Validator.mailsubject=^([a-zA-Z0-9\\@\\-\\:\\p{Space}]*)$
Validator.transactionType = ^((PA|CP|DB|CD|RF|RV|IN|DL))$
#Validator.CC=^((4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(2[2-7][0-9]{14})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|(?:2131|1800|35[0-9]{3})[0-9]{11})$
#Validator.CC=^((4[0-9]{12}(?:[0-9]{3}|[0-9]{6})?)|(5[1-5][0-9]{14})|(2[2-7][0-9]{14})|(3[47][0-9]{13})|3(?:0[0-5]|[68][0-9])[0-9]{11}|(54|55)[0-9]{14}|(65[4-9][0-9]{13})|(64[4-9][0-9]{13})|(6011(?:[0-9]{12}|[0-9]{15})?)|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})|(63[7-9][0-9]{13})|(5018|5020|5038|5893|6304|6759|6761|6763|5450)([0-9]{12}|[0-9]{15})|(4026|4175|4508|4844|4913|4917)([0-9]{12})|(?:2131|1800|35[0-9]{3})([0-9]{11}|[0-9]{14}))$
Validator.CC=^((4[0-9]{12}(?:[0-9]{3}|[0-9]{6})?)|(5[1-5][0-9]{14})|(2[2-7][0-9]{14})|(3[47][0-9]{13})|3(?:0[0-5]|[68][0-9])[0-9]{11}|(54|55)[0-9]{14}|(65[4-9][0-9]{13})|(64[4-9][0-9]{13})|(6011(?:[0-9]{12}|[0-9]{15})?)|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})|(63[7-9][0-9]{13})|(5018|5020|5038|5893|6304|6759|6761|6763|5450)([0-9]{12}|[0-9]{15})|(?:2131|1800|35[0-9]{3})([0-9]{11}|[0-9]{14}))$
Validator.accounttype=^((PC|pc|PS|ps|CC|cc))$
Validator.gender=^((FEMALE|MALE|female|male))$
Validator.AlphanumSpace=^\\S[(a-zA-Z0-9 )]*$
Validator.AppGateway=^\\S[(a-zA-Z0-9 ,|)]+$
Validator.AppCountry=^\\S[(a-zA-Z0-9 |)]+$
Validator.NDigitsAmount=^([0-9]+\\d*\\.\\d*)$
Validator.Domain=^([htpfs]{3,5}\\:?\\/\\/[\\w\\.\\:\\,\\/]*\\??[a-zA-Z0-9\\&\=\\_\\-%!@#]*)$
Validator.colorForTemplate=^(#[a-zA-Z0-9]{1,10})|([a-zA-Z]{3,10})$
Validator.Amount5Digit=^([0-9]+\\d*\\.\\d{5})$


#Application Manager API

Validator.addressProofSelect =^(UtilityBill|License)$


#Release_5_3_0 specific validations
Validator.Version=^\\S[.*(?=.{4,20})(?=.*[a-zA-Z])[a-zA-Z0-9]|(?=.{4,20})(?=.*\\d)[a-zA-Z0-9]]*$

#Added
Validator.AppTerminalType=^((onetime_terminal|moto_terminal|recurring_terminal|3dsecure_terminal|other_terminal))$
Validator.goodsDelivery=^((over_internet|1_5days|6_13days|14days))$
Validator.AppPaymentDelivery=^((upon_purchase|with_download|on_delivery|payment_delivery_other))$

Validator.IPAddressNew=^([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])$