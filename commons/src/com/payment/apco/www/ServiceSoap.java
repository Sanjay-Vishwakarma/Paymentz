/**
 * ServiceSoap.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.payment.apco.www;

public interface ServiceSoap extends java.rmi.Remote {

    /**
     * Process PSP Transaction
     */
    public String doTransaction(String merchID, String pass, String trType, String cardNum, String CVV2, String expDay, String expMonth, String expYear, String cardHName, String amount, String currencyCode, String addr, String postCode, String transID, String userIP, String UDF1, String UDF2, String UDF3) throws java.rmi.RemoteException;
    //public java.lang.String bypassAcquirerProcessing(java.lang.String merchID, java.lang.String pass, java.lang.String trType, java.lang.String cardNum, java.lang.String CVV2, java.lang.String expDay, java.lang.String expMonth, java.lang.String expYear, java.lang.String cardHName, java.lang.String amount, java.lang.String currencyCode, java.lang.String addr, java.lang.String postCode, java.lang.String transID, java.lang.String userIP, java.lang.String UDF1, java.lang.String UDF2, java.lang.String UDF3, java.lang.String bankCode, java.lang.String bankResponse, java.lang.String bankAccept, java.lang.String bankTransID, java.lang.String authCode) throws java.rmi.RemoteException;

    /**
     * 3D Secure Card Check
     */
    //public java.lang.String do3DSTransaction(java.lang.String merchID, java.lang.String merchPassword, java.lang.String trType, java.lang.String cardNum, java.lang.String CVV2, java.lang.String expDay, java.lang.String expMonth, java.lang.String expYear, java.lang.String cardHName, java.lang.String amount, java.lang.String currencyCode, java.lang.String addr, java.lang.String postCode, java.lang.String transID, java.lang.String userIP, java.lang.String UDF1, java.lang.String UDF2, java.lang.String UDF3, java.lang.String orderRef) throws java.rmi.RemoteException;
    //public java.lang.String s3DProcess(java.lang.String password, java.lang.String method, java.lang.String ticket3D) throws java.rmi.RemoteException;

    /**
     * Retrieve VbV Signature
     */
    //public java.lang.String getVbVSignature(java.lang.String merchID, java.lang.String merchPassword, java.lang.String ticket3D) throws java.rmi.RemoteException;

    /**
     * Gets Transaction Dynamic Descriptor
     */
    //public java.lang.String getDDR(java.lang.String merchID, java.lang.String password, java.lang.String transID) throws java.rmi.RemoteException;

    /**
     * Batch Text Upload Service
     */
    //public boolean setBatchFile(java.lang.String merchID, java.lang.String password, java.lang.String batchFile, java.lang.String delimiter, javax.xml.rpc.holders.StringHolder strReturn) throws java.rmi.RemoteException;

    /**
     * BatchText Download Service
     */
    //public java.lang.String getBatchFile(java.lang.String merchID, java.lang.String password, java.lang.String batchRef) throws java.rmi.RemoteException;

    /**
     * Get Merchant Currencies, Acquirers & Cards
     */
    //public java.lang.String getMerchantInfo(java.lang.String MCHCode, java.lang.String MCHPass) throws java.rmi.RemoteException;

    /**
     * Get transactions which are not generated by AM Portal
     */
    //public biz.apsp.www.GetNextAMTransactionsResponseGetNextAMTransactionsResult getNextAMTransactions(java.lang.String MCHCode, java.lang.String MCHPass, java.lang.String sDate, boolean bankAccept, java.lang.String trntype, java.lang.String IPAddress) throws java.rmi.RemoteException;

    /**
     * Set Checkout Page Read Receipt
     */
    //public boolean checkoutReadReceipt(java.lang.String MCHCode, java.lang.String MCHPass, java.lang.String PSPTransID, javax.xml.rpc.holders.StringHolder sError) throws java.rmi.RemoteException;

    /**
     * Get 3DSecure Transaction Status
     */
    //public java.lang.String get3DSTransactionStatus(java.lang.String MCHCode, java.lang.String MCHPass, java.lang.String ticket3D) throws java.rmi.RemoteException;

    /**
     * Get Transaction Status
     */
    //public java.lang.String getTransactionStatus(java.lang.String merchID, java.lang.String merchPass, java.lang.String ORef) throws java.rmi.RemoteException;

    /**
     * Check if card needs to be verified by SVP
     */
    //public void isCardPendingSVPVerification(java.lang.String merchID, java.lang.String merchPass, java.lang.String cardHash, biz.apsp.www.IsCardPendingSVPVerificationSVPTransaction SVPTransaction, javax.xml.rpc.holders.BooleanHolder isCardPendingSVPVerificationResult, biz.apsp.www.holders.IsCardPendingSVPVerificationResponseSVPTransactionHolder SVPTransaction2) throws java.rmi.RemoteException;

    /**
     * Verify SVP
     */
    //public boolean verifySVP(java.lang.String merchID, java.lang.String merchPass, java.lang.String cardHash, java.lang.String SVP) throws java.rmi.RemoteException;

    /**
     * Verify SVP
     */
    //public boolean setOnHold(java.lang.String merchID, java.lang.String merchPass, java.lang.String transID) throws java.rmi.RemoteException;
    //public java.lang.String processBankPMTransaction(java.lang.String XMLReq) throws java.rmi.RemoteException;
}
